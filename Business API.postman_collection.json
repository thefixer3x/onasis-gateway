{
	"info": {
		"_postman_id": "17ea09e9-176b-4b8d-a6ec-12be36e662a8",
		"name": "Business API",
		"description": "## Introduction\n\nAs a Revolut Business customer, you can use the Business API to automate your own business processes. Save time, reduce your costs, and avoid errors by using the Business API.\n\nYou can view accounts, manage counterparties, make payments or currency exchanges without manual effort in the Web UI.\n\nTo get started using the Business API, check the [user guide](https://developer.revolut.com/docs/manage-accounts/).\n\n## Access Token[​](https://developer.revolut.com/docs/business/business-api#access-token)\n\nEach Business API request must contain an authorization header in the following format to make a call:\n\n``` json\n\"Authorization: Bearer <your_access_token>\"\n\n ```\n\nThe access token will be obtained the first time you set up your application and has an expiration of 40 minutes. During setup, a `refresh_token` will also be obtained which allows to obtain a new `access_token`.\n\nAccess tokens can be issued with four security scopes and require a JWT (JSON Web Token) signature to be obtained:\n\n- `READ`: Permissions for `GET` operations.\n- `WRITE`: Permissions to update counterparties, webhooks, and issue payment drafts.\n- `PAY`: Permissions to initiate or cancel transactions and currency exchanges.\n- `READ_SENSITIVE_CARD_DATA`: Permissions to retrieve sensitive card details.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43116137",
		"_collection_link": "https://www.postman.com/revolut-api/revolut-developers/collection/6h0pnmu/business-api?action=share&source=collection_link&creator=43116137"
	},
	"item": [
		{
			"name": "Credentials",
			"item": [
				{
					"name": "Create Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Storing refresh token\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"description": "The OAuth grant type. In case of first token obtention, should be `authorization_code`.",
									"type": "text"
								},
								{
									"key": "code",
									"value": "",
									"description": "The authorization code obtained from the redirect URI after successful user consent. ",
									"type": "text"
								},
								{
									"key": "client_assertion_type",
									"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
									"description": "Client assertion type. Fixed value. ",
									"type": "text"
								},
								{
									"key": "client_assertion",
									"value": "{{jwt}}",
									"description": "JWT token generated for authenticating the request. See [documentation](https://developer.revolut.com/docs/manage-accounts/get-started/make-your-first-api-request#2-generate-a-client-assertion)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/1.0/auth/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"auth",
								"token"
							]
						},
						"description": "Endpoint used to exchange authorization code for access token.\n\n[Documentation](https://developer.revolut.com/docs/manage-accounts/get-started/make-your-first-api-request#4-exchange-authorization-code-for-access-token)"
					},
					"response": [
						{
							"name": "Create Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "code",
											"value": "<code>",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "<client_id>",
											"type": "text"
										},
										{
											"key": "client_assertion_type",
											"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
											"type": "text"
										},
										{
											"key": "client_assertion",
											"value": "<jwt>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/1.0/auth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"auth",
										"token"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"access_token\": \"oa_sand_rPo9OmbMAuguhQffR6RLR4nvtest4NJtpdyvGKkrS3U\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": 2399,\n    \"refresh_token\": \"oa_prod_hQacSGnwx-luIfj3dlVByrytestrWAnyHkpJTwG_Tr8\"\n}"
						}
					]
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Storing access token\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"description": "The OAuth grant type. In case of needing to refresh token, should be `refresh_token`.",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}",
									"description": "Refresh token obtained in the response of the first access token creation.",
									"type": "text"
								},
								{
									"key": "client_assertion_type",
									"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
									"description": "Client assertion type. Fixed value. ",
									"type": "text"
								},
								{
									"key": "client_assertion",
									"value": "{{jwt}}",
									"description": "JWT token generated for authenticating the request. See [documentation](https://developer.revolut.com/docs/manage-accounts/get-started/make-your-first-api-request#2-generate-a-client-assertion)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/1.0/auth/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"auth",
								"token"
							]
						},
						"description": "When the `access_token` expires, you will need to request a new one using this endpoint.\n\n[Documentation](https://developer.revolut.com/docs/manage-accounts/get-started/make-your-first-api-request#refresh-access-token)"
					},
					"response": [
						{
							"name": "Refresh Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "refresh_token",
											"type": "text"
										},
										{
											"key": "refresh_token",
											"value": "<refresh_token>",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "<client_id>",
											"type": "text"
										},
										{
											"key": "client_assertion_type",
											"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
											"type": "text"
										},
										{
											"key": "client_assertion",
											"value": "<jwt>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/1.0/auth/token",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"auth",
										"token"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"access_token\": \"oa_prod_rPo9OmbMAuguhQffR6testnvmzpx4NJtpdyvGKkrS3U\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": 2399\n}"
						}
					]
				}
			],
			"description": "Each Business API request must contain an authorization header in the following format to make a call: `Bearer` .\n\nThe access token will be obtained the first time you set up your application and has an expiration of 40 minutes. During setup, a `refresh_token` will also be obtained which allows to obtain a new `access_token`.\n\n[Documentation](https://developer.revolut.com/docs/api-reference/business#section/Authentication)",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"navigator={}",
							"window={}",
							"",
							"// make backwards compatible ",
							"// if only calculate `jwt` if `private_key` and `redirect_domain` env variables are defined",
							"if(pm.environment.has('private_key') && pm.environment.get('private_key') !== '' && pm.environment.has('redirect_domain')){",
							"",
							"    pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
							"        if (error) {",
							"            pm.expect.fail(error.message);",
							"        }",
							"        if (response.code !== 200) {",
							"            pm.expect.fail('Could not load external library.');",
							"        }",
							"        ",
							"        eval(response.text());",
							"        ",
							"        try {",
							"            let private_key = KEYUTIL.getKey(pm.environment.get(\"private_key\"))",
							"        } catch (ex) {",
							"            pm.expect.fail(\"private_key is provided but is in incorrect format. Check your environment variables.\")",
							"        }",
							"",
							"        var header = {",
							"            \"alg\": \"RS256\",",
							"            \"typ\": \"JWT\"",
							"        };",
							"        var body = {",
							"            \"iss\": pm.environment.get('redirect_domain'),",
							"            \"sub\": pm.environment.get('client_id'),",
							"            \"aud\": \"https://revolut.com\",",
							"            \"exp\": Math.floor(+new Date() / 1000) + 5 * 60",
							"        }",
							"        ",
							"        try {",
							"            sResult = KJUR.jws.JWS.sign(\"RS256\", header, body, pm.environment.get(\"private_key\"));",
							"            pm.environment.set(\"jwt\", sResult);",
							"        } catch (ex) {",
							"            console.error(\"Error: \" + ex);",
							"            pm.expect.fail(\"Error generating client_assertion: \" + ex)",
							"        }",
							"});",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Retrieve all accounts ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/accounts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"accounts"
							]
						},
						"description": "Get a list of all your accounts.\n\n[API Reference](https://developer.revolut.com/docs/api-reference/business#tag/Accounts/operation/getAccounts)"
					},
					"response": [
						{
							"name": "Retrieve all accounts ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/accounts",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"b7ec67d3-5af1-42c8-bece-3d28nlmo894d\",\n        \"name\": \"International account\",\n        \"balance\": 3171.89,\n        \"currency\": \"GBP\",\n        \"state\": \"active\",\n        \"public\": false,\n        \"created_at\": \"2022-08-05T14:29:22.215785Z\",\n        \"updated_at\": \"2022-08-05T14:29:22.215785Z\"\n    }\n]"
						}
					]
				},
				{
					"name": "Retrieve an account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/accounts/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": null,
									"description": "The ID of the account to retrieve."
								}
							]
						},
						"description": "Get the information about a specific account by ID."
					},
					"response": [
						{
							"name": "Retrieve an account",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/accounts/{accountId}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"accounts",
										"{accountId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"b7ec67d3-5af1-42c8-bece-3d28nlmo894d\",\n    \"name\": \"International account\",\n    \"balance\": 3171.89,\n    \"currency\": \"GBP\",\n    \"state\": \"active\",\n    \"public\": false,\n    \"created_at\": \"2022-08-05T14:29:22.215785Z\",\n    \"updated_at\": \"2022-08-05T14:29:22.215785Z\"\n}"
						}
					]
				},
				{
					"name": "Retrieve account's bank detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/accounts/:id/bank-details",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"accounts",
								":id",
								"bank-details"
							],
							"variable": [
								{
									"key": "id",
									"value": null,
									"description": "The ID of the account to retrieve all bank details."
								}
							]
						},
						"description": "Get all the bank details of a specific account.\n\n[API Reference](https://developer.revolut.com/docs/api-reference/business#tag/Accounts/operation/getAccountDetails)"
					},
					"response": [
						{
							"name": "Retrieve account's bank detail",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/accounts/{accountId}/bank-details",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"accounts",
										"{accountId}",
										"bank-details"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "[\n    {\n        \"iban\": \"GB66REVO00996995908888\",\n        \"bic\": \"REVOGB21\",\n        \"beneficiary\": \"International account\",\n        \"beneficiary_address\": {\n            \"street_line1\": \"Revolut LTD\",\n            \"street_line2\": \"1 Canada Square\",\n            \"city\": \"London\",\n            \"country\": \"GB\",\n            \"postcode\": \"E14 5AB\"\n        },\n        \"bank_country\": \"GB\",\n        \"pooled\": false,\n        \"schemes\": [\n            \"swift\"\n        ],\n        \"estimated_time\": {\n            \"unit\": \"days\",\n            \"min\": 1,\n            \"max\": 3\n        }\n    }\n]"
						}
					]
				}
			],
			"description": "Get the balances, full banking details, and other details of your business accounts.\n\nFor more information, see the guides: [Get your account details](https://developer.revolut.com/docs/guides/manage-accounts/accounts-and-transactions/manage-your-accounts)."
		},
		{
			"name": "Cards",
			"item": [
				{
					"name": "Retrieve a list of cards",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/cards",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"cards"
							],
							"query": [
								{
									"key": "created_before",
									"value": "2023-09-11T15:10:53.570554Z",
									"description": "Retrieves cards with created_at < created_before. The default value is the current date and time at which you are calling the endpoint.\n\nProvided in ISO 8601 format.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"description": "The maximum number of cards returned per page.\n\nTo get to the next page, make a new request and use the created_at date of the last card returned in the previous response as the value for created_before.",
									"disabled": true
								}
							]
						},
						"description": "Get the list of all cards in your organisation.\n\nThe results are paginated and sorted by the `created_at` date in reverse chronological order."
					},
					"response": [
						{
							"name": "Retrieve a list of cards",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/cards",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"cards"
									],
									"query": [
										{
											"key": "created_before",
											"value": "2023-09-11T15:10:53.570554Z",
											"description": "Retrieves cards with created_at < created_before. The default value is the current date and time at which you are calling the endpoint.\n\nProvided in ISO 8601 format.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"description": "The maximum number of cards returned per page.\n\nTo get to the next page, make a new request and use the created_at date of the last card returned in the previous response as the value for created_before.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2024 11:31:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "M6VPQR6I7H2I"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"aa14a9af-d7a7-4214-a743-lok818f74bd0\",\n        \"last_digits\": \"2671\",\n        \"expiry\": \"09/2027\",\n        \"state\": \"active\",\n        \"holder_id\": \"173ab846-de2a-1234-5678-160bd2e660e6\",\n        \"label\": \"Kirby Janette\",\n        \"virtual\": true,\n        \"product\": {\n            \"code\": \"MBJ\"\n        },\n        \"accounts\": [\n            \"f52c6c84-26b9-4e95-bbcf-99ed6523fb51\"\n        ],\n        \"categories\": [\n            \"restaurants\",\n            \"groceries\"\n        ],\n        \"spend_program\": {\n            \"label\": \"Office supplies\"\n        },\n        \"spending_limits\": {\n            \"single\": {\n                \"amount\": 200.22,\n                \"currency\": \"GBP\"\n            },\n            \"month\": {\n                \"amount\": 200.44,\n                \"currency\": \"GBP\"\n            }\n        },\n        \"created_at\": \"2022-09-15T11:04:11.047305Z\",\n        \"updated_at\": \"2024-08-17T08:32:11.024721Z\"\n    },\n    {\n        \"id\": \"b8b56da4-1fde-4320-a8d7-cb7560252f7e\",\n        \"last_digits\": \"2672\",\n        \"expiry\": \"09/2027\",\n        \"state\": \"active\",\n        \"virtual\": false,\n        \"created_at\": \"2022-09-15T11:04:11.047305Z\",\n        \"updated_at\": \"2022-09-15T11:04:11.047305Z\"\n    }\n]"
						}
					]
				},
				{
					"name": "Create a card",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request_id\": \"7a10f3eb-fe56-4699-9bd0-044a63508828\",\n    \"virtual\": true,\n    \"holder_id\": \"173ab846-de2a-1234-5678-160bd2e660e6\",\n    \"label\": \"Kirby Janette\",\n    \"accounts\": [\n        \"75aa436d-2a04-4ab9-af14-ed0955769b8c\"\n    ],\n    \"categories\": [\n        \"groceries\",\n        \"restaurants\"\n    ],\n    \"spending_limits\": {\n        \"single\": {\n            \"amount\": 200.22,\n            \"currency\": \"GBP\"\n        },\n        \"week\": {\n            \"amount\": 200.44,\n            \"currency\": \"GBP\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1.0/cards",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"cards"
							]
						},
						"description": "Create a new card for an existing member of your Revolut Business [team](https://developer.revolut.com/docs/business/team-members).\n\nWhen using the API, you can create only virtual cards. To create a physical card, use the [Revolut Business app](https://business.revolut.com/signin)."
					},
					"response": [
						{
							"name": "Create a card",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request_id\": \"7a10f3eb-fe56-4699-9bd0-044a63508828\",\n    \"virtual\": true,\n    \"holder_id\": \"173ab846-de2a-1234-5678-160bd2e660e6\",\n    \"label\": \"Kirby Janette\",\n    \"accounts\": [\n        \"75aa436d-2a04-4ab9-af14-ed0955769b8c\"\n    ],\n    \"categories\": [\n        \"groceries\",\n        \"restaurants\"\n    ],\n    \"spending_limits\": {\n        \"single\": {\n            \"amount\": 200.22,\n            \"currency\": \"GBP\"\n        },\n        \"week\": {\n            \"amount\": 200.44,\n            \"currency\": \"GBP\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/cards",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"cards"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2024 11:33:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "QBOO8Z488OQH"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"aa14a9af-d7a7-4214-a743-lok818f74bd0\",\n    \"last_digits\": \"2671\",\n    \"expiry\": \"09/2027\",\n    \"state\": \"active\",\n    \"holder_id\": \"173ab846-de2a-1234-5678-160bd2e660e6\",\n    \"label\": \"Kirby Janette\",\n    \"virtual\": true,\n    \"product\": {\n        \"code\": \"MBJ\"\n    },\n    \"accounts\": [\n        \"f52c6c84-26b9-4e95-bbcf-99ed6523fb51\"\n    ],\n    \"categories\": [\n        \"restaurants\",\n        \"groceries\"\n    ],\n    \"spending_limits\": {\n        \"single\": {\n            \"amount\": 200.22,\n            \"currency\": \"GBP\"\n        },\n        \"week\": {\n            \"amount\": 200.44,\n            \"currency\": \"GBP\"\n        }\n    },\n    \"created_at\": \"2022-09-15T11:04:11.047305Z\",\n    \"updated_at\": \"2022-09-15T11:04:11.047305Z\"\n}"
						}
					]
				},
				{
					"name": "Retrieve card details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/cards/:card_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"cards",
								":card_id"
							],
							"variable": [
								{
									"key": "card_id",
									"value": ""
								}
							]
						},
						"description": "Get the details of a specific card, based on its ID."
					},
					"response": [
						{
							"name": "Retrieve card details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/cards/:card_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id",
											"value": "aa14a9af-d7a7-4214-a743-lok818f74bd0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2024 11:36:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "1S49LAIIT0KLZ"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"aa14a9af-d7a7-4214-a743-lok818f74bd0\",\n    \"last_digits\": \"2671\",\n    \"expiry\": \"09/2027\",\n    \"state\": \"active\",\n    \"holder_id\": \"173ab846-de2a-1234-5678-160bd2e660e6\",\n    \"label\": \"Kirby Janette\",\n    \"virtual\": true,\n    \"product\": {\n        \"code\": \"MBJ\"\n    },\n    \"accounts\": [\n        \"f52c6c84-26b9-4e95-bbcf-99ed6523fb51\"\n    ],\n    \"categories\": [\n        \"restaurants\",\n        \"groceries\"\n    ],\n    \"spend_program\": {\n        \"label\": \"Office supplies\"\n    },\n    \"spending_limits\": {\n        \"single\": {\n            \"amount\": 200.22,\n            \"currency\": \"GBP\"\n        },\n        \"month\": {\n            \"amount\": 200.44,\n            \"currency\": \"GBP\"\n        }\n    },\n    \"created_at\": \"2022-09-15T11:04:11.047305Z\",\n    \"updated_at\": \"2024-08-17T08:32:11.024721Z\"\n}"
						}
					]
				},
				{
					"name": "Update card details",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\": \"New label\",\n    \"categories\": [\n        \"services\",\n        \"shopping\",\n        \"furniture\"\n    ],\n    \"spending_limits\": {\n        \"single\": {\n            \"amount\": 200.22,\n            \"currency\": \"GBP\"\n        },\n        \"week\": {\n            \"amount\": 200.44,\n            \"currency\": \"GBP\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1.0/cards/:card_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"cards",
								":card_id"
							],
							"variable": [
								{
									"key": "card_id",
									"value": "",
									"description": "The ID of the card"
								}
							]
						}
					},
					"response": [
						{
							"name": "Update card details",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"label\": \"New card label\",\n    \"categories\": [\n        \"services\",\n        \"shopping\",\n        \"furniture\"\n    ],\n    \"spending_limits\": {\n        \"single\": {\n            \"amount\": 100,\n            \"currency\": \"GBP\"\n        },\n        \"month\": {\n            \"amount\": 300,\n            \"currency\": \"GBP\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/cards/:card_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id",
											"value": "aa14a9af-d7a7-4214-a743-lok818f74bd0",
											"description": "The ID of the card"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2024 11:38:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "5QFL3V7OQYRX"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"aa14a9af-d7a7-4214-a743-lok818f74bd0\",\n    \"last_digits\": \"2671\",\n    \"expiry\": \"09/2027\",\n    \"state\": \"active\",\n    \"holder_id\": \"173ab846-de2a-1234-5678-160bd2e660e6\",\n    \"label\": \"New card label\",\n    \"virtual\": true,\n    \"product\": {\n        \"code\": \"MBJ\"\n    },\n    \"accounts\": [\n        \"f52c6c84-26b9-4e95-bbcf-99ed6523fb51\"\n    ],\n    \"categories\": [\n        \"services\",\n        \"shopping\",\n        \"furniture\"\n    ],\n    \"spending_limits\": {\n        \"single\": {\n            \"amount\": 100,\n            \"currency\": \"GBP\"\n        },\n        \"week\": {\n            \"amount\": 300,\n            \"currency\": \"GBP\"\n        }\n    },\n    \"created_at\": \"2022-09-15T11:04:11.047305Z\",\n    \"updated_at\": \"2024-08-17T08:32:11.024721Z\"\n}"
						}
					]
				},
				{
					"name": "Terminate a card",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/cards/:card_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"cards",
								":card_id"
							],
							"variable": [
								{
									"key": "card_id",
									"value": "",
									"description": "The ID of the card"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Freeze a card",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/cards/:card_id/freeze",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"cards",
								":card_id",
								"freeze"
							],
							"variable": [
								{
									"key": "card_id",
									"value": "",
									"description": "The ID of the card"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unfreeze a card",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/cards/:card_id/unfreeze",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"cards",
								":card_id",
								"unfreeze"
							],
							"variable": [
								{
									"key": "card_id",
									"value": "",
									"description": "The ID of the card"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve sensitive card details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/cards/:card_id/sensitive-details",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"cards",
								":card_id",
								"sensitive-details"
							],
							"variable": [
								{
									"key": "card_id",
									"value": "",
									"description": "The ID of the card"
								}
							]
						}
					},
					"response": [
						{
							"name": "Retrieve sensitive card details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/cards/:card_id/sensitive-details",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"cards",
										":card_id",
										"sensitive-details"
									],
									"variable": [
										{
											"key": "card_id",
											"value": "aa14a9af-d7a7-4214-a743-lok818f74bd0",
											"description": "The ID of the card"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2024 11:42:27 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "15D9N7ENCC6ZV"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"pan\": \"4111111111111111\",\n    \"cvv\": \"123\",\n    \"expiry\": \"06/2025\"\n}"
						}
					]
				}
			],
			"description": "Manage cards for the business team members, freeze, unfreeze, terminate and update card settings, such as spending limits."
		},
		{
			"name": "Counterparties",
			"item": [
				{
					"name": "Retrieve counterparties",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/counterparties",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"counterparties"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "The name of the counterparty to retrieve. It does not need to be an exact match, partial match is also supported.",
									"disabled": true
								},
								{
									"key": "account_no",
									"value": "",
									"description": "The exact account number of the counterparty to retrieve.",
									"disabled": true
								},
								{
									"key": "sort_code",
									"value": "",
									"description": "The exact sort code of the counterparty to retrieve. Only allowed in combination with the account_no parameter.",
									"disabled": true
								},
								{
									"key": "iban",
									"value": "",
									"description": "The exact IBAN of the counterparty to retrieve.",
									"disabled": true
								},
								{
									"key": "bic",
									"value": "",
									"description": "The exact BIC of the counterparty to retrieve. Only allowed in combination with the iban parameter.",
									"disabled": true
								},
								{
									"key": "created_before",
									"value": "2023-03-09T15:32:03.325749Z",
									"description": "Used for pagination, retrieves counterparties created before the given date in ISO 8601 format.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Used for pagination, sets the number of results to return per page.",
									"disabled": true
								}
							]
						},
						"description": "Get all the counterparties that you have created, or use the query parameters to filter the results.\n\nThe counterparties are sorted by the `created_at` date in reverse chronological order.\n\nThe returned counterparties are **paginated**. The maximum number of counterparties returned per page is specified by the `limit` parameter. To get to the next page, make a new request and use the `created_at` date of the last counterparty returned in the previous response.\n\nFor more information, see the guides: [Retrieve counterparties](https://developer.revolut.com/docs/guides/manage-accounts/counterparties/retrieve-counterparties)."
					},
					"response": [
						{
							"name": "Retrieve all counterparties",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/counterparties",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"counterparties"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"body": "[\n    {\n        \"id\": \"239d6f1f-2222-4ae6-1111-5cc603341b4e\",\n        \"name\": \"Jane Doe Co.\",\n        \"state\": \"created\",\n        \"created_at\": \"2022-09-14T14:47:12.273718Z\",\n        \"updated_at\": \"2022-09-14T14:47:12.273718Z\",\n        \"accounts\": [\n            {\n                \"iban\": \"GB66REVO00996995908786\",\n                \"bic\": \"REVOGB21\",\n                \"id\": \"b209281b-aakk-9911-8d83-ac72469cef8f\",\n                \"type\": \"external\",\n                \"name\": \"Jane Doe Co.\",\n                \"bank_country\": \"GB\",\n                \"currency\": \"EUR\",\n                \"recipient_charges\": \"no\"\n            }\n        ]\n    },\n    {\n        \"id\": \"8e0e9886-0af1-4b0c-acf4-111180d2892b\",\n        \"name\": \"John Smith\",\n        \"revtag\": \"johnsmith\",\n        \"profile_type\": \"personal\",\n        \"country\": \"GB\",\n        \"state\": \"created\",\n        \"created_at\": \"2022-09-14T14:41:39.312017Z\",\n        \"updated_at\": \"2022-09-14T14:41:39.312017Z\"\n    },\n    {\n        \"id\": \"e7e36cce-2e9c-4e96-818e-1c2fed325852\",\n        \"name\": \"John Doe Co.\",\n        \"state\": \"created\",\n        \"created_at\": \"2022-08-14T14:34:11.168340Z\",\n        \"updated_at\": \"2022-08-14T14:34:11.168340Z\",\n        \"accounts\": [\n            {\n                \"account_no\": \"12345674\",\n                \"sort_code\": \"540107\",\n                \"id\": \"e277b2bd-3a6d-423b-933d-3d425094bb13\",\n                \"type\": \"external\",\n                \"name\": \"John Doe Co.\",\n                \"bank_country\": \"GB\",\n                \"currency\": \"GBP\",\n                \"recipient_charges\": \"no\"\n            }\n        ]\n    },\n    {\n        \"id\": \"239d6f1f-2222-4ae6-1111-5cc603341b4e\",\n        \"name\": \"John Smith Co.\",\n        \"state\": \"created\",\n        \"created_at\": \"2022-09-14T14:47:12.273718Z\",\n        \"updated_at\": \"2022-09-14T14:47:12.273718Z\",\n        \"accounts\": [\n            {\n                \"iban\": \"FR1420041010050500013M02606\",\n                \"bic\": \"PSSTFRPPLIL\",\n                \"id\": \"b209281b-aakk-9911-8d83-ac72469cef8f\",\n                \"type\": \"external\",\n                \"name\": \"John Smith Co.\",\n                \"bank_country\": \"FR\",\n                \"currency\": \"EUR\",\n                \"recipient_charges\": \"no\"\n            }\n        ]\n    },\n    {\n        \"id\": \"173e6a6b-d955-465f-8f31-7f6f7c03927c\",\n        \"name\": \"Johann Meier Co.\",\n        \"state\": \"created\",\n        \"created_at\": \"2023-08-10T12:43:20.273500Z\",\n        \"updated_at\": \"2023-08-10T12:43:20.273500Z\",\n        \"accounts\": [\n            {\n                \"iban\": \"CH5604835012345678009\",\n                \"bic\": \"UBSWCHZH80A\",\n                \"id\": \"b3cc43e8-f141-459b-9bd5-3505cf9797f8\",\n                \"type\": \"external\",\n                \"name\": \"Johann Meier Co.\",\n                \"bank_country\": \"CH\",\n                \"currency\": \"EUR\",\n                \"recipient_charges\": \"no\"\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Retrieve a counterparty",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/counterparty/:counterparty_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"counterparty",
								":counterparty_id"
							],
							"variable": [
								{
									"key": "counterparty_id",
									"value": "",
									"description": "The ID of the counterparty to retrieve."
								}
							]
						},
						"description": "Get the information about a specific counterparty by ID."
					},
					"response": [
						{
							"name": "Revolut counterparty",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/counterparty/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"counterparty",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "8e0e9886-0af1-4b0c-acf4-111180d2892b"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"body": "{\n    \"id\": \"8e0e9886-0af1-4b0c-acf4-111180d2892b\",\n    \"name\": \"John Smith\",\n    \"revtag\": \"johnsmith\",\n    \"profile_type\": \"personal\",\n    \"country\": \"GB\",\n    \"state\": \"created\",\n    \"created_at\": \"2022-09-14T14:41:39.312017Z\",\n    \"updated_at\": \"2022-09-14T14:41:39.312017Z\"\n}"
						},
						{
							"name": "UK counterparty",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/counterparty/:id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"counterparty",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "b53fdd78-8d67-4f63-a103-eeeeef53cac8",
											"description": "The ID of the counterparty to retrieve."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"body": "{\n    \"id\": \"b53fdd78-8d67-4f63-a103-eeeeef53cac8\",\n    \"name\": \"John Smith Co.\",\n    \"state\": \"created\",\n    \"created_at\": \"2022-09-14T14:34:11.168340Z\",\n    \"updated_at\": \"2022-09-14T14:34:11.168340Z\",\n    \"accounts\": [\n        {\n            \"account_no\": \"12345678\",\n            \"sort_code\": \"540105\",\n            \"id\": \"5c9e171c-7e23-4d6a-b768-aaaaaba535f3\",\n            \"type\": \"external\",\n            \"name\": \"John Smith Co.\",\n            \"bank_country\": \"GB\",\n            \"currency\": \"GBP\"\n        }\n    ]\n}"
						},
						{
							"name": "International counterparty",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/counterparty/:counterparty_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"counterparty",
										":counterparty_id"
									],
									"variable": [
										{
											"key": "counterparty_id",
											"value": "173e6a6b-d955-465f-8f31-7f6f7c03927c",
											"description": "The ID of the counterparty to retrieve."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"body": "{\n    \"id\": \"173e6a6b-d955-465f-8f31-7f6f7c03927c\",\n    \"name\": \"Johann Meier Co.\",\n    \"state\": \"created\",\n    \"created_at\": \"2023-08-10T12:43:20.273500Z\",\n    \"updated_at\": \"2023-08-10T12:43:20.273500Z\",\n    \"accounts\": [\n        {\n            \"iban\": \"CH5604835012345678009\",\n            \"bic\": \"UBSWCHZH80A\",\n            \"id\": \"b3cc43e8-f141-459b-9bd5-3505cf9797f8\",\n            \"type\": \"external\",\n            \"name\": \"Johann Meier Co.\",\n            \"bank_country\": \"CH\",\n            \"currency\": \"EUR\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Delete a counterparty",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/counterparty/:counterparty_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"counterparty",
								":counterparty_id"
							],
							"variable": [
								{
									"key": "counterparty_id",
									"value": "",
									"description": "The ID of the counterparty to retrieve."
								}
							]
						},
						"description": "Delete a counterparty with the given ID. When a counterparty is deleted, you cannot make any payments to the counterparty."
					},
					"response": [
						{
							"name": "Delete a counterparty",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/counterparty/:counterparty_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"counterparty",
										":counterparty_id"
									],
									"variable": [
										{
											"key": "counterparty_id",
											"value": ""
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"body": ""
						}
					]
				},
				{
					"name": "Create a counterparty",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"individual_name\": {\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\"\n    },\n    \"bank_country\": \"GB\",\n    \"currency\": \"GBP\",\n    \"sort_code\": \"12-34-56\",\n    \"account_no\": \"12345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1.0/counterparty",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"counterparty"
							]
						},
						"description": "Create a new counterparty to transact with."
					},
					"response": [
						{
							"name": "Revolut counterparty",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profile_type\": \"personal\",\n    \"name\": \"John Smith\",\n    \"revtag\": \"johnsmith\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/counterparty",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"counterparty"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"54ee57d7-1234-abcd-1234-0e1f79164d5e\",\n    \"name\": \"John Smith\",\n    \"revtag\": \"johnsmith\",\n    \"profile_type\": \"personal\",\n    \"country\": \"GB\",\n    \"state\": \"created\",\n    \"created_at\": \"2023-07-26T09:34:41.790401Z\",\n    \"updated_at\": \"2023-07-26T09:34:41.790401Z\"\n}"
						},
						{
							"name": "UK counterparty",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"individual_name\": {\n    \"first_name\": \"John\",\n    \"last_name\": \"Smith\"\n  },\n  \"bank_country\": \"GB\",\n  \"currency\": \"GBP\",\n  \"sort_code\": \"54-01-05\",\n  \"account_no\": \"12345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/counterparty",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"counterparty"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"19dcf5a2-110f-43f7-9d5f-98aaf4b8f0d6\",\n    \"name\": \"John Smith\",\n    \"state\": \"created\",\n    \"created_at\": \"2023-03-13T09:34:41.790401Z\",\n    \"updated_at\": \"2023-03-13T09:34:41.790401Z\",\n    \"accounts\": [\n        {\n            \"account_no\": \"12345678\",\n            \"sort_code\": \"540105\",\n            \"id\": \"6f45a49a-710c-4ef4-b42b-6c247c82af75\",\n            \"type\": \"external\",\n            \"name\": \"John Doe\",\n            \"bank_country\": \"GB\",\n            \"currency\": \"GBP\",\n            \"recipient_charges\": \"no\"\n        }\n    ]\n}"
						},
						{
							"name": "International counterparty",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"company_name\": \"Johann Meier Co.\",\n    \"bank_country\": \"CH\",\n    \"currency\": \"EUR\",\n    \"iban\": \"CH5604835012345678009\",\n    \"address\": {\n        \"street_line1\": \"Bahnhofstrasse 4a/8\",\n        \"city\": \"Zurich\",\n        \"country\": \"CH\",\n        \"postcode\": \"8001\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/counterparty",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"counterparty"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"body": "{\n    \"id\": \"173e6a6b-d955-465f-8f31-7f6f7c03927c\",\n    \"name\": \"Johann Meier Co.\",\n    \"state\": \"created\",\n    \"created_at\": \"2023-08-10T12:43:20.273500Z\",\n    \"updated_at\": \"2023-08-10T12:43:20.273500Z\",\n    \"accounts\": [\n        {\n            \"iban\": \"CH5604835012345678009\",\n            \"bic\": \"UBSWCHZH80A\",\n            \"id\": \"b3cc43e8-f141-459b-9bd5-3505cf9797f8\",\n            \"type\": \"external\",\n            \"name\": \"Johann Meier Co.\",\n            \"bank_country\": \"CH\",\n            \"currency\": \"EUR\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Validate an account name (CoP)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sort_code\": \"54-01-05\",\n    \"account_no\": \"12345678\",\n    \"individual_name\": {\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1.0/account-name-validation",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"account-name-validation"
							]
						},
						"description": "Use Confirmation of Payee (CoP) to validate a UK counterparty's account name against their account number and sort code when [adding a counterparty](https://developer.revolut.com/docs/business/add-counterparty) or [making a transfer](https://developer.revolut.com/docs/business/create-payment) to a new or existing counterparty.\n\nFor more details, see the guides: [Validate an account name (CoP)](https://developer.revolut.com/docs/guides/manage-accounts/counterparties/confirmation-of-payee)."
					},
					"response": []
				}
			],
			"description": "Manage counterparties that you intend to transact with.\n\nRequest and response examples can vary based on the account provider's location and type of the counterparty. For more information, see the guides: [Create a counterparty](https://developer.revolut.com/docs/guides/manage-accounts/counterparties/create-a-counterparty).\n\nIn the Sandbox environment, you cannot add real people and businesses as Revolut counterparties. Therefore, to help you simulate [Create a counterparty](https://developer.revolut.com/docs/business/add-counterparty) requests, we have created some test accounts for counterparties of profile type `personal`.\n\nTo add a counterparty via Revtag, use one of these pairs for the `name` and `revtag` fields respectively:\n\n- `Test User 1` & `john1pvki`\n    \n- `Test User 2` & `john2pvki`\n    \n- ...\n    \n- `Test User 9` & `john9pvki`"
		},
		{
			"name": "Expenses",
			"item": [
				{
					"name": "Retrieve all expenses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/expenses",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"expenses"
							],
							"query": [
								{
									"key": "from",
									"value": "",
									"description": "The date and time to retrieve the expenses from, including this date-time. Corresponds to the value of expense_date. Provided in ISO 8601 format.\n\nUsed also for pagination. To get back to the previous page of results, make a new request and use the expense_date value from the first item of the current page as the value for the from parameter.",
									"disabled": true
								},
								{
									"key": "to",
									"value": "",
									"description": "The date and time to retrieve the expenses to, excluding this date-time. Corresponds to the value of expense_date. Provided in ISO 8601 format. The default value is the date and time at which you're calling the endpoint.\n\nUsed also for pagination. To get back to the next page of results, make a new request and use the expense_date value from the last item of the previous (current) page as the value for the to parameter.",
									"disabled": true
								},
								{
									"key": "count",
									"value": "100",
									"description": "The maximum number of the expenses to retrieve per page. To get the next page of results, make a new request and use the expense_date value from the last item of the previous page as the value for the to parameter.",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"description": "Possible values: [missing_info, awaiting_review, reverted, refund_requested, refunded, approved, rejected]\n\nRetrieves the expenses in the specified state.",
									"disabled": true
								},
								{
									"key": "transaction_type",
									"value": "",
									"description": "Possible values: [atm, card_payment, fee, transfer, external]\n\nThe type of the transaction related to the expense. If provided, only expenses with transactions of this type are returned.",
									"disabled": true
								}
							]
						},
						"description": "Get all your expenses, or use the query parameters to filter the results.\n\nThe expenses are sorted by the `expense_date` value in reverse chronological order, and they're **paginated**. The maximum number of expenses returned per page is specified by the `count` parameter. To get the next page of results, make a new request and use the `expense_date` value from the last item of the previous page as the value for the `to` parameter.\n\n[API Reference](https://developer.revolut.com/docs/business/get-expenses)"
					},
					"response": [
						{
							"name": "Retrieve all expenses",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/expenses",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"expenses"
									],
									"query": [
										{
											"key": "from",
											"value": "",
											"description": "The date and time to retrieve the expenses from, including this date-time. Corresponds to the value of expense_date. Provided in ISO 8601 format.\n\nUsed also for pagination. To get back to the previous page of results, make a new request and use the expense_date value from the first item of the current page as the value for the from parameter.",
											"disabled": true
										},
										{
											"key": "to",
											"value": "",
											"description": "The date and time to retrieve the expenses to, excluding this date-time. Corresponds to the value of expense_date. Provided in ISO 8601 format. The default value is the date and time at which you're calling the endpoint.\n\nUsed also for pagination. To get back to the next page of results, make a new request and use the expense_date value from the last item of the previous (current) page as the value for the to parameter.",
											"disabled": true
										},
										{
											"key": "count",
											"value": "100",
											"description": "The maximum number of the expenses to retrieve per page. To get the next page of results, make a new request and use the expense_date value from the last item of the previous page as the value for the to parameter.",
											"disabled": true
										},
										{
											"key": "state",
											"value": "",
											"description": "Possible values: [missing_info, awaiting_review, reverted, refund_requested, refunded, approved, rejected]\n\nRetrieves the expenses in the specified state.",
											"disabled": true
										},
										{
											"key": "transaction_type",
											"value": "",
											"description": "Possible values: [atm, card_payment, fee, transfer, external]\n\nThe type of the transaction related to the expense. If provided, only expenses with transactions of this type are returned.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 02 Oct 2024 14:31:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "UYL3U8UHWEZ3"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"8decf9f8-053e-46cb-92d8-a7b450fe5ae0\",\n        \"state\": \"approved\",\n        \"transaction_type\": \"card_payment\",\n        \"description\": \"Printer paper\",\n        \"submitted_at\": \"2024-09-13T20:48:40.912Z\",\n        \"completed_at\": \"2024-09-13T20:48:40.948Z\",\n        \"payer\": \"Ray Trenfield\",\n        \"merchant\": \"Best Printers Company\",\n        \"transaction_id\": \"163e0ef6-2414-4fcf-846f-1f871059d506\",\n        \"expense_date\": \"2024-09-13T18:47:01.782Z\",\n        \"splits\": [\n            {\n                \"amount\": {\n                    \"amount\": 15.39,\n                    \"currency\": \"GBP\"\n                },\n                \"category\": {\n                    \"name\": \"Printing & Stationery\",\n                    \"code\": \"461\"\n                },\n                \"tax_rate\": {\n                    \"name\": \"VAT\",\n                    \"percentage\": 20\n                }\n            },\n            {\n                \"amount\": {\n                    \"amount\": 8.99,\n                    \"currency\": \"GBP\"\n                },\n                \"category\": {\n                    \"name\": \"Groceries\",\n                    \"code\": \"555\"\n                },\n                \"tax_rate\": {\n                    \"name\": \"No VAT\",\n                    \"percentage\": 0\n                }\n            }\n        ],\n        \"labels\": {\n            \"Office supplies\": [\n                \"photocopying\",\n                \"coffee\"\n            ],\n            \"Department\": [\n                \"HR\",\n                \"Accounting\"\n            ]\n        },\n        \"receipt_ids\": [\n            \"84c0169a-37f9-4bfa-ab1e-f2c81dbc34cf\"\n        ],\n        \"spent_amount\": {\n            \"amount\": 24.38,\n            \"currency\": \"GBP\"\n        }\n    },\n    {\n        \"id\": \"8498b232-28ba-4baf-b33d-22fb464e83c8\",\n        \"state\": \"missing_info\",\n        \"transaction_type\": \"fee\",\n        \"description\": \"Expenses app charges\",\n        \"payer\": \"Bingston Labs\",\n        \"transaction_id\": \"91b56d41-7b42-40e8-8970-0082cf965e6e\",\n        \"expense_date\": \"2024-09-04T13:39:18.606Z\",\n        \"splits\": [\n            {\n                \"amount\": {\n                    \"amount\": 17.68,\n                    \"currency\": \"EUR\"\n                },\n                \"category\": {\n                    \"name\": \"General Expenses\",\n                    \"code\": \"429\"\n                },\n                \"tax_rate\": {\n                    \"name\": \"20% (VAT on Expenses)\",\n                    \"percentage\": 20\n                }\n            }\n        ],\n        \"labels\": {},\n        \"receipt_ids\": [\n            \"d97d062f-5aae-4a0c-b5f3-52ae134d384d\"\n        ],\n        \"spent_amount\": {\n            \"amount\": 17.68,\n            \"currency\": \"EUR\"\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "Retrieve an expense",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/expenses/:expense_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"expenses",
								":expense_id"
							],
							"variable": [
								{
									"key": "expense_id",
									"value": "",
									"description": "The ID of the expense to retrieve."
								}
							]
						},
						"description": "Get the information about a specific expense by ID.\n\n[API Reference](https://developer.revolut.com/docs/business/get-expense)"
					},
					"response": [
						{
							"name": "Approved expense, with labels and multiple splits",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/expenses/:expense_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"expenses",
										":expense_id"
									],
									"variable": [
										{
											"key": "expense_id",
											"value": "8decf9f8-053e-46cb-92d8-a7b450fe5ae0",
											"description": "The ID of the expense to retrieve."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2024 10:04:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "RJRIC3X02ONT"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"8decf9f8-053e-46cb-92d8-a7b450fe5ae0\",\n    \"state\": \"approved\",\n    \"transaction_type\": \"card_payment\",\n    \"description\": \"Printer paper\",\n    \"submitted_at\": \"2024-09-13T20:48:40.912Z\",\n    \"completed_at\": \"2024-09-13T20:48:40.948Z\",\n    \"payer\": \"Ray Trenfield\",\n    \"merchant\": \"Best Printers Company\",\n    \"transaction_id\": \"163e0ef6-2414-4fcf-846f-1f871059d506\",\n    \"expense_date\": \"2024-09-13T18:47:01.782Z\",\n    \"splits\": [\n        {\n            \"amount\": {\n                \"amount\": 15.39,\n                \"currency\": \"GBP\"\n            },\n            \"category\": {\n                \"name\": \"Printing & Stationery\",\n                \"code\": \"461\"\n            },\n            \"tax_rate\": {\n                \"name\": \"VAT\",\n                \"percentage\": 20\n            }\n        },\n        {\n            \"amount\": {\n                \"amount\": 8.99,\n                \"currency\": \"GBP\"\n            },\n            \"category\": {\n                \"name\": \"Groceries\",\n                \"code\": \"555\"\n            },\n            \"tax_rate\": {\n                \"name\": \"No VAT\",\n                \"percentage\": 0\n            }\n        }\n    ],\n    \"labels\": {\n        \"Office supplies\": [\n            \"photocopying\",\n            \"coffee\"\n        ],\n        \"Department\": [\n            \"HR\",\n            \"Accounting\"\n        ]\n    },\n    \"receipt_ids\": [\n        \"84c0169a-37f9-4bfa-ab1e-f2c81dbc34cf\"\n    ],\n    \"spent_amount\": {\n        \"amount\": 24.38,\n        \"currency\": \"GBP\"\n    }\n}"
						},
						{
							"name": "Expense awaiting review, with external transaction",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/expenses/:expense_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"expenses",
										":expense_id"
									],
									"variable": [
										{
											"key": "expense_id",
											"value": "7ff44b9f-556b-4dce-8e39-4a667246f49f",
											"description": "The ID of the expense to retrieve."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2024 10:04:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "RJRIC3X02ONT"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"7ff44b9f-556b-4dce-8e39-4a667246f49f\",\n    \"state\": \"awaiting_review\",\n    \"transaction_type\": \"external\",\n    \"description\": \"Snack\",\n    \"submitted_at\": \"2024-09-11T13:19:24.659Z\",\n    \"payer\": \"Chima Aragonye\",\n    \"merchant\": \"Go FroYo Co.\",\n    \"expense_date\": \"2024-01-21T00:00:00Z\",\n    \"splits\": [\n        {\n            \"amount\": {\n                \"amount\": 5,\n                \"currency\": \"GBP\"\n            },\n            \"category\": {\n                \"name\": \"General expenses\",\n                \"code\": \"429\"\n            },\n            \"tax_rate\": {\n                \"name\": \"No VAT\",\n                \"percentage\": 0\n            }\n        }\n    ],\n    \"labels\": {},\n    \"receipt_ids\": [],\n    \"spent_amount\": {\n        \"amount\": 5,\n        \"currency\": \"GBP\"\n    }\n}"
						},
						{
							"name": "Reverted expense",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/expenses/:expense_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"expenses",
										":expense_id"
									],
									"variable": [
										{
											"key": "expense_id",
											"value": "9b9cf87a-e17f-4854-8800-515a0475c4df",
											"description": "The ID of the expense to retrieve."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2024 10:04:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "RJRIC3X02ONT"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"9b9cf87a-e17f-4854-8800-515a0475c4df\",\n    \"state\": \"reverted\",\n    \"transaction_type\": \"transfer\",\n    \"payer\": \"Mindy Carter\",\n    \"transaction_id\": \"5581efb8-6b98-4c2b-bdcd-1270062a8d48\",\n    \"expense_date\": \"2024-09-16T12:48:39.960Z\",\n    \"splits\": [\n        {\n            \"amount\": {\n                \"amount\": 100,\n                \"currency\": \"EUR\"\n            }\n        }\n    ],\n    \"labels\": {},\n    \"receipt_ids\": [],\n    \"spent_amount\": {\n        \"amount\": 100,\n        \"currency\": \"EUR\"\n    }\n}"
						},
						{
							"name": "Expense missing information",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/expenses/:expense_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"expenses",
										":expense_id"
									],
									"variable": [
										{
											"key": "expense_id",
											"value": "8decf9f8-053e-46cb-92d8-a7b450fe5ae0",
											"description": "The ID of the expense to retrieve."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2024 10:04:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "RJRIC3X02ONT"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"8decf9f8-053e-46cb-92d8-a7b450fe5ae0\",\n    \"state\": \"approved\",\n    \"transaction_type\": \"card_payment\",\n    \"description\": \"Printer paper\",\n    \"submitted_at\": \"2024-09-13T20:48:40.912Z\",\n    \"completed_at\": \"2024-09-13T20:48:40.948Z\",\n    \"payer\": \"Ray Trenfield\",\n    \"merchant\": \"Best Printers Company\",\n    \"transaction_id\": \"163e0ef6-2414-4fcf-846f-1f871059d506\",\n    \"expense_date\": \"2024-09-13T18:47:01.782Z\",\n    \"splits\": [\n        {\n            \"amount\": {\n                \"amount\": 15.39,\n                \"currency\": \"GBP\"\n            },\n            \"category\": {\n                \"name\": \"Printing & Stationery\",\n                \"code\": \"461\"\n            },\n            \"tax_rate\": {\n                \"name\": \"VAT\",\n                \"percentage\": 20\n            }\n        },\n        {\n            \"amount\": {\n                \"amount\": 8.99,\n                \"currency\": \"GBP\"\n            },\n            \"category\": {\n                \"name\": \"Groceries\",\n                \"code\": \"555\"\n            },\n            \"tax_rate\": {\n                \"name\": \"No VAT\",\n                \"percentage\": 0\n            }\n        }\n    ],\n    \"labels\": {\n        \"Office supplies\": [\n            \"photocopying\",\n            \"coffee\"\n        ],\n        \"Department\": [\n            \"HR\",\n            \"Accounting\"\n        ]\n    },\n    \"receipt_ids\": [\n        \"84c0169a-37f9-4bfa-ab1e-f2c81dbc34cf\"\n    ],\n    \"spent_amount\": {\n        \"amount\": 24.38,\n        \"currency\": \"GBP\"\n    }\n}"
						},
						{
							"name": "Expense not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/expenses/:expense_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"expenses",
										":expense_id"
									],
									"variable": [
										{
											"key": "expense_id",
											"value": "bd415411-6e3e-46e7-af07-42f9b790c44e",
											"description": "The ID of the expense to retrieve."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2024 10:14:27 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "18AQAH6E763TL"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Expense 'bd415411-6e3e-46e7-af07-42f9b790c44e' not found\",\n    \"code\": 3006\n}"
						}
					]
				},
				{
					"name": "Retrieve an expense receipt",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/expenses/:expense_id/receipts/:receipt_id/content",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"expenses",
								":expense_id",
								"receipts",
								":receipt_id",
								"content"
							],
							"variable": [
								{
									"key": "expense_id",
									"value": "",
									"description": "The ID of the expense to retrieve."
								},
								{
									"key": "receipt_id",
									"value": "",
									"description": "The ID of the receipt to retrieve.\n\nTo find the ID of a receipt related to a specific expense, refer to the expense's details. The IDs of receipts related to that expense are returned under receipt_ids."
								}
							]
						},
						"description": "Get the receipt related to an expense by providing the receipt's ID.\n\n[API Reference](https://developer.revolut.com/docs/business/get-expense-receipt)"
					},
					"response": []
				}
			],
			"description": "Get the list of all the expenses, or use the filters to narrow down the results. You can also get a specific expense, or get a receipt related to an expense by providing their respective IDs."
		},
		{
			"name": "Foreign Exchange",
			"item": [
				{
					"name": "Get exchange rate",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/rate?from=EUR&amount=100&to=USD",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"rate"
							],
							"query": [
								{
									"key": "from",
									"value": "EUR",
									"description": "The currency that you exchange from."
								},
								{
									"key": "amount",
									"value": "100",
									"description": "The amount of the currency. The default value is `1.00`.\n"
								},
								{
									"key": "to",
									"value": "USD",
									"description": "The currency that you exchange to."
								}
							]
						},
						"description": "Get the sell exchange rate between two currencies.\n\nFor more information, see the guides: [Exchange money](https://developer.revolut.com/docs/guides/manage-accounts/exchange-money)."
					},
					"response": [
						{
							"name": "Get exchange rate",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/rate?from=EUR&to=USD&amount=100",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"rate"
									],
									"query": [
										{
											"key": "from",
											"value": "EUR"
										},
										{
											"key": "to",
											"value": "USD"
										},
										{
											"key": "amount",
											"value": "100"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"from\": {\n        \"amount\": 100,\n        \"currency\": \"EUR\"\n    },\n    \"to\": {\n        \"amount\": 96.87,\n        \"currency\": \"USD\"\n    },\n    \"rate\": 0.968704712919,\n    \"fee\": {\n        \"amount\": 0,\n        \"currency\": \"EUR\"\n    },\n    \"rate_date\": \"2022-09-26T08:51:05Z\"\n}"
						}
					]
				},
				{
					"name": "Exchange Money",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"from\": {\n        \"account_id\": \"af98333c-ea53-482b-93c2-1fa5e4eae671\",\n        \"currency\": \"GBP\",\n        \"amount\": 10\n    },\n    \"to\": {\n        \"account_id\": \"b7ec67d3-5af1-42c8-bece-3d285774894d\",\n        \"currency\": \"AUD\"\n    },\n    \"reference\": \"exchange\",\n    \"request_id\": \"{{$randomUUID}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1.0/exchange",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"exchange"
							]
						},
						"description": "Exchange money from one currency to another.\n\n[API Reference](https://developer.revolut.com/docs/api-reference/business#tag/Exchanges/operation/exchangeMoney)"
					},
					"response": [
						{
							"name": "Exchange Money",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"from\": {\n        \"account_id\": \"af98333c-ea53-482b-93c2-1fa5e4eae671\",\n        \"currency\": \"GBP\",\n        \"amount\": 10\n    },\n    \"to\": {\n        \"account_id\": \"b7ec67d3-5af1-42c8-bece-3d285774894d\",\n        \"currency\": \"AUD\"\n            },\n    \"reference\": \"exchange\",\n    \"request_id\": \"A1pH4num3ric2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/exchange",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"exchange"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"630f9c2e-2e74-a06d-ab61-deb7ggkkd6cb\",\n    \"state\": \"completed\",\n    \"created_at\": \"2022-08-31T17:36:46.656876Z\",\n    \"completed_at\": \"2022-08-31T17:36:46.657239Z\"\n}"
						}
					]
				}
			],
			"description": "Retrieve information on exchange rates between currencies, buy and sell currencies.\n\nFor more information, see the guides: [Exchange money](https://developer.revolut.com/docs/guides/manage-accounts/exchange-money)."
		},
		{
			"name": "Payment drafts",
			"item": [
				{
					"name": "Retrieve a list of payment drafts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/payment-drafts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"payment-drafts"
							]
						},
						"description": "Get the list of payment drafts created with the API that haven't been [sent for processing](https://developer.revolut.com/docs/guides/manage-accounts/transfers/payment-drafts#send-drafts-for-processing)."
					},
					"response": [
						{
							"name": "Retrieve all payment drafts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/payment-drafts",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"payment-drafts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"payment_orders\": [\n        {\n            \"id\": \"e7e54cb2-861a-xxxx-80e9-3e6600f3db10\",\n            \"title\": \"Draft Payment through API\",\n            \"payments_count\": 1\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create a payment draft",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Draft Payment Title\",\n    \"schedule_for\": \"2022-12-24\",\n    \"payments\": [\n        {\n            \"account_id\": \"91da6ddd-4680-4d4e-a96b-baf0cfe4cc15\",\n            \"receiver\": {\n                \"counterparty_id\": \"23e42354-538d-4719-8ad5-f68c07456716\"\n            },\n            \"amount\": 10,\n            \"currency\": \"GBP\",\n            \"reference\": \"payment1\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1.0/payment-drafts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"payment-drafts"
							]
						},
						"description": "Create a payment draft.\n\nWhen you create a payment draft, it stays a draft until you [send it for processing as payment](https://developer.revolut.com/docs/guides/manage-accounts/transfers/payment-drafts#send-drafts-for-processing) in the [Revolut Business app](https://business.revolut.com/).\n\nUntil then, you can [delete](https://developer.revolut.com/docs/business/delete-payment-draft) the draft if you no longer wish to proceed with it."
					},
					"response": [
						{
							"name": "Create a payment draft",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Title Payment Draft\",\n    \"schedule_for\": \"2022-09-24T14:15:22Z\",\n    \"payments\": [\n        {\n            \"account_id\": \"2e6de1bf-97ad-478d-aad1-9d7a3cdf70cb\",\n            \"receiver\": {\n                \"counterparty_id\": \"a15bcac4-dd42-45ed-a828-6806ccc8bb7e\",\n                \"account_id\": \"2bf609f4-9825-4401-b6f7-960c61f8bee0\"\n            },\n            \"amount\": 10,\n            \"currency\": \"GBP\",\n            \"reference\": \"payment-draft-1\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/payment-drafts",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"payment-drafts"
									]
								}
							},
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"e7e54cb2-861a-xxxx-80e9-3e6600f3db10\"\n}"
						}
					]
				},
				{
					"name": "Retrieve a payment draft",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/payment-drafts/:payment_draft_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"payment-drafts",
								":payment_draft_id"
							],
							"variable": [
								{
									"key": "payment_draft_id",
									"value": "",
									"description": "The ID of the payment draft to retrieve."
								}
							]
						},
						"description": "Get the information about a specific payment draft by ID.\n\nThe response lists the details of the payment(s) included in the draft, as well as the draft details.\n\nFor more information, see the guides: [Payment drafts](https://developer.revolut.com/docs/guides/manage-accounts/transfers/payment-drafts)."
					},
					"response": [
						{
							"name": "Retrieve a payment draft",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/payment-drafts/{paymentDraftId}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"payment-drafts",
										"{paymentDraftId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"title\": \"Draft Payment through API\",\n    \"payments\": [\n        {\n            \"id\": \"67b38771-3db0-4cf0-bdc0-xxxxx284ab81\",\n            \"amount\": {\n                \"amount\": 123,\n                \"currency\": \"GBP\"\n            },\n            \"reference\": \"Draft Payment through API\",\n            \"account_id\": \"05018b0d-e67c-4fec-xxxx-415e9da9432c\",\n            \"receiver\": {\n                \"counterparty_id\": \"c71af44d-xxxxx-4e1a-84bb-17589c81f022\"\n            },\n            \"state\": \"CREATED\",\n            \"current_charge_options\": {\n                \"from\": {\n                    \"amount\": 123,\n                    \"currency\": \"GBP\"\n                },\n                \"to\": {\n                    \"amount\": 123,\n                    \"currency\": \"GBP\"\n                },\n                \"rate\": \"1.0000\",\n                \"fee\": {\n                    \"amount\": 0,\n                    \"currency\": \"GBP\"\n                }\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Delete a payment draft",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/payment-drafts/:payment_draft_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"payment-drafts",
								":payment_draft_id"
							],
							"variable": [
								{
									"key": "payment_draft_id",
									"value": "",
									"description": "The ID of the payment draft to delete."
								}
							]
						},
						"description": "Delete a payment draft with the given ID.\n\nYou can delete a payment draft only if it hasn't been [sent for processing](https://developer.revolut.com/docs/guides/manage-accounts/transfers/payment-drafts#send-drafts-for-processing).\n\nFor more information, see the guides: [Payment drafts](https://developer.revolut.com/docs/guides/manage-accounts/transfers/payment-drafts)."
					},
					"response": []
				}
			],
			"description": "Payment drafts let you prepare payments for future processing, prepare payments that require an approval, or prepare bulk or scheduled payments.\n\nSimply create a draft, and when you're ready, [send it for processing as payment](https://developer.revolut.com/docs/guides/manage-accounts/transfers/payment-drafts#send-drafts-for-processing). If you or the payment you're making is subject to an [approval process](https://help.revolut.com/business/help/managing-my-business/users-and-employees/how-can-i-set-payment-approval-rules/), another team member designated as an approver must approve it in the [Revolut Business app](https://business.revolut.com/) before the payment can be processed.\n\nYou can also retrieve or delete the drafts created with the API.\n\nFor more information on use cases and other details, see the guides: [Payment drafts](https://developer.revolut.com/docs/guides/manage-accounts/transfers/payment-drafts)."
		},
		{
			"name": "Payout links",
			"item": [
				{
					"name": "Retrieve a list of payout links",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/1.0/payout-links",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"payout-links"
							],
							"query": [
								{
									"key": "state",
									"value": "active",
									"description": "Possible values: [created, failed, awaiting, active, expired, cancelled, processing, processed]\n\nRetrieves links in the specified state(s). Possible states are:\n\n- created: The payout link has been created, but the amount has not yet been blocked.\n- failed: The payout link couldn't be generated due to a failure during transaction booking.\n- awaiting: The payout link is awaiting approval.\n- active: The payout link can be redeemed.\n- expired: The payout link cannot be redeemed because it wasn't claimed before its expiry date.\n- cancelled: The payout link cannot be redeemed because it was cancelled.\n- processing: The payout link has been redeemed and is being processed.\n- processed: The payout link has been redeemed and the money has been transferred to the recipient.\n\nUse for filtering to retrieve only links in specified states. To specify multiple values, follow this pattern: state={VALUE1}&state={VALUE2}.",
									"disabled": true
								},
								{
									"key": "created_before",
									"value": "2024-03-22T13:24:39Z",
									"description": "Retrieves links with created_at < created_before. The default value is the current date and time at which you are calling the endpoint.\n\nProvided in ISO 8601 format.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "100",
									"description": "The maximum number of links returned per page.\n\nTo get to the next page, make a new request and use the created_at date of the last payout link returned in the previous response as the value for created_before.",
									"disabled": true
								}
							]
						},
						"description": "Get all the links that you have created, or use the query parameters to filter the results.\n\nThe links are sorted by the `created_at` date in reverse chronological order.\n\nThe returned links are **paginated**. The maximum number of payout links returned per page is specified by the `limit` parameter. To get to the next page, make a new request and use the `created_at` date of the last payout link returned in the previous response."
					},
					"response": [
						{
							"name": "Retrieve a list of payout links",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/api/1.0/payout-links",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"payout-links"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 22 Mar 2024 14:16:28 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "R2VSX95DMI7Y"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"8e32b08a-e012-4530-bd15-c4e9ebde953d\",\n        \"state\": \"processed\",\n        \"created_at\": \"2024-01-11T14:02:53.472318Z\",\n        \"updated_at\": \"2024-01-11T14:05:02.962886Z\",\n        \"counterparty_name\": \"Jane Doe\",\n        \"request_id\": \"5a7fcb46-4be4-47d4-a56f-27a2e5b78dMM\",\n        \"expiry_date\": \"2023-07-18T14:02:53.717626Z\",\n        \"payout_methods\": [\n            \"revolut\",\n            \"bank_account\",\n            \"card\"\n        ],\n        \"account_id\": \"85f515e4-588f-4496-a6a5-a7615a193e6b\",\n        \"amount\": 5.6,\n        \"currency\": \"GBP\",\n        \"counterparty_id\": \"2ef4618a-f258-4ac5-a846-ca6e089214f6\",\n        \"transaction_id\": \"64ad618e-655a-a925-8425-2284c03f6c08\",\n        \"reference\": \"Bus ticket\",\n        \"transfer_reason_code\": \"travel\"\n    },\n    {\n        \"id\": \"12dcd8c2-6408-458f-98a9-3f4abc180898\",\n        \"state\": \"active\",\n        \"created_at\": \"2023-07-11T13:55:54.834963Z\",\n        \"updated_at\": \"2023-07-11T14:02:12.868346Z\",\n        \"counterparty_name\": \"John Doe\",\n        \"request_id\": \"5a7fcb46-4be4-47d4-a56f-27a2e5b78dd1\",\n        \"expiry_date\": \"2023-07-18T13:55:55.082280Z\",\n        \"payout_methods\": [\n            \"revolut\",\n            \"bank_account\"\n        ],\n        \"account_id\": \"85f515e4-588f-4496-a6a5-a7615a193e6b\",\n        \"amount\": 105.6,\n        \"currency\": \"GBP\",\n        \"url\": \"https://business.revolut.com/p/uSJVAd5SnP1\",\n        \"reference\": \"Rent\",\n        \"transfer_reason_code\": \"property_rental\"\n    },\n    {\n        \"id\": \"d3b02315-044c-471f-ad41-59d9a4e3c538\",\n        \"state\": \"active\",\n        \"created_at\": \"2023-07-11T13:53:45.986248Z\",\n        \"updated_at\": \"2023-07-11T13:53:46.475470Z\",\n        \"counterparty_name\": \"John Smith\",\n        \"request_id\": \"rev-001\",\n        \"expiry_date\": \"2023-07-18T13:53:46.474777Z\",\n        \"payout_methods\": [\n            \"revolut\"\n        ],\n        \"account_id\": \"85f515e4-588f-4496-a6a5-a7615a193e6b\",\n        \"amount\": 15.6,\n        \"currency\": \"GBP\",\n        \"url\": \"https://business.revolut.com/p/DPYtd2BUUwP\",\n        \"reference\": \"meal delivery\"\n    }\n]"
						}
					]
				},
				{
					"name": "Retrieve a payout link",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/1.0/payout-links/:payout_link_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"payout-links",
								":payout_link_id"
							],
							"variable": [
								{
									"key": "payout_link_id",
									"value": "",
									"description": "The ID of the link to retrieve."
								}
							]
						},
						"description": "Create a payout link to send money even when you don't have the full banking details of the counterparty.  \nAfter you have created the link, send it to the recipient so that they can claim the payment.\n\nFor more information, see the guides: [Send money via payout link](https://developer.revolut.com/docs/guides/manage-accounts/transfers/payout-links)."
					},
					"response": [
						{
							"name": "Retrieve a payout link",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/api/1.0/payout-links/:payout_link_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"payout-links",
										":payout_link_id"
									],
									"variable": [
										{
											"key": "payout_link_id",
											"value": "12dcd8c2-6408-458f-98a9-3f4abc180898",
											"description": "The ID of the link to retrieve."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 22 Mar 2024 14:18:58 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "1LEP5KW1J66UC"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"12dcd8c2-6408-458f-98a9-3f4abc180898\",\n    \"state\": \"active\",\n    \"created_at\": \"2023-07-11T13:55:54.834963Z\",\n    \"updated_at\": \"2023-07-11T13:55:55.082655Z\",\n    \"counterparty_name\": \"John Smith\",\n    \"request_id\": \"5a7fcb46-4be4-47d4-a56f-27a2e5b78dd1\",\n    \"expiry_date\": \"2023-07-18T13:55:55.082280Z\",\n    \"payout_methods\": [\n        \"revolut\",\n        \"bank_account\",\n        \"card\"\n    ],\n    \"account_id\": \"85f515e4-588f-4496-a6a5-a7615a193e6b\",\n    \"amount\": 105.6,\n    \"currency\": \"GBP\",\n    \"url\": \"https://business.revolut.com/p/uSJVAd5SnP1\",\n    \"reference\": \"Rent\",\n    \"transfer_reason_code\": \"property_rental\"\n}"
						}
					]
				},
				{
					"name": "Create a payout link",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"counterparty_name\": \"John Smith\",\n    \"save_counterparty\": false,\n    \"request_id\": \"{{$randomUUID}}\",\n    \"account_id\": \"85f515e4-588f-4496-a6a5-a7615a193e6b\",\n    \"amount\": 105.6,\n    \"currency\": \"GBP\",\n    \"reference\": \"Rent\",\n    \"payout_methods\": [\n        \"revolut\",\n        \"bank_account\",\n        \"card\"\n    ],\n    \"expiry_period\": \"P3D\",\n    \"transfer_reason_code\": \"property_rental\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1.0/payout-links",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"payout-links"
							]
						}
					},
					"response": [
						{
							"name": "Create a payout link",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"counterparty_name\": \"John Smith\",\n    \"save_counterparty\": false,\n    \"request_id\": \"5a7fcb46-4be4-47d4-a56f-27a2e5b78dd1\",\n    \"account_id\": \"85f515e4-588f-4496-a6a5-a7615a193e6b\",\n    \"amount\": 105.6,\n    \"currency\": \"GBP\",\n    \"reference\": \"Rent\",\n    \"payout_methods\": [\n        \"revolut\",\n        \"bank_account\",\n        \"card\"\n    ],\n    \"expiry_period\": \"P3D\",\n    \"transfer_reason_code\": \"property_rental\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/payout-links",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"payout-links"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 22 Mar 2024 14:23:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "20RNM4Z5YJK3"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"12dcd8c2-6408-458f-98a9-3f4abc180898\",\n    \"state\": \"active\",\n    \"created_at\": \"2023-07-11T13:55:54.834963Z\",\n    \"updated_at\": \"2023-07-11T13:55:55.082655Z\",\n    \"counterparty_name\": \"John Smith\",\n    \"request_id\": \"5a7fcb46-4be4-47d4-a56f-27a2e5b78dd1\",\n    \"expiry_date\": \"2023-07-18T13:55:55.082280Z\",\n    \"payout_methods\": [\n        \"revolut\",\n        \"bank_account\",\n        \"card\"\n    ],\n    \"account_id\": \"85f515e4-588f-4496-a6a5-a7615a193e6b\",\n    \"amount\": 105.6,\n    \"currency\": \"GBP\",\n    \"url\": \"https://business.revolut.com/p/uSJVAd5SnP1\",\n    \"reference\": \"Rent\",\n    \"transfer_reason_code\": \"property_rental\"\n}"
						}
					]
				},
				{
					"name": "Cancel a payout link",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/api/1.0/payout-links/:payout_link_id/cancel",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"payout-links",
								":payout_link_id",
								"cancel"
							],
							"variable": [
								{
									"key": "payout_link_id",
									"value": "",
									"description": "The ID of the link to cancel."
								}
							]
						},
						"description": "Cancel a payout link. You can only cancel a link that hasn't been claimed yet. A successful request does not get any content in response.\n\nFor more information, see the guides: [Send money via payout link](https://developer.revolut.com/docs/guides/manage-accounts/transfers/payout-links)."
					},
					"response": [
						{
							"name": "Cancel a payout link",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/api/1.0/payout-links/:payout_link_id/cancel",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"payout-links",
										":payout_link_id",
										"cancel"
									],
									"variable": [
										{
											"key": "payout_link_id",
											"value": "12dcd8c2-6408-458f-98a9-3f4abc180898",
											"description": "The ID of the link to cancel."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 22 Mar 2024 14:46:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "1LC3184QIF905"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get transfer reasons",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/transfer-reasons",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"transfer-reasons"
							]
						},
						"description": "In order to initiate a transfer in certain currencies and countries, you must provide a transfer reason. With this endpoint you can retrieve all transfer reasons available to your business account per country and currency.\n\nAfter you retrieve the results, use the appropriate reason code in the `transfer_reason_code` field when [making a transfer to a counterparty](https://developer.revolut.com/docs/business/create-payment) or [creating a payout link](https://developer.revolut.com/docs/business/create-payout-link)."
					},
					"response": [
						{
							"name": "Get transfer reasons",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/api/1.0/transfer-reasons",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transfer-reasons"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Oct 2022 13:37:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "1EGZ8DWZG5IHO"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.48.v20220622)"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"country\": \"IN\",\n        \"currency\": \"INR\",\n        \"code\": \"advertising\",\n        \"description\": \"Advertising\"\n    },\n    {\n        \"country\": \"IN\",\n        \"currency\": \"INR\",\n        \"code\": \"advisor_fees\",\n        \"description\": \"Advisor fees\"\n    },\n    {\n        \"country\": \"IN\",\n        \"currency\": \"INR\",\n        \"code\": \"construction\",\n        \"description\": \"Construction\"\n    },\n    {\n        \"country\": \"IN\",\n        \"currency\": \"INR\",\n        \"code\": \"delivery\",\n        \"description\": \"Delivery\"\n    }\n]"
						}
					]
				}
			],
			"description": "Use payout links to send money without having to request full banking details of the recipient.  \nThe recipient must claim the money before the link expires.\n\nFor more information, see the guides: [Send money via payout link](https://developer.revolut.com/docs/guides/manage-accounts/transfers/payout-links)."
		},
		{
			"name": "Simulations (Sandbox only)",
			"item": [
				{
					"name": "Simulate a transfer state update",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://sandbox-b2b.revolut.com/api/1.0/sandbox/transactions/:id/:action",
							"protocol": "https",
							"host": [
								"sandbox-b2b",
								"revolut",
								"com"
							],
							"path": [
								"api",
								"1.0",
								"sandbox",
								"transactions",
								":id",
								":action"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "The ID of the transfer whose state you want to update."
								},
								{
									"key": "action",
									"value": null,
									"description": "Possible values: [complete, revert, decline, fail]"
								}
							]
						},
						"description": "Simulate a transfer state change in the Sandbox environment.\n\nFor example, after you make a transfer in Sandbox, you can change its state to `completed`. The resulting state is final and cannot be changed.\n\nFor more information, see the guides: [Test your flows with simulations (Sandbox only)](https://developer.revolut.com/docs/guides/manage-accounts/api-usage-and-testing/test-flows-with-simulations)."
					},
					"response": [
						{
							"name": "Transfer state update - completed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://sandbox-b2b.revolut.com/api/1.0/sandbox/transactions/{id}/complete",
									"protocol": "https",
									"host": [
										"sandbox-b2b",
										"revolut",
										"com"
									],
									"path": [
										"api",
										"1.0",
										"sandbox",
										"transactions",
										"{id}",
										"complete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"a6ea39d7-62c9-481c-8ba6-8a887a44c486\",\n    \"state\": \"completed\",\n    \"created_at\": \"2023-01-23T08:39:35.811005Z\",\n    \"completed_at\": \"2023-01-23T08:39:35.811005Z\"\n}"
						},
						{
							"name": "Transfer state update - reverted",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://sandbox-b2b.revolut.com/api/1.0/sandbox/transactions/{id}/revert",
									"protocol": "https",
									"host": [
										"sandbox-b2b",
										"revolut",
										"com"
									],
									"path": [
										"api",
										"1.0",
										"sandbox",
										"transactions",
										"{id}",
										"revert"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"641b3164-1234-ae73-1234-5cf140930a1e\",\n    \"state\": \"reverted\",\n    \"created_at\": \"2023-03-22T16:48:36.115536Z\"\n}"
						},
						{
							"name": "Transfer state update - declined",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://sandbox-b2b.revolut.com/api/1.0/sandbox/transactions/{id}/decline",
									"protocol": "https",
									"host": [
										"sandbox-b2b",
										"revolut",
										"com"
									],
									"path": [
										"api",
										"1.0",
										"sandbox",
										"transactions",
										"{id}",
										"decline"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"641b3164-1234-ae73-1234-5cf140930a1e\",\n    \"state\": \"declined\",\n    \"created_at\": \"2023-03-22T16:48:36.115536Z\"\n}"
						}
					]
				},
				{
					"name": "Account top-up",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_id\": \"e042faaa-1234-49cc-1234-db7a6c46944f\",\n    \"amount\": 100,\n    \"currency\": \"GBP\",\n    \"reference\": \"Test Top-up\",\n    \"state\": \"completed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://sandbox-b2b.revolut.com/api/1.0/sandbox/topup",
							"protocol": "https",
							"host": [
								"sandbox-b2b",
								"revolut",
								"com"
							],
							"path": [
								"api",
								"1.0",
								"sandbox",
								"topup"
							]
						},
						"description": "Simulate a top-up of your account in the Sandbox environment.\n\nThis is useful during testing, when you run out of money in your test account and need to add more.\n\nFor more information, see the guides: [Test your flows with simulations (Sandbox only)](https://developer.revolut.com/docs/guides/manage-accounts/api-usage-and-testing/test-flows-with-simulations)."
					},
					"response": [
						{
							"name": "Account top-up",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_id\": \"e042f1fe-f721-49cc-af82-db7a6c46944f\",\n    \"amount\": 100,\n    \"currency\": \"GBP\",\n    \"reference\": \"Test Top-up\",\n    \"state\": \"completed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://sandbox-b2b.revolut.com/api/1.0/sandbox/topup",
									"protocol": "https",
									"host": [
										"sandbox-b2b",
										"revolut",
										"com"
									],
									"path": [
										"api",
										"1.0",
										"sandbox",
										"topup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"330953b8-b089-4cfd-9f03-e88173d64248\",\n    \"state\": \"completed\",\n    \"created_at\": \"2023-01-23T08:39:35.811005Z\",\n    \"completed_at\": \"2023-01-23T08:39:35.811005Z\"\n}"
						}
					]
				}
			],
			"description": "The Simulations API is only available in the Sandbox environment. It lets you simulate certain events that are otherwise only possible in the production environment, such as your account's top-up and transfer state changes.\n\nFor more information, see the guides: [Test your flows with simulations (Sandbox only)](https://developer.revolut.com/docs/guides/manage-accounts/api-usage-and-testing/test-flows-with-simulations)."
		},
		{
			"name": "Team members",
			"item": [
				{
					"name": "Retrieve a list of team members",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/team-members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"team-members"
							],
							"query": [
								{
									"key": "created_before",
									"value": "2023-10-03T22:33:00.186014Z",
									"description": "Retrieves team members with created_at < created_before. The default value is the current date and time at which you are calling the endpoint.\n\nProvided in ISO 8601 format.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "2",
									"description": "The maximum number of team members returned per page.\n\nTo get to the next page, make a new request and use the created_at date of the last team member returned in the previous response as the value for created_before.",
									"disabled": true
								}
							]
						},
						"description": "Get information about all the team members of your business.\n\nThe results are paginated and sorted by the `created_at` date in reverse chronological order."
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/team-members?created_before=2023-10-03T22:33:00.186014Z&limit=2",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"team-members"
									],
									"query": [
										{
											"key": "created_before",
											"value": "2023-10-03T22:33:00.186014Z"
										},
										{
											"key": "limit",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 11 Oct 2023 07:16:23 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "C8VVTXG5DX7R"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"email\": \"john.doe@example.com\",\n        \"id\": \"76969b71-a123-42dc-b874-a34688d7bba4\",\n        \"role_id\": \"OWNER\",\n        \"state\": \"active\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"created_at\": \"2022-09-07T09:19:31.592368Z\",\n        \"updated_at\": \"2022-09-07T09:21:24.346670Z\"\n    },\n    {\n        \"email\": \"john.smith@example.com\",\n        \"id\": \"168922e1-594f-4ca0-93b2-56b742f3936b\",\n        \"role_id\": \"024abb3d-06da-4701-9254-dfcc3da38385\",\n        \"state\": \"active\",\n        \"created_at\": \"2022-09-07T09:19:32.592368Z\",\n        \"updated_at\": \"2022-09-07T09:21:25.346670Z\"\n    }\n]"
						},
						{
							"name": "400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/team-members?created_before=2023-10-03T22:33:00.186014Z&limit=1001",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"team-members"
									],
									"query": [
										{
											"key": "created_before",
											"value": "2023-10-03T22:33:00.186014Z"
										},
										{
											"key": "limit",
											"value": "1001"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 11 Oct 2023 07:17:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "MOGOSP3584I5"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Parameter limit must be a valid integer in range: [1, 1000].\",\n    \"code\": 2101\n}"
						}
					]
				},
				{
					"name": "Invite a new member to your business",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.smith@example.com\",\n    \"role_id\": \"0098ac28-b92f-435e-a3a2-2829d3918dfb\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1.0/team-members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"team-members"
							]
						},
						"description": "Invite a new member to your business account.\n\nWhen you invite a new team member to your business account, an invitation is sent to their email address that you provided in this request. To join your business account, the new team member has to accept this invitation."
					},
					"response": [
						{
							"name": "201",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.smith@example.com\",\n    \"role_id\": \"0098ac28-b92f-435e-a3a2-2829d3918dfb\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/team-members",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"team-members"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 11 Oct 2023 07:52:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "Y3ADYKLYRP8F"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"email\": \"john.smith@example.com\",\n    \"id\": \"76969b71-a123-42dc-b874-a34688d7bba4\",\n    \"role_id\": \"0098ac28-b92f-435e-a3a2-2829d3918dfb\",\n    \"created_at\": \"2022-09-07T09:19:31.592368Z\",\n    \"updated_at\": \"2022-09-07T09:21:24.346670Z\"\n}"
						}
					]
				},
				{
					"name": "Retrieve team roles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/roles",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"roles"
							],
							"query": [
								{
									"key": "created_before",
									"value": "2023-10-03T22:33:00.186014Z",
									"description": "Retrieves team members with created_at < created_before. The default value is the current date and time at which you are calling the endpoint.\n\nProvided in ISO 8601 format.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "2",
									"description": "The maximum number of team members returned per page.\n\nTo get to the next page, make a new request and use the created_at date of the last team member returned in the previous response as the value for created_before.",
									"disabled": true
								}
							]
						},
						"description": "Get the list of roles for your business.\n\nThe results are paginated and sorted by the `created_at` date in reverse chronological order."
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/roles",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"roles"
									],
									"query": [
										{
											"key": "created_before",
											"value": "2023-10-03T22:33:00.186014Z",
											"description": "Retrieves roles with created_at < created_before. The default value is the current date and time at which you are calling the endpoint.\n\nProvided in ISO 8601 format.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "2",
											"description": "The maximum number of roles returned per page.\n\nTo get to the next page, make a new request and use the created_at date of the last role returned in the previous response as the value for created_before.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 11 Oct 2023 07:29:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "Z73KXEPG1Y8V"
								},
								{
									"key": "Server",
									"value": "Revolut"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"owner\",\n        \"name\": \"Owner\",\n        \"created_at\": \"2023-09-07T09:21:12.962303Z\",\n        \"updated_at\": \"2023-09-07T09:21:12.962303Z\"\n    },\n    {\n        \"id\": \"member\",\n        \"name\": \"Member\",\n        \"created_at\": \"2023-09-07T09:21:12.962303Z\",\n        \"updated_at\": \"2023-09-07T09:21:12.962303Z\"\n    },\n    {\n        \"id\": \"viewer\",\n        \"name\": \"Viewer\",\n        \"created_at\": \"2023-09-07T09:21:12.962303Z\",\n        \"updated_at\": \"2023-09-07T09:21:12.962303Z\"\n    },\n    {\n        \"id\": \"a40b6121-350b-4d2e-9ba1-9dab61a18d46\",\n        \"name\": \"Example custom role\",\n        \"created_at\": \"2023-09-07T09:21:12.963143Z\",\n        \"updated_at\": \"2023-09-07T09:21:12.963143Z\"\n    }\n]"
						}
					]
				}
			],
			"description": "Retrieve information on existing team members of your organisation and invite new members."
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Retrieve all transactions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/transactions",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"transactions"
							],
							"query": [
								{
									"key": "from",
									"value": "2022-08-31T17:21:20.364171Z",
									"description": "The date and time you retrieve the historical transactions from, including this date-time. Corresponds to the created_at value of the transaction. Provided in ISO 8601 format.\n\nUsed also for pagination. To get back to the previous page of results, make a new request and use the created_at date from the first item of the current page as the value for the from parameter.",
									"disabled": true
								},
								{
									"key": "to",
									"value": "2025-08-31T17:21:20.364171Z",
									"description": "The date and time you retrieve the historical transactions to, excluding this date-time. Corresponds to the created_at value of the transaction. Provided in ISO 8601 format. The default value is the date and time at which you're calling the endpoint.\n\nUsed also for pagination. To get the next page of results, make a new request and use the created_at date from the last item of the previous (current) page as the value for the to parameter.",
									"disabled": true
								},
								{
									"key": "account",
									"value": "<account_id>",
									"description": "The ID of the account",
									"disabled": true
								},
								{
									"key": "count",
									"value": "1000",
									"description": "The maximum number of the historical transactions to retrieve per page.\n\nTo get the next page of results, make a new request and use the created_at date from the last item of the previous page as the value for the to parameter.",
									"disabled": true
								},
								{
									"key": "type",
									"value": "<type>",
									"description": "The type of the historical transactions to retrieve.\n\nPossible values: [atm, card_payment, card_refund, card_chargeback, card_credit, exchange, transfer, loan, fee, refund, topup, topup_return, tax, tax_refund]",
									"disabled": true
								}
							]
						},
						"description": "Retrieve the historical transactions based on the provided query criteria.\n\nThe transactions are sorted by the `created_at` date in reverse chronological order, and they're **paginated**. The maximum number of transactions returned per page is specified by the `count` parameter. To get the next page of results, make a new request and use the `created_at` date from the last item of the previous page as the value for the `to` parameter.\n\nFor more details, see the guides: [Retrieve transaction data](https://developer.revolut.com/docs/guides/manage-accounts/accounts-and-transactions/retrieve-transactions)."
					},
					"response": [
						{
							"name": "Retrieve all transactions",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/transactions",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transactions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"630f9890-95e3-add1-be4a-95f126988221\",\n        \"type\": \"transfer\",\n        \"state\": \"pending\",\n        \"request_id\": \"invoice00912345\",\n        \"created_at\": \"2024-08-31T17:21:20.364171Z\",\n        \"updated_at\": \"2024-08-31T17:21:20.364171Z\",\n        \"reference\": \"invoice00912345\",\n        \"legs\": [\n            {\n                \"leg_id\": \"630f9890-95e3-add1-0000-95f1269f0000\",\n                \"account_id\": \"812fff9a-3b0c-4ad1-b41a-cc60899d9900\",\n                \"counterparty\": {\n                    \"account_type\": \"revolut\",\n                    \"account_id\": \"e0af9f24-504c-4c5d-bd1d-07edf9f49876\"\n                },\n                \"amount\": -1.16,\n                \"currency\": \"EUR\",\n                \"bill_amount\": -1,\n                \"bill_currency\": \"GBP\",\n                \"description\": \"To John Doe\"\n            }\n        ]\n    },\n    {\n        \"id\": \"640c2b97-aaaa-1234-aaaa-c47a165c2e7e\",\n        \"type\": \"card_payment\",\n        \"state\": \"completed\",\n        \"request_id\": \"REVP:8988a9a0-aaaa-1234-aaaa-5bcc66d938bf\",\n        \"created_at\": \"2024-03-11T07:19:51.302559Z\",\n        \"updated_at\": \"2024-03-12T02:13:36.842322Z\",\n        \"completed_at\": \"2024-03-12T02:13:36.836595Z\",\n        \"merchant\": {\n            \"name\": \"Facebook\",\n            \"city\": \"New York\",\n            \"category_code\": \"7311\",\n            \"country\": \"USA\"\n        },\n        \"legs\": [\n            {\n                \"leg_id\": \"640c2b97-aaaa-1234-aaaa-c47a165c2e7e\",\n                \"account_id\": \"92e43866-aaaa-1234-aaaa-6e31dd23f024\",\n                \"amount\": -47.8,\n                \"fee\": 0.66,\n                \"currency\": \"AED\",\n                \"bill_amount\": -13,\n                \"bill_currency\": \"USD\",\n                \"description\": \"Facebk *1234mn1ha2\",\n                \"balance\": 7.74\n            }\n        ],\n        \"card\": {\n            \"id\": \"2b1a31bc-4795-4f95-b939-ae9cf911dc6e\",\n            \"card_number\": \"516760******1234\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Smith\",\n            \"phone\": \"+12412341234\"\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "Retrieve a transaction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/transaction/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"transaction",
								":id"
							],
							"query": [
								{
									"key": "id_type",
									"value": "request_id",
									"description": "The type of the ID to retrieve the transaction by.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": null,
									"description": "The ID of the transaction, or the request ID provided at payment creation if id_type = request_id."
								}
							]
						},
						"description": "Retrieve the details of a specific transaction. The details can include, for example, cardholder details for card payments.\n\nYou can retrieve a transaction with its details either by its **transaction ID** or by the **request ID** that was provided for this transaction at the time of its creation, for example, when you [created a payment](https://developer.revolut.com/docs/business/create-payment).\n\n- To retrieve a transaction by its **transaction ID**, use:  \n    `/transaction/{transaction_id}`\n    \n- To retrieve a transaction by a **request ID** provided at transaction creation, use:  \n    `/transaction/{request_id}?id_type=request_id`\n    \n\nFor more details, see the guides: [Retrieve transaction data](https://developer.revolut.com/docs/guides/manage-accounts/accounts-and-transactions/retrieve-transactions)."
					},
					"response": [
						{
							"name": "Exchange",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/transaction/{transactionId}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transaction",
										"{transactionId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"640dc0b7-1234-xxxx-1234-92ac4de1dacd\",\n    \"type\": \"exchange\",\n    \"state\": \"completed\",\n    \"request_id\": \"d8f041ab-1234-xxxx-1234-78b6a0b2801f\",\n    \"created_at\": \"2023-03-12T12:08:07.833414Z\",\n    \"updated_at\": \"2023-03-12T12:08:07.833414Z\",\n    \"completed_at\": \"2023-03-12T12:08:07.833705Z\",\n    \"legs\": [\n        {\n            \"leg_id\": \"640dc0a7-xxxx-a5b5-xxxx-92ac4de1dacd\",\n            \"account_id\": \"0d1848dc-xxxx-4a9a-xxxx-cae53cbd4baf\",\n            \"amount\": -1,\n            \"currency\": \"GBP\",\n            \"bill_amount\": -8.39,\n            \"bill_currency\": \"DKK\",\n            \"description\": \"Exchanged to DKK\",\n            \"balance\": 8.74\n        },\n        {\n            \"leg_id\": \"640dc0a7-xxxx-a5b5-xxxx-92ac4de1dacd\",\n            \"account_id\": \"246bc9de-xxxx-4f86-xxxx-4d291a5d0390\",\n            \"amount\": 8.39,\n            \"fee\": 0.08,\n            \"currency\": \"DKK\",\n            \"description\": \"Exchanged from GBP Main\",\n            \"balance\": 19.33\n        }\n    ]\n}"
						},
						{
							"name": "Card Payment",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/transaction/{transactionId}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transaction",
										"{transactionId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"640c2b97-xxxx-1234-xxxx-c47a165c2e7e\",\n    \"type\": \"card_payment\",\n    \"state\": \"completed\",\n    \"request_id\": \"REVP:8988a9a0-xxxx-1234-xxxx-5bcc66d938bf\",\n    \"created_at\": \"2023-03-11T07:19:51.302559Z\",\n    \"updated_at\": \"2023-03-12T02:13:36.842322Z\",\n    \"completed_at\": \"2023-03-12T02:13:36.836595Z\",\n    \"merchant\": {\n        \"name\": \"Facebook\",\n        \"city\": \"London\",\n        \"category_code\": \"7311\",\n        \"country\": \"USA\"\n    },\n    \"legs\": [\n        {\n            \"leg_id\": \"640c2b97-xxxx-1234-xxxx-c47a165c2e7e\",\n            \"account_id\": \"92e43866-xxxx-1234-xxxx-6e31dd23f024\",\n            \"amount\": -47.8,\n            \"fee\": 0.66,\n            \"currency\": \"AED\",\n            \"bill_amount\": -13,\n            \"bill_currency\": \"USD\",\n            \"description\": \"Facebk *1234mn1ha2\",\n            \"balance\": 7.74\n        }\n    ],\n    \"card\": {\n        \"card_number\": \"516760******1234\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Smith\",\n        \"phone\": \"+12412341234\"\n    }\n}\n"
						},
						{
							"name": "Outbound transfer",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/transaction/{transactionId}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transaction",
										"{transactionId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n  \"id\": \"640c1963-xxxx-1234-xxxx-a6b451197c6a\",\n  \"type\": \"transfer\",\n  \"state\": \"completed\",\n  \"request_id\": \"8cc6f5db-xxxx-1234-xxxx-068a05af424e\",\n  \"created_at\": \"2023-03-11T06:02:11.785704Z\",\n  \"updated_at\": \"2023-03-11T06:02:14.628964Z\",\n  \"completed_at\": \"2023-03-11T06:02:14.624946Z\",\n  \"reference\": \"Reference example\",\n  \"legs\": [\n    {\n      \"leg_id\": \"640c1963-xxxx-1234-xxxx-a6b451197c6a\",\n      \"account_id\": \"0d1848dc-xxxx-1234-xxxx-cae53cbd4baf\",\n      \"counterparty\": {\n        \"id\": \"f5a9a06b-xxxx-1234-xxxx-c51df843e30d\",\n        \"account_type\": \"external\",\n        \"account_id\": \"25c9d813-xxxx-1234-xxxx-28334fc4d133\"\n      },\n      \"amount\": -100,\n      \"fee\": 0.1,\n      \"currency\": \"GBP\",\n      \"description\": \"To John Smith\",\n      \"balance\": 9.74\n    }\n  ]\n}"
						},
						{
							"name": "Inbound transfer",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/transaction/{transactionId}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transaction",
										"{transactionId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n  \"id\": \"63f3a305-xxxx-1234-xxxx-54f06420ae58\",\n  \"type\": \"transfer\",\n  \"state\": \"completed\",\n  \"request_id\": \"7d3a3358-xxx-1234-xxx-c332c49b6431\",\n  \"created_at\": \"2023-02-20T16:42:45.897576Z\",\n  \"updated_at\": \"2023-02-20T16:42:45.897576Z\",\n  \"completed_at\": \"2023-02-20T16:42:45.897845Z\",\n  \"reference\": \"Transfer to Revolut\",\n  \"legs\": [\n    {\n      \"leg_id\": \"63f3a305-xxx-1234-xxx-54f06420ae58\",\n      \"account_id\": \"74d4d6cb-xxx-1234-xxx-9604b94e3019\",\n      \"counterparty\": {\n        \"account_type\": \"revolut\"\n      },\n      \"amount\": 10,\n      \"currency\": \"GBP\",\n      \"description\": \"From JOHN SMITH\",\n      \"balance\": 3.7\n    }\n  ]\n}"
						},
						{
							"name": "Internal transfer",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/transaction/{transactionId}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transaction",
										"{transactionId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n  \"id\": \"640b4fbf-xxxx-1234-xxxx-17a2d10142af\",\n  \"type\": \"transfer\",\n  \"state\": \"completed\",\n  \"request_id\": \"f8bbea44-xxxx-1234-xxxx-113df56660f7\",\n  \"created_at\": \"2023-03-10T15:41:51.304765Z\",\n  \"updated_at\": \"2023-03-10T15:41:51.395348Z\",\n  \"completed_at\": \"2023-03-10T15:41:51.388279Z\",\n  \"legs\": [\n    {\n      \"leg_id\": \"640b4fbf-xxxx-1234-xxxx-17a2d10142af\",\n      \"account_id\": \"0d1848dc-xxxx-1234-xxxx-cae53cbd4baf\",\n      \"amount\": 100,\n      \"currency\": \"GBP\",\n      \"description\": \"To GBP Deposit pocket\",\n      \"balance\": 100.84\n    },\n    {\n      \"leg_id\": \"640b4fbf-xxxx-1234-xxxx-17a2d10142af\",\n      \"account_id\": \"87f2f697-xxxx-1234-xxxx-a20c78c0d24f\",\n      \"amount\": 100,\n      \"currency\": \"GBP\",\n      \"description\": \"From GBP Regular pocket\",\n      \"balance\": 100.65\n    }\n  ]\n}"
						},
						{
							"name": "ATM",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/transaction/{transactionId}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transaction",
										"{transactionId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n  \"id\": \"62d5161d-xxxx-1234-xxxx-219f88258175\",\n  \"type\": \"atm\",\n  \"state\": \"completed\",\n  \"request_id\": \"REVP:b46e51ca-xxxx-1234-xxxx-e54321796ff0\",\n  \"created_at\": \"2022-07-18T08:13:17.025950Z\",\n  \"updated_at\": \"2022-07-19T16:21:22.521625Z\",\n  \"completed_at\": \"2022-07-19T16:21:22.515565Z\",\n  \"merchant\": {\n    \"name\": \"Barclays\",\n    \"city\": \"Canary Wharf\",\n    \"category_code\": \"6011\",\n    \"country\": \"GBR\"\n  },\n  \"legs\": [\n    {\n      \"leg_id\": \"c84cec91-xxxx-1234-xxxx-62d1979dcf3a\",\n      \"account_id\": \"dbd3c68b-xxxx-1234-xxxx-5621a117ecbf\",\n      \"amount\": -21.22,\n      \"fee\": 0.48,\n      \"currency\": \"GBP\",\n      \"bill_amount\": -25,\n      \"bill_currency\": \"EUR\",\n      \"description\": \"Cash at Barclays\",\n      \"balance\": 9.9\n    }\n  ],\n  \"card\": {\n    \"card_number\": \"516760******1234\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Smith\",\n    \"phone\": \"+447712341234\"\n  }\n}"
						},
						{
							"name": "Top up",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/transaction/{transactionId}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transaction",
										"{transactionId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n  \"id\": \"63c95e75-xxxx-1234-xxxx-4e7a7768c663\",\n  \"type\": \"topup\",\n  \"state\": \"completed\",\n  \"request_id\": \"9d4d90c5-xxxx-1234-xxxx-ac65bf589532\",\n  \"created_at\": \"2023-01-19T15:15:01.895737Z\",\n  \"updated_at\": \"2023-01-19T15:16:14.839234Z\",\n  \"completed_at\": \"2023-01-19T15:16:14.833964Z\",\n  \"reference\": \"Top up Revolut account\",\n  \"legs\": [\n    {\n      \"leg_id\": \"63c95e75-xxxx-1234-xxxx-4e7a7768c663\",\n      \"account_id\": \"6ce35350-xxxx-1234-xxxx-006d3f739b80\",\n      \"amount\": 100,\n      \"currency\": \"EUR\",\n      \"description\": \"Payment from John Smith\",\n      \"balance\": 1\n    }\n  ]\n}"
						},
						{
							"name": "Card chargeback",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/transaction/{transactionId}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transaction",
										"{transactionId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n  \"id\": \"6409e928-xxxx-1234-xxxx-872a41309af1\",\n  \"type\": \"card_chargeback\",\n  \"state\": \"completed\",\n  \"request_id\": \"CARD_CHARGEBACK_eabeb099-xxxx-1234-xxxx-ce72583866bb_0\",\n  \"created_at\": \"2023-03-09T14:11:52.453528Z\",\n  \"updated_at\": \"2023-03-09T14:11:52.453528Z\",\n  \"completed_at\": \"2023-03-09T14:11:52.453740Z\",\n  \"legs\": [\n    {\n      \"leg_id\": \"6409e928-xxxx-1234-xxxx-872a41309af1\",\n      \"account_id\": \"0d1848dc-xxxxx-1234-xxxx-cae53cbd4baf\",\n      \"amount\": 4.68,\n      \"currency\": \"GBP\",\n      \"description\": \"Card chargeback for Rev*www.revolut.com/bu\",\n      \"balance\": 13.08\n    }\n  ]\n}"
						}
					]
				}
			],
			"description": "Get the details of your transactions."
		},
		{
			"name": "Transfers",
			"item": [
				{
					"name": "Move money between your accounts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request_id\": \"{{$randomUUID}}\",\n    \"source_account_id\": \"2e6de1bf-97ad-478d-aad1-9d7a3cdf1234\",\n    \"target_account_id\": \"ae2e1241-81dd-498d-868e-075484785678\",\n    \"amount\": 10,\n    \"currency\": \"GBP\",\n    \"reference\": \"John's transfer\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1.0/transfer",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"transfer"
							]
						},
						"description": "Move money between the Revolut accounts of the business in the same currency.\n\nThe resulting transaction has the type `transfer`.\n\nFor more information, see the guides: [Send money](https://developer.revolut.com/docs/guides/manage-accounts/transfers/send-money)."
					},
					"response": [
						{
							"name": "Create a transfer",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request_id\": \"129999\",\n    \"source_account_id\": \"2e6de1bf-97ad-478d-aad1-9d7a3cdf1234\",\n    \"target_account_id\": \"ae2e1241-81dd-498d-868e-075484785678\",\n    \"amount\": 10,\n    \"currency\": \"GBP\",\n    \"reference\": \"John's transfer\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/transfer",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transfer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"630f95f7-a3f9-abf2-b4e4-3f65281234dc\",\n    \"state\": \"completed\",\n    \"created_at\": \"2020-11-23T08:39:35.811005Z\",\n    \"completed_at\": \"2020-11-23T08:39:35.811005Z\"\n}"
						}
					]
				},
				{
					"name": "Create a transfer to another account or card",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"request_id\": \"{{$randomUUID}}\",\n    \"account_id\": \"228f4ddc-b981-4d45-bc16-54304b14da22\",\n    \"receiver\": {\n        \"counterparty_id\": \"a1d2a938-c69b-4f08-b15f-bfc1b54b69d1\",\n        \"account_id\": \"417433c2-d930-47a0-ad34-a88b01939ce5\"\n    },\n    \"amount\": 0.50,\n    \"currency\": \"EUR\",\n    \"charge_bearer\" : \"shared\",\n    \"reference\": \"To John Doe\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1.0/pay",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"pay"
							]
						},
						"description": "Make a payment to a counterparty. You can choose either a bank transfer or a card transfer. The resulting transaction has the type `transfer`.\n\nIf you make the payment to another Revolut account, either business or personal, the transaction is executed instantly.\n\nIf the counterparty has multiple payment methods available, for example, 2 accounts, or 1 account and 1 card, you **must specify the account or card** to which you want to transfer the money (`receiver.account_id` or `receiver.card_id` respectively) .\n\nFor more details, see the guides: [Send money via bank transfer](https://developer.revolut.com/docs/guides/manage-accounts/transfers/bank-transfers) and [Card transfers](https://developer.revolut.com/docs/guides/manage-accounts/transfers/card-transfers)."
					},
					"response": [
						{
							"name": "200 - Create a payment",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request_id\": \"A1pH4num3ric\",\n    \"account_id\": \"af98333c-ea53-482b-93c2-1fa5e4eae671\",\n    \"receiver\": {\n        \"counterparty_id\": \"49c6a48b-6b58-40a0-b974-0b8c4888c8a7\",\n        \"account_id\": \"9116f03a-c074-4585-b261-18a706b3768b\"\n    },\n    \"amount\": 10,\n    \"currency\": \"EUR\",\n    \"reference\": \"To John Doe\"\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/pay",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"pay"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"id\": \"630f9a62-e488-a9ce-a2d3-a30kkkke03f0\",\n    \"state\": \"pending\",\n    \"created_at\": \"2022-08-31T17:29:06.625613Z\"\n}"
						},
						{
							"name": "400 - Create a payment",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request_id\": \"d05f93a4-e36d-4c97-a51c-0f3e4c6c11bc\",\n    \"account_id\": \"228f4ddc-b981-4d45-bc16-54304b14da22\",\n    \"receiver\": {\n        \"counterparty_id\": \"a1d2a938-c69b-4f08-b15f-bfc1b54b69d1\",\n        \"account_id\": \"417433c2-d930-47a0-ad34-a88b01939ce5\"\n    },\n    \"amount\": 0.50,\n    \"currency\": \"EUR\",\n    \"charge_bearer\" : \"shared\",\n    \"reference\": \"To John Doe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/pay",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"pay"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"code\": 3287,\n    \"description\": \"Specified 'charge_bearer' is not supported for this transaction.\"\n}"
						},
						{
							"name": "200 - Create an INR payment",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"request_id\": \"{{$randomUUID}}\",\n    \"account_id\": \"f2efd687-1084-45a6-ace6-8abc1352f0d3\",\n    \"receiver\": {\n        \"counterparty_id\": \"03153735-d49c-4f8b-ac42-1fe40aeb4167\",\n        \"account_id\": \"8b9eff51-2bd1-4ce2-9974-b87385092e3e\"\n    },\n    \"amount\": 200,\n    \"currency\": \"INR\",\n    \"charge_bearer\" : \"shared\",\n    \"reference\": \"To John Doe\",\n    \"transfer_reason_code\": \"advertising\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/pay",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"pay"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Oct 2022 14:26:32 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "1PPS5GG5WN65E"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.48.v20220622)"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"63515a99-cecc-aabe-af28-bb7ed9a235bc\",\n    \"state\": \"pending\",\n    \"created_at\": \"2022-10-20T14:26:33.805957Z\"\n}"
						}
					]
				},
				{
					"name": "Get transfer reasons",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1.0/transfer-reasons",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1.0",
								"transfer-reasons"
							]
						},
						"description": "In order to initiate a transfer in certain currencies and countries, you must provide a transfer reason. With this endpoint you can retrieve all transfer reasons available to your business account per country and currency.\n\nAfter you retrieve the results, use the appropriate reason code in the `transfer_reason_code` field when [making a transfer to a counterparty](https://developer.revolut.com/docs/business/create-payment) or [creating a payout link](https://developer.revolut.com/docs/business/create-payout-link)."
					},
					"response": [
						{
							"name": "Get transfer reasons",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{url}}/api/1.0/transfer-reasons",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"transfer-reasons"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 20 Oct 2022 13:37:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								},
								{
									"key": "request-id",
									"value": "1EGZ8DWZG5IHO"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.48.v20220622)"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"country\": \"IN\",\n        \"currency\": \"INR\",\n        \"code\": \"advertising\",\n        \"description\": \"Advertising\"\n    },\n    {\n        \"country\": \"IN\",\n        \"currency\": \"INR\",\n        \"code\": \"advisor_fees\",\n        \"description\": \"Advisor fees\"\n    },\n    {\n        \"country\": \"IN\",\n        \"currency\": \"INR\",\n        \"code\": \"construction\",\n        \"description\": \"Construction\"\n    },\n    {\n        \"country\": \"IN\",\n        \"currency\": \"INR\",\n        \"code\": \"delivery\",\n        \"description\": \"Delivery\"\n    }\n]"
						}
					]
				}
			],
			"description": "Move funds in the same currency between accounts of your business, or make payments to your counterparties.\n\nFor more details, see the guides: [Send money](https://developer.revolut.com/docs/guides/manage-accounts/transfers/send-money)."
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Webhooks v1 (deprecated)",
					"item": [
						{
							"name": "Retrieve a webhook",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/1.0/webhook",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"webhook"
									]
								}
							},
							"response": [
								{
									"name": "Retrieve a webhook",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/1.0/webhook",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"1.0",
												"webhook"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"url\": \"https://www.example.com\"\n}"
								}
							]
						},
						{
							"name": "Set a webhook",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"https://www.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/webhook",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"webhook"
									]
								}
							},
							"response": [
								{
									"name": "Set a webhook",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"url\": \"https://www.example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/1.0/webhook",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"1.0",
												"webhook"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Delete a webhook",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"https://www.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/1.0/webhook",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"1.0",
										"webhook"
									]
								}
							},
							"response": [
								{
									"name": "Delete a webhook",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"url\": \"https://www.example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/1.0/webhook",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"1.0",
												"webhook"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				},
				{
					"name": "Webhooks v2",
					"item": [
						{
							"name": "Create a new webhook",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"https://www.revolut.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/2.0/webhooks",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"2.0",
										"webhooks"
									]
								},
								"description": "Create a new webhook to receive event notifications to the specified URL. Provide a list of event types that you want to subscribe to and a URL for the webhook. Only HTTPS URLs are supported.\n\nFor more information, see the guides: [About webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/about-webhooks) and [Manage webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/manage-webhooks#create-a-webhook)."
							},
							"response": [
								{
									"name": "Create a new webhook",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"url\": \"https://www.revolut.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/2.0/webhooks",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"2.0",
												"webhooks"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"c5daf050-1234-4fad-bb4e-22c1941ff62e\",\n    \"url\": \"https://www.revolut.com\",\n    \"signing_secret\": \"wsk_xPwcGxG07LpcExdhnThWb4Pi08eDDnsw\"\n}"
								}
							]
						},
						{
							"name": "Retrieve a list of webhooks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/2.0/webhooks",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"2.0",
										"webhooks"
									]
								},
								"description": "Get the list of all your existing webhooks and their details.\n\nFor more information, see the guides: [About webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/about-webhooks) and [Manage webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/manage-webhooks#retrieve-a-list-of-webhooks)."
							},
							"response": [
								{
									"name": "Retrieve a list of webhooks",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/2.0/webhooks",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"2.0",
												"webhooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"c6db947e-e9ce-41c2-b445-02e6eb741d21\",\n        \"url\": \"https://www.example.com\"\n    },\n    {\n        \"id\": \"9f9919a2-932d-498f-a088-3a01b9080c4a\",\n        \"url\": \"https://www.revolut.com/\"\n    }\n]"
								}
							]
						},
						{
							"name": "Retrieve a webhook",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/2.0/webhooks/:webhook_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"2.0",
										"webhooks",
										":webhook_id"
									],
									"variable": [
										{
											"key": "webhook_id",
											"value": "",
											"description": "The ID of the webhook to retrieve."
										}
									]
								},
								"description": "Get the information about a specific webhook by ID.\n\nFor more information, see the guides: [About webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/about-webhooks) and [Manage webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/manage-webhooks#retrieve-a-specific-webhook)."
							},
							"response": [
								{
									"name": "Retrieve a webhook",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/2.0/webhooks/:webhook_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"2.0",
												"webhooks",
												":webhook_id"
											],
											"variable": [
												{
													"key": "webhook_id",
													"value": "c5daf050-4637-4fad-bb4e-22c1941ff62e",
													"description": "The ID of the webhook to retrieve."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"c5daf050-4637-4fad-bb4e-22c1941ff62e\",\n    \"url\": \"https://www.revolut.com\",\n    \"signing_secret\": \"wsk_xPwcGxG07LpcExdhnThWb4Pi08eDDnsw\"\n}"
								}
							]
						},
						{
							"name": "Update a webhook URL",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"https://www.example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/2.0/webhooks/:webhook_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"2.0",
										"webhooks",
										":webhook_id"
									],
									"variable": [
										{
											"key": "webhook_id",
											"value": "",
											"description": "The ID of the webhook to update."
										}
									]
								},
								"description": "Update an existing webhook. Change the URL to which event notifications are sent or the list of event types to be notified about.\n\nYou must specify at least one of these two. The fields that you don't specify are not updated.\n\nFor more information, see the guides: [About webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/about-webhooks) and [Manage webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/manage-webhooks#update-a-webhook)."
							},
							"response": [
								{
									"name": "Update a webhook URL",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"url\": \"https://www.example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/2.0/webhooks/:webhook_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"2.0",
												"webhooks",
												":webhook_id"
											],
											"variable": [
												{
													"key": "webhook_id",
													"value": "c5daf050-4637-4fad-bb4e-22c1941ff62e",
													"description": "The ID of the webhook to update."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"c5daf050-4637-4fad-bb4e-22c1941ff62e\",\n    \"url\": \"https://www.example.com\"\n}"
								}
							]
						},
						{
							"name": "Delete a webhook",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/api/2.0/webhooks/:webhook_id",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"2.0",
										"webhooks",
										":webhook_id"
									],
									"variable": [
										{
											"key": "webhook_id",
											"value": "",
											"description": "The ID of the webhook to delete."
										}
									]
								},
								"description": "Delete a specific webhook.\n\nA successful response does not get any content in return.\n\nFor more information, see the guides: [About webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/about-webhooks) and [Manage webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/manage-webhooks#delete-a-webhook)."
							},
							"response": [
								{
									"name": "Delete a webhook",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/api/2.0/webhooks/:webhook_id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"2.0",
												"webhooks",
												":webhook_id"
											],
											"variable": [
												{
													"key": "webhook_id",
													"value": "c5daf050-4637-4fad-bb4e-22c1941ff62e",
													"description": "The ID of the webhook to delete."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Rotate a webhook signing secret",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"expiration_period\": \"PT5H30M\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/2.0/webhooks/:webhook_id/rotate-signing-secret",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"2.0",
										"webhooks",
										":webhook_id",
										"rotate-signing-secret"
									],
									"variable": [
										{
											"key": "webhook_id",
											"value": "",
											"description": "The ID of the webhook for which to rotate the secret."
										}
									]
								},
								"description": "Rotate a signing secret for a specific webhook.\n\nFor more information, see the guides: [About webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/about-webhooks) and [Manage webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/manage-webhooks#rotate-a-webhook-signing-secret)."
							},
							"response": [
								{
									"name": "Rotate a webhook signing secret",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"expiration_period\": \"PT5H30M\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/api/2.0/webhooks/:webhook_id/rotate-signing-secret",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"2.0",
												"webhooks",
												":webhook_id",
												"rotate-signing-secret"
											],
											"variable": [
												{
													"key": "webhook_id",
													"value": "c5daf050-4637-4fad-bb4e-22c1941ff62e",
													"description": "The ID of the webhook for which to rotate the secret."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"c5daf050-4637-4fad-bb4e-22c1941ff62e\",\n    \"url\": \"https://www.example.com\",\n    \"signing_secret\": \"wsk_zKyaSooYs5GJVxhVnqG9aCtq5B2PSYKr\"\n}"
								}
							]
						},
						{
							"name": "Retrieve a list of failed webhook events",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/2.0/webhooks/:webhook_id/failed-events",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"2.0",
										"webhooks",
										":webhook_id",
										"failed-events"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "The maximum number of events returned per page.\n\nTo get to the next page, make a new request and use the created_at date of the last event returned in the previous response as value for created_before.",
											"disabled": true
										},
										{
											"key": "created_before",
											"value": "",
											"description": "Retrieves events with created_at < created_before. Cannot be older than the current date minus 21 days. The default value is the current date and time at which you are calling the endpoint.\n\nProvided in ISO 8601 format.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "webhook_id",
											"value": "",
											"description": "The ID of the webhook for which to get the failed events."
										}
									]
								},
								"description": "Get the list of all your failed webhook events, or use the query parameters to filter the results.\n\nThe events are sorted by the `created_at` date in reverse chronological order.\n\nThe returned failed events are **paginated**. The maximum number of events returned per page is specified by the `limit` parameter. To get to the next page, make a new request and use the `created_at` date of the last event returned in the previous response.\n\nFor more information, see the guides: [About webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/about-webhooks) and [Manage webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/manage-webhooks#retrieve-a-list-of-failed-webhook-events)."
							},
							"response": [
								{
									"name": "Retrieve a list of failed webhook events",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/api/2.0/webhooks/:id/failed-events",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"2.0",
												"webhooks",
												":id",
												"failed-events"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "The ID of the webhook for which to get the failed events.\n\n"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": ""
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"d6d04ec2-2a48-4825-8fba-3603cdacdba7\",\n    \"created_at\": \"2023-01-26T16:22:21.297570Z\",\n    \"updated_at\": \"2023-01-26T16:22:21.534872Z\",\n    \"webhook_id\": \"c8083529-fb91-4de0-a66d-9fc3ccc1da10\",\n    \"webhook_url\": \"https://www.example.com\",\n    \"payload\": {\n      \"data\": {\n        \"id\": \"63d2a8bd-8b67-a2de-b1d2-b58ee21d7073\",\n        \"legs\": [\n          {\n            \"fee\": 0.2,\n            \"amount\": -10,\n            \"leg_id\": \"63d2a8bd-8b67-a2de-0000-b58ee21d7073\",\n            \"currency\": \"GBP\",\n            \"account_id\": \"05018b0d-e67c-4fec-bea6-415e9da9432c\",\n            \"description\": \"To Acme Corp\",\n            \"counterparty\": {\n              \"id\": \"7e18625a-3e6c-4d4f-8429-216c25309a5f\",\n              \"account_id\": \"ff29e658-f07f-4d81-bc0f-7ad0ff141357\",\n              \"account_type\": \"external\"\n            }\n          }\n        ],\n        \"type\": \"transfer\",\n        \"state\": \"pending\",\n        \"reference\": \"To John Doe\",\n        \"created_at\": \"2023-01-26T16:22:21.232551Z\",\n        \"request_id\": \"6a8b2ad9-d8b9-4348-9207-1c5737ccf11b\",\n        \"updated_at\": \"2023-01-26T16:22:21.232551Z\"\n      },\n      \"event\": \"TransactionCreated\",\n      \"timestamp\": \"2023-01-26T16:22:21.230599Z\"\n    },\n    \"last_sent_date\": \"2023-01-26T16:52:21.534798Z\"\n  },\n  {\n    \"id\": \"d6d04ec2-2a48-4825-8fba-3603cdacdba7\",\n    \"created_at\": \"2023-01-22T11:52:21.297570Z\",\n    \"updated_at\": \"2023-01-22T11:52:21.534872Z\",\n    \"webhook_id\": \"c8083529-fb91-4de0-a66d-9fc3ccc1da10\",\n    \"webhook_url\": \"https://www.example.com\",\n    \"payload\": {\n      \"data\": {\n        \"id\": \"63d2a8bd-8b67-a2de-b1d2-b58ee21d7073\",\n        \"request_id\": \"6a8b2ad9-d8b9-4348-9207-1c5737ccf11b\",\n        \"old_state\": \"pending\",\n        \"new_state\": \"reverted\"\n      },\n      \"event\": \"TransactionStateChanged\",\n      \"timestamp\": \"2023-01-26T11:22:21.230599Z\"\n    },\n    \"last_sent_date\": \"2023-01-22T12:52:21.534798Z\"\n  }\n]"
								}
							]
						}
					],
					"description": "A webhook (also called a web callback) allows your system to receive updates about your account to an HTTPS endpoint that you provide. When a supported event occurs, a notification is posted via HTTP `POST` method to the specified endpoint.\n\nIf the receiver returns an HTTP error response, Revolut will retry the webhook event three more times, each with a 10-minute interval.\n\nThe following events are supported:\n\n- `TransactionCreated`\n    \n- `TransactionStateChanged`\n    \n- `PayoutLinkCreated`\n    \n- `PayoutLinkStateChanged`\n    \n\nFor more information, see the guides: [About webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/about-webhooks) and [Manage webhooks](https://developer.revolut.com/docs/guides/manage-accounts/webhooks/manage-webhooks)."
				}
			],
			"description": "A webhook (also called a web callback) allows your system to receive updates about your account to an HTTPS endpoint that you provide. When a supported event occurs, a notification is posted via HTTP `POST` method to the specified endpoint.\n\nIf the receiver returns an HTTP error response, Revolut will retry the webhook event three more times, each with a 10-minute interval."
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}