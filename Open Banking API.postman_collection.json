{
	"info": {
		"_postman_id": "3200d0c6-6d6a-4f94-b4ad-5ca1d37b39eb",
		"name": "Open Banking API",
		"description": "## Introduction\n\nThe Revolut Open Banking API is the gateway for third-party providers to interact with Revolut customers and products.\n\nYou can take advantage of the Open Banking API to build your banking applications whether you are a regulated third party provider that wants to get account and transaction information of Revolut customers and initiate different types of payments.\n\nTo get started using the Open Banking API, check the [user guides](https://developer.revolut.com/docs/guides/build-banking-apps/tutorials/test-with-postman/set-up-postman).\n\n## Environments\n\nTo make use of this Postman Collection, you will need to use Environment variables. Inside Revolut Developers Postman workspace you will see an Environment created called **\"Open Banking - Sandbox\"**. You can use that Environment for testing all the Revolut APIs in a sandbox environment.\n\n> You will need to change the values of each variable with your own values. \n  \n\nWe do not recommend to use this Postman collection in Production in order to maintain the privacy of your credentials.\n\nSee the information regarding the environment variables below:\n\nProduction URL: `https://oba.revolut.com`\n\nSandbox URL: `https://sandbox-oba.revolut.com`\n\n`url`: The base url of Revolut Open Banking APIs.\n\n`auth_url`: The authentication base url for obtaining the access token. Production: `https://oba-auth.revolut.com` Sandbox: `https://sandbox-oba-auth.revolut.com`\n\n`jwk_domain`: The domain where your JWK url is hosted.\n\n`kid`: The `kid` which you set up in your JWK.\n\n`private_key`: The full contents of the `private.key` file.\n\n`client_id`: The client_id obtained when a Application is created via the Developer Portal or by Dynamic Client Registration.\n\n`redirect_uri`: The redirect_url provided in the Developer Portal or by Dynamic Client Registration\n\n> Some of these variables do not appear in the requests or params, but they are used as Pre-request Script and Tests, in order to automate some processes in the Open Banking flow. \n  \n\n### Automatic variables\n\nThis Postman Collection contains a set of scripts that helps automate the whole Open Banking flow and saves some responses as variables. Here are the variables that are displayed automatically:\n\n`access_token`: Whenever the Get Access Token endpoint is invoked, the response is saved in the `access_token` variable, so that it can be used to create consents afterwards.\n\n`accounts_access_token`: Whenever the Get Authorization Access Token endpoint is invoked, the response is saved in the `accounts_access_token` variable, so that it can be used to invoke Accounts endpoints.\n\n`payments_access_token`: Whenever the Get Payment Access Token endpoint is invoked, the response is saved in the `payments_access_token` variable, so that it can be used to execute Payments.\n\n`consentId`: Whenever a new consent it created, the `consentId` variable is saved as a new variable and used afterwards to create a payment or to retrieve account information.\n\n## Adding Certificates\n\nFor the `/token` endpoint in this Postman Collection, it will be required to be signed by a **key** and a **certificate** in order to work. To do so, certificates need to be added into Postman. Complete the following steps in order to set up certificates to work with the Open Banking APIs:\n\n1. Open up settings on Postman (top right gear icon and click settings)\n    \n2. In the General tab, turn SSL certificate verification **off**\n    \n3. In the Certificates tab, make sure that the CA certificates option is turned **off**\n    \n4. On the Client Certificates section click on Add Certificate\n    \n5. Fill out the Host field with the host of where you will be sending requests to. (For **Open Banking - Sandbox** it would be [sandbox-oba-auth.revolut.com](http://sandbox-oba-auth.revolut.com/))\n    \n6. For the CRT File section, add your **transport.pem** certificate\n    \n7. For the KEY File section, add your **private.key**\n    \n8. Click Add\n    \n\n**The final setup in the Client Certificates should look like this:**\n\nHost: sandbox-oba-auth.revolut.com\n\nCRT File: /your_path/transport.pem\n\nKEY File: /your_path/private_key.keey\n\nAnd that will do it. You now should be able to interact with endpoints on sandbox-oba-auth that require requests to be signed with a key and certificate!\n\n## More Information\n\nYou can find more information of Revolut Open Banking APIs in our [documentation](https://developer.revolut.com/docs/build-banking-apps). You can also visit our [community page](https://community.revolut.com/) and [help center.](https://help.revolut.com/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43116137",
		"_collection_link": "https://www.postman.com/revolut-api/revolut-developers/collection/lm2rtga/open-banking-api?action=share&source=collection_link&creator=43116137"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Get Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Storing access token\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "accounts",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth_url}}/token",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"token"
							]
						},
						"description": "Get the details of the account access consent as described in the Open BankingÂ [official documentation](https://openbanking.atlassian.net/wiki/spaces/DZ/pages/999622968/Account+and+Transaction+API+Specification+-+v3.1.1)."
					},
					"response": [
						{
							"name": "Get Access Token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "accounts",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{auth_url}}/token",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJraWQi...REDACTED_JWT...DvTWUSVpivBpYwH6r9gw\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 2399\n}"
						}
					]
				},
				{
					"name": "Create account access consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"navigator = {}",
									"window = {}",
									"",
									"pm.test(\"Storing consent id\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"consentId\", jsonData.Data.ConsentId);",
									"});",
									"",
									"pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
									"    if (error) {",
									"        pm.expect.fail(error.message);",
									"    }",
									"    if (response.code !== 200) {",
									"        pm.expect.fail('Could not load external library.');",
									"    }",
									"",
									"    eval(response.text());",
									"",
									"    let private_key",
									"",
									"    try {",
									"        private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
									"    } catch(error) {",
									"        pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
									"    }",
									"",
									"    if(!['EC','RSA'].includes(private_key.type)){",
									"        pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
									"    }",
									"    ",
									"    const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
									"",
									"    var response = pm.response.json()",
									"    var consentId = response.Data.ConsentId",
									"    var state = Math.floor(Math.random() * 10**16)",
									"",
									"    const nbf = Math.floor(Date.now() / 1000)",
									"",
									"    var header = {",
									"        \"alg\": alg,",
									"        \"kid\": pm.environment.get(\"kid\")",
									"    }",
									"    var body = {",
									"        \"response_type\": \"code id_token\",",
									"        \"client_id\":pm.environment.get(\"client_id\"),",
									"        \"redirect_uri\": pm.environment.get(\"redirect_uri\"),",
									"        \"scope\": \"accounts\",",
									"        \"state\": state,",
									"        \"aud\": pm.environment.get(\"auth_url\"),",
									"        \"nbf\": nbf,",
									"        \"exp\": nbf + 3000,",
									"        \"claims\": {",
									"            \"id_token\": {",
									"                \"openbanking_intent_id\": {",
									"                    \"value\": consentId",
									"                }",
									"            }",
									"        }",
									"    }",
									"",
									"    try {",
									"        sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
									"    } catch (ex) {",
									"        pm.expect.fail(\"Unable to create request JWT: \" + ex);",
									"    }",
									"",
									"    let consentRedirectUrl = pm.environment.get(\"url\") + \"/ui/index.html?response_type=code%20id_token\"",
									"    consentRedirectUrl += \"&scope=accounts\"",
									"    consentRedirectUrl += \"&redirect_uri=\" + encodeURI(pm.environment.get(\"redirect_uri\"))",
									"    consentRedirectUrl += \"&client_id=\" + encodeURI(pm.environment.get(\"client_id\")) ",
									"    consentRedirectUrl += \"&request=\" + encodeURI(sResult)",
									"    consentRedirectUrl += \"&state=\" + state",
									"",
									"    console.log(\"Go to the following URL, complete the payment, and copy the `code` parameter from the final redirect url:\\n\" + consentRedirectUrl)",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-fapi-financial-id",
								"value": "001580000103UAvAAM"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Data\": {\n        \"Permissions\": [\n            \"ReadAccountsBasic\",\n            \"ReadAccountsDetail\",\n            \"ReadBalances\",\n            \"ReadBeneficiariesBasic\",\n            \"ReadBeneficiariesDetail\",\n            \"ReadTransactionsBasic\",\n            \"ReadTransactionsDetail\",\n            \"ReadTransactionsCredits\",\n            \"ReadTransactionsDebits\"\n        ],\n        \"ExpirationDateTime\": \"2052-12-02T00:00:00+00:00\",\n        \"TransactionFromDateTime\": \"2000-01-01T00:00:00+00:00\",\n        \"TransactionToDateTime\": \"2052-12-02T00:00:00+00:00\"\n    },\n    \"Risk\": {}\n}"
						},
						"url": {
							"raw": "{{auth_url}}/account-access-consents",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"account-access-consents"
							]
						},
						"description": "When you create an account access consent, you must include a specific permission that follows the rules in the table below; otherwise, you get aÂ `400 Bad request`Â error:\n\n| PERMISSIONS | DEPENDENCIES |\n| --- | --- |\n| ReadAccountsBasic | None |\n| ReadAccountsDetail | None |\n| ReadBalances | None |\n| ReadBeneficiariesBasic | None |\n| ReadBeneficiariesDetail | None |\n| ReadDirectDebits | None |\n| ReadScheduledPaymentsBasic | None |\n| ReadScheduledPaymentsDetail | None |\n| ReadStandingOrdersBasic | None |\n| ReadStandingOrdersDetail | None |\n| ReadTransactionsBasic | None |\n| ReadTransactionsCredits | ReadTransactionsBasic OR ReadTransactionsDetail |\n| ReadTransactionsDebits | ReadTransactionsBasic OR ReadTransactionsDetail |\n| ReadTransactionsDetail | None |"
					},
					"response": [
						{
							"name": "Create account access consent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"Permissions\": [\n            \"ReadAccountsBasic\",\n            \"ReadAccountsDetail\"\n        ],\n        \"ExpirationDateTime\": \"2022-12-02T00:00:00+00:00\",\n        \"TransactionFromDateTime\": \"2022-09-03T00:00:00+00:00\",\n        \"TransactionToDateTime\": \"2022-12-03T00:00:00+00:00\"\n    },\n    \"Risk\": {}\n}"
								},
								"url": {
									"raw": "{{auth_url}}/account-access-consents",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"account-access-consents"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-22T11:47:10.366163Z\",\n        \"CreationDateTime\": \"2022-09-22T11:47:10.366163Z\",\n        \"TransactionToDateTime\": \"2022-12-03T00:00:00+00:00\",\n        \"ExpirationDateTime\": \"2022-12-02T00:00:00+00:00\",\n        \"Permissions\": [\n            \"ReadAccountsBasic\",\n            \"ReadAccountsDetail\"\n        ],\n        \"ConsentId\": \"e0bdfd78-2388-xxxx-xxxx-acc0b84c9210\",\n        \"TransactionFromDateTime\": \"2022-09-03T00:00:00+00:00\"\n    },\n    \"Risk\": {},\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/account-access-consents\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
						}
					]
				},
				{
					"name": "Get Authorization Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Storing access token\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"accounts_access_token\", jsonData.access_token);",
									"    pm.environment.set(\"accounts_refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "code",
									"value": "",
									"description": "The code obtained from the URL after the approved consent redirection.",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth_url}}/token",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": [
						{
							"name": "Get Authorization Access Token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "code",
											"value": "",
											"description": "The code obtained from the URL after the approved consent redirection.",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{auth_url}}/token",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"access_token_id\": \"3d3ef8a1-f920-4d6d-9106-e7fcf350125c\",\n    \"access_token\": \"oa_sand_tP1Nofi1ixsRfBmVBtVPdIVN0J5x91imqmheQIWTS5s\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 3599,\n    \"refresh_token\": \"oa_sand_RSUYVMPdLsEuTpIOzZc_Fq5pJHYZWvJNEuBugx7mUeg\",\n    \"refresh_token_expires_at\": 1759339495,\n    \"id_token\": \"bGciOiJQUzI1NiIsImtpZCI6InNjcmlwdGp1YW5zZSIsInR5cCI6IkpXVCJ9.eyJyZXNwb25zZV90eXsaWVudF9pZCI6ImFhNWM2NjMxLWE3VyaSI6Imh0dHBzOi8vZ29vZ2xlLmNvbSIsInNjb3BlIjoiYWNjb3VudHMiLCJjbGFpbXMiOnsiaWRfdG9rZW4iOnsib3BlbmJhbmtpbmdfaW50ZW50X2lkIjp7InZhbHVlIjoiZDBjMzk5N2ItYjI4ZC00M2IwLWFiMjYtOWQ1ZTUzN2Q3YTI0In19fX0.d2gW3Of3qk1pKay6M3UPr-OWh4aCgKUvBARSg17Mdr1U3zuEaPi-_wTSufuIxItu5of6H_UkDeFgZlocLRwN1reVio52YyblBrJjMjzoNHD8QfVZ8aadXi8Yub5FZYDcMRzXctXOH1WX5iGUB-7pSAUy6tqsStuLTIyg_dQ3FaVGxErY1YfjnMu5r060B6Jt66NabqaQjKb5LRjK-JgRRbctSkQiAYs5xWVdvdP684Kf8x8UGm4KpODEQQHGTyFRlM5lbH9OOzaC6EBQY3XyS3yCd1gPW5kqqgoedhwYTi8t0VWcji96XP0RB2v_xYsvZosyqAN79YI3xdl1PLmNjA\"\n}"
						}
					]
				},
				{
					"name": "Refresh Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Storing access token\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"accounts_access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{accounts_refresh_token}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth_url}}/token",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": [
						{
							"name": "Get Authorization Access Token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "code",
											"value": "",
											"description": "The code obtained from the URL after the approved consent redirection.",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{auth_url}}/token",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n  \"access_token\":\"oa_sand_tVPdIVNRfBimqmi1ixsS5smVBx9heQIWT0J5tP1Nof1\",\n  \"access_token_id\":\"3d3ef8a1-f920-4d6d-9106-e7fcf350125c\",\n  \"token_type\":\"Bearer\",\n  \"expires_in\":3599\n}"
						}
					]
				},
				{
					"name": "Retrieve account access consent",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-financial-id",
								"value": "001580000103UAvAAM"
							}
						],
						"url": {
							"raw": "{{auth_url}}/account-access-consents/{{consentId}}",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"account-access-consents",
								"{{consentId}}"
							]
						}
					},
					"response": [
						{
							"name": "Retrieve account access consent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"Permissions\": [\n            \"ReadAccountsBasic\",\n            \"ReadAccountsDetail\"\n        ],\n        \"ExpirationDateTime\": \"2022-12-02T00:00:00+00:00\",\n        \"TransactionFromDateTime\": \"2022-09-03T00:00:00+00:00\",\n        \"TransactionToDateTime\": \"2022-12-03T00:00:00+00:00\"\n    },\n    \"Risk\": {}\n}"
								},
								"url": {
									"raw": "{{auth_url}}/account-access-consents",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"account-access-consents"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-22T11:47:10.366163Z\",\n        \"CreationDateTime\": \"2022-09-22T11:47:10.366163Z\",\n        \"TransactionToDateTime\": \"2022-12-03T00:00:00+00:00\",\n        \"ExpirationDateTime\": \"2022-12-02T00:00:00+00:00\",\n        \"Permissions\": [\n            \"ReadAccountsBasic\",\n            \"ReadAccountsDetail\"\n        ],\n        \"ConsentId\": \"e0bdfd78-2388-xxxx-xxxx-acc0b84c9210\",\n        \"TransactionFromDateTime\": \"2022-09-03T00:00:00+00:00\"\n    },\n    \"Risk\": {},\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/account-access-consents/e0bdfd78-2388-xxxx-xxxx-acc0b84c9210\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
						}
					]
				},
				{
					"name": "Delete account access consent",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-fapi-financial-id",
								"value": "001580000103UAvAAM"
							}
						],
						"url": {
							"raw": "{{auth_url}}/account-access-consents/{{consentId}}",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"account-access-consents",
								"{{consentId}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete account access consent",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{auth_url}}/account-access-consents/{consentId}",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"account-access-consents",
										"{consentId}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Retrieve all accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-financial-id",
								"value": "001580000103UAvAAM"
							}
						],
						"url": {
							"raw": "{{auth_url}}/accounts",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": [
						{
							"name": "Retrieve all accounts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									}
								],
								"url": {
									"raw": "{{auth_url}}/accounts",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"Account\": [\n            {\n                \"AccountId\": \"d3779729-xxxx-xxxx-bb43-fb5159b7c166\",\n                \"Currency\": \"GBP\",\n                \"AccountType\": \"Personal\",\n                \"AccountSubType\": \"CurrentAccount\",\n                \"Account\": [\n                    {\n                        \"SchemeName\": \"UK.OBIE.IBAN\",\n                        \"Identification\": \"GB95REVO00997053872360\",\n                        \"Name\": \"John Smith\"\n                    },\n                    {\n                        \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                        \"Identification\": \"00000001611667\",\n                        \"Name\": \"John Smith\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/accounts\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
						},
						{
							"name": "US accounts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									}
								],
								"url": {
									"raw": "{{auth_url}}/accounts",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "Date",
									"value": "Fri, 16 Dec 2022 08:47:24 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "request-id",
									"value": "3TFZP995CS1Q"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000; includeSubdomains;"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Via",
									"value": "1.1 google"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"Account\": [\n            {\n                \"AccountId\": \"2eb1ecb8-d900-4a39-baf6-77661caf214c\",\n                \"Currency\": \"USD\",\n                \"AccountType\": \"Personal\",\n                \"AccountSubType\": \"CurrentAccount\",\n                \"Account\": [\n                    {\n                        \"SchemeName\": \"US.BranchCodeAccountNumber\",\n                        \"Identification\": \"REVOUS30253767646733\",\n                        \"Name\": \"Jackson Holt\"\n                    },\n                    {\n                        \"SchemeName\": \"US.RoutingNumberAccountNumber\",\n                        \"Identification\": \"026014928253767646733\",\n                        \"Name\": \"Jackson Holt\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.codes/accounts\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
						}
					]
				},
				{
					"name": "Retrieve an account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-financial-id",
								"value": "001580000103UAvAAM"
							}
						],
						"url": {
							"raw": "{{auth_url}}/accounts/:id",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Retrieve an account",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									}
								],
								"url": {
									"raw": "{{auth_url}}/accounts/{accountId}",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"accounts",
										"{accountId}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"Account\": [\n            {\n                \"AccountId\": \"d3779729-xxxx-xxxx-bb43-fb5159b7c166\",\n                \"Currency\": \"GBP\",\n                \"AccountType\": \"Personal\",\n                \"AccountSubType\": \"CurrentAccount\",\n                \"Account\": [\n                    {\n                        \"SchemeName\": \"UK.OBIE.IBAN\",\n                        \"Identification\": \"GB95REVO00997053872360\",\n                        \"Name\": \"John Smith\"\n                    },\n                    {\n                        \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                        \"Identification\": \"00000001611667\",\n                        \"Name\": \"John Smith\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/accounts/d3779729-xxxx-xxxx-bb43-fb5159b7c166\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
						}
					]
				},
				{
					"name": "Retrieve an account balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-financial-id",
								"value": "001580000103UAvAAM"
							}
						],
						"url": {
							"raw": "{{auth_url}}/accounts/:id/balances",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"accounts",
								":id",
								"balances"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Retrieve an account balance",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									}
								],
								"url": {
									"raw": "{{auth_url}}/accounts/{accountId}/balance",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"accounts",
										"{accountId}",
										"balance"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"Balance\": [\n            {\n                \"AccountId\": \"d3779729-xxxx-xxxx-bb43-fb5159b7c166\",\n                \"Amount\": {\n                    \"Amount\": \"970.49\",\n                    \"Currency\": \"GBP\"\n                },\n                \"CreditDebitIndicator\": \"Credit\",\n                \"Type\": \"InterimAvailable\",\n                \"DateTime\": \"2022-09-22T08:32:02.775972Z\"\n            }\n        ]\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/accounts/d3779729-xxxx-xxxx-bb43-fb5159b7c166/balances\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
						}
					]
				},
				{
					"name": "Retrieve all account's beneficiaries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-financial-id",
								"value": "001580000103UAvAAM",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{auth_url}}/accounts/:id/beneficiaries",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"accounts",
								":id",
								"beneficiaries"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Retrieve all account's beneficiaries basic",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									}
								],
								"url": {
									"raw": "{{auth_url}}/accounts/{accountId}/beneficiaries",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"accounts",
										"{accountId}",
										"beneficiaries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"Beneficiary\": [\n            {\n                \"AccountId\": \"d3779729-xxxx-xxxx-bb43-fb5159b7c166\",\n                \"BeneficiaryId\": \"619e270c-989f-44ca-1234-a161be65d5f4\"\n            }\n        ]\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/accounts/d3779729-xxxx-xxxx-bb43-fb5159b7c166/beneficiaries\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
						},
						{
							"name": "Retrieve all account's beneficiaries detailed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									}
								],
								"url": {
									"raw": "{{auth_url}}/accounts/{accountId}/beneficiaries",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"accounts",
										"{accountId}",
										"beneficiaries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"Beneficiary\": [\n            {\n                \"AccountId\": \"d3779729-xxxx-xxxx-1234-fb5159b7c166\",\n                \"BeneficiaryId\": \"619e270c-989f-44ca-1234-a161be65d5f4\",\n                \"CreditorAccount\": {\n                    \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                    \"Identification\": \"11223321325698\",\n                    \"Name\": \"Receiver Co.\"\n                }\n            }\n        ]\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/accounts/d3779729-xxxx-xxxx-1234-fb5159b7c166/beneficiaries\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
						}
					]
				},
				{
					"name": "Retrieve all account's direct debits",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-financial-id",
								"value": "001580000103UAvAAM"
							}
						],
						"url": {
							"raw": "{{auth_url}}/accounts/:id/direct-debits",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"accounts",
								":id",
								"direct-debits"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Retrieve all account's direct debits",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									}
								],
								"url": {
									"raw": "{{auth_url}}/accounts/{accountId}/direct-debits",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"accounts",
										"{accountId}",
										"direct-debits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"DirectDebit\": [\n            {\n                \"AccountId\": \"d48e9496-xxxx-4af1-xxxx-8b20fc362bd3\",\n                \"DirectDebitId\": \"631b8ea1-5678-48d1-1234-25ccba25eb40\",\n                \"MandateIdentification\": \"a028-45ee\",\n                \"DirectDebitStatusCode\": \"Active\",\n                \"Name\": \"DirectDebit name\",\n                \"PreviousPaymentAmount\": {\n                    \"Amount\": \"50.00\",\n                    \"Currency\": \"EUR\"\n                }\n            }\n        ]\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/accounts/d48e9496-xxxx-4af1-xxxx-8b20fc362bd3/direct-debits\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
						}
					]
				},
				{
					"name": "Retrieve all account's standing orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-financial-id",
								"value": "001580000103UAvAAM"
							}
						],
						"url": {
							"raw": "{{auth_url}}/accounts/:id/standing-orders",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"accounts",
								":id",
								"standing-orders"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Retrieve all account's standing orders",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									}
								],
								"url": {
									"raw": "{{auth_url}}/accounts/{accountId}/standing-orders",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"accounts",
										"{accountId}",
										"standing-orders"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"StandingOrder\": [\n            {\n                \"AccountId\": \"d48e9496-xxxx-4af1-xxxx-8b20fc362bd3\",\n                \"StandingOrderId\": \"fb02306c-1234-4260-5678-371ea6dc6ea3\",\n                \"Frequency\": \"EvryDay\",\n                \"Reference\": \"Reference1234\",\n                \"FirstPaymentDateTime\": \"2023-09-24T00:00\",\n                \"StandingOrderStatusCode\": \"Active\",\n                \"CreditorAccount\": {\n                    \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                    \"Identification\": \"11223321325698\",\n                    \"Name\": \"Receiver Co.\"\n                }\n            }\n        ]\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/accounts/d48e9496-xxxx-4af1-xxxx-8b20fc362bd3/standing-orders\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
						}
					]
				},
				{
					"name": "Retrieve all account's transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-fapi-financial-id",
								"value": "001580000103UAvAAM"
							}
						],
						"url": {
							"raw": "{{auth_url}}/accounts/:id/transactions",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"accounts",
								":id",
								"transactions"
							],
							"query": [
								{
									"key": "fromBookingDateTime",
									"value": "2017-08-08T13:46:38.714",
									"disabled": true
								},
								{
									"key": "toBookingDateTime",
									"value": "2022-12-29T06:09:55.972422Z",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Retrieve all account's transactions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									}
								],
								"url": {
									"raw": "{{auth_url}}/accounts/{accountId}/transactions",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"accounts",
										"{accountId}",
										"transactions"
									],
									"query": [
										{
											"key": "toBookingDateTime",
											"value": "2022-10-02T06:46:59",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"Data\": {\n        \"Transaction\": [\n            {\n                \"AccountId\": \"c362263a-xxxx-xxxx-xxxx-70ee3d4fede9\",\n                \"Amount\": {\n                    \"Amount\": \"2.21\",\n                    \"Currency\": \"EUR\"\n                },\n                \"Balance\": {\n                    \"Amount\": {\n                        \"Amount\": \"24.48\",\n                        \"Currency\": \"EUR\"\n                    },\n                    \"CreditDebitIndicator\": \"Credit\",\n                    \"Type\": \"InterimBooked\"\n                },\n                \"BookingDateTime\": \"2022-07-07T12:56:38.015220Z\",\n                \"ValueDateTime\": \"2022-07-07T12:56:38.015693Z\",\n                \"CreditDebitIndicator\": \"Credit\",\n                \"CurrencyExchange\": {\n                    \"InstructedAmount\": {\n                        \"Amount\": \"2.21\",\n                        \"Currency\": \"EUR\"\n                    },\n                    \"SourceCurrency\": \"GBP\",\n                    \"TargetCurrency\": \"EUR\",\n                    \"UnitCurrency\": \"GBP\",\n                    \"ExchangeRate\": \"1.1072646654\"\n                },\n                \"ProprietaryBankTransactionCode\": {\n                    \"Code\": \"EXCHANGE\",\n                    \"Issuer\": \"Revolut\"\n                },\n                \"Status\": \"Booked\",\n                \"TransactionId\": \"12345678-af30-a241-xxxx-ad09076be3b1\",\n                \"TransactionInformation\": \"To EUR\"\n            },\n            {\n                \"AccountId\": \"c362263a-xxxx-xxxx-xxxx-70ee3d4fede9\",\n                \"Amount\": {\n                    \"Amount\": \"1.44\",\n                    \"Currency\": \"EUR\"\n                },\n                \"Balance\": {\n                    \"Amount\": {\n                        \"Amount\": \"22.27\",\n                        \"Currency\": \"EUR\"\n                    },\n                    \"CreditDebitIndicator\": \"Credit\",\n                    \"Type\": \"InterimBooked\"\n                },\n                \"BookingDateTime\": \"2022-03-15T16:50:45.699284Z\",\n                \"ValueDateTime\": \"2022-03-15T16:50:45.699801Z\",\n                \"CreditDebitIndicator\": \"Debit\",\n                \"ProprietaryBankTransactionCode\": {\n                    \"Code\": \"FEE\",\n                    \"Issuer\": \"Revolut\"\n                },\n                \"Status\": \"Booked\",\n                \"TransactionId\": \"12345678-e395-aa34-xxxx-6fdcaebecade\",\n                \"TransactionInformation\": \"Revolut Reader Purchase\"\n            },\n            \n            {\n                \"AccountId\": \"c362263a-xxxx-xxxx-xxxx-70ee3d4fede9\",\n                \"Amount\": {\n                    \"Amount\": \"50.00\",\n                    \"Currency\": \"EUR\"\n                },\n                \"BookingDateTime\": \"2022-03-02T14:59:47.858147Z\",\n                \"CreditDebitIndicator\": \"Credit\",\n                \"ProprietaryBankTransactionCode\": {\n                    \"Code\": \"MERCHANT_PAYMENT\",\n                    \"Issuer\": \"Revolut\"\n                },\n                \"Status\": \"Pending\",\n                \"TransactionId\": \"12345678-73d3-adfc-xxxx-df68e72b786d\",\n                \"TransactionInformation\": \"Merchant payment\"\n            }\n        ]\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/accounts/c362263a-xxxx-xxxx-xxxx-70ee3d4fede9/transactions\",\n        \"Next\": \"https://oba-auth.revolut.com/accounts/c362263a-xxxx-xxxx-xxxx-70ee3d4fede9/transactions?fromBookingDateTime=2021-10-07T23:08:52.504313&toBookingDateTime=2022-03-02T14:59:47.858147\"\n    },\n    \"Meta\": {}\n}"
						}
					]
				}
			],
			"description": "This section contains all the AISP requests as for the Open Banking specifications.\n\nYou can find more information in our [Tutorial Documentation](https://developer.revolut.com/docs/build-banking-apps/tutorials/get-account-and-transaction-information).",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accounts_access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Payments",
			"item": [
				{
					"name": "Domestic Payments",
					"item": [
						{
							"name": "Domestic Payment Consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"navigator = {}",
											"window = {}",
											"",
											"pm.test(\"Storing consent id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"consentId\", jsonData.Data.ConsentId);",
											"});",
											"",
											"pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
											"    if (error) {",
											"        pm.expect.fail(error.message);",
											"    }",
											"    if (response.code !== 200) {",
											"        pm.expect.fail('Could not load external library.');",
											"    }",
											"",
											"    eval(response.text());",
											"",
											"    let private_key",
											"",
											"    try {",
											"        private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
											"    } catch(error) {",
											"        pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
											"    }",
											"",
											"    if(!['EC','RSA'].includes(private_key.type)){",
											"        pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
											"    }",
											"    ",
											"    const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
											"",
											"    var response = pm.response.json()",
											"    var consentId = response.Data.ConsentId",
											"    var state = Math.floor(Math.random() * 10**16)",
											"",
											"    const nbf = Math.floor(Date.now() / 1000)",
											"",
											"    var header = {",
											"        \"alg\": alg,",
											"        \"kid\": pm.environment.get(\"kid\")",
											"    }",
											"    var body = {",
											"        \"response_type\": \"code id_token\",",
											"        \"client_id\":pm.environment.get(\"client_id\"),",
											"        \"redirect_uri\": pm.environment.get(\"redirect_uri\"),",
											"        \"scope\": \"payments\",",
											"        \"state\": state,",
											"        \"aud\": pm.environment.get(\"auth_url\"),",
											"        \"nbf\": nbf,",
											"        \"exp\": nbf + 3000,",
											"        \"claims\": {",
											"            \"id_token\": {",
											"                \"openbanking_intent_id\": {",
											"                    \"value\": consentId",
											"                }",
											"            }",
											"        }",
											"        }",
											"",
											"    try {",
											"        sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
											"    } catch (ex) {",
											"        pm.expect.fail(\"Unable to create request JWT: \" + ex);",
											"    }",
											"",
											"    let consentRedirectUrl = pm.environment.get(\"url\") + \"/ui/index.html?response_type=code%20id_token\"",
											"    consentRedirectUrl += \"&scope=payments\"",
											"    consentRedirectUrl += \"&redirect_uri=\" + encodeURI(pm.environment.get(\"redirect_uri\"))",
											"    consentRedirectUrl += \"&client_id=\" + encodeURI(pm.environment.get(\"client_id\")) ",
											"    consentRedirectUrl += \"&request=\" + encodeURI(sResult)",
											"    consentRedirectUrl += \"&state=\" + state",
											"",
											"    console.log(\"Go to the following URL, complete the payment, and copy the `code` parameter from the final redirect url:\\n\" + consentRedirectUrl)",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID41233331\",\n            \"EndToEndIdentification\": \"E2E12333331\",\n            \"InstructedAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"40478470872490\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"EcommerceGoods\",\n        \"MerchantCategoryCode\": \"5967\",\n        \"MerchantCustomerIdentification\": \"1238808123123\",\n        \"DeliveryAddress\": {\n            \"AddressLine\": [\n                \"7\"\n            ],\n            \"StreetName\": \"Apple Street\",\n            \"BuildingNumber\": \"1\",\n            \"PostCode\": \"E2 7AA\",\n            \"TownName\": \"London\",\n            \"Country\": \"UK\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/domestic-payment-consents",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-payment-consents"
									]
								}
							},
							"response": [
								{
									"name": "Domestic Payment Consent - GBP",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "eyJ0eXAiOiJKT1NFIiwiYWxnIjoiUFMyNTYiLCJraWQiOiJzY3JpcHRqdWFuc2UiLCJjcml0IjpbImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIl0sImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIjoiYXBpLmpzb25iaW4uaXQifQ..cPOaWuhzhtw6wJOMHUHnWBunmhN5BQR4rRPyzd1EAbNn-IO_uywEX8262mAmov09jK6HlzMoOVxlaGyL0CPUIAbc2XTzIBh1wDyXLn4Xv409tQzjKLhVyP-pmUWMR6gzRvvZRmOGJEgeQGZoLMg215TRugs4Nda8ZnlaNp5vwIWYXUv7wSAl75SQ-Twn3LqOTubonZb4J5B8_uIE5n4WTFbG94lF--ZXy3ri0ibbEwuH-eLbVR52ELt2EjO8Z-UOQqOdtP-I0VWGqkI17AzsxZK6ek0ekNgB2cagH7hYJK9TDno0UrSLsI5TAaIZyz8397_70IFFzzXgZnAd4pbQpw"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID412\",\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"EcommerceGoods\",\n        \"MerchantCategoryCode\": \"5967\",\n        \"MerchantCustomerIdentification\": \"1238808123123\",\n        \"DeliveryAddress\": {\n            \"AddressLine\": [\n                \"7\"\n            ],\n            \"StreetName\": \"Apple Street\",\n            \"BuildingNumber\": \"1\",\n            \"PostCode\": \"E2 7AA\",\n            \"TownName\": \"London\",\n            \"Country\": \"UK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/domestic-payment-consents",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-payment-consents"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-23T08:34:43.275221Z\",\n        \"CreationDateTime\": \"2022-09-23T08:34:43.275221Z\",\n        \"ConsentId\": \"0d4b6692-xxxx-4938-xxxx-99e125231cf9\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID412\",\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"EcommerceGoods\",\n        \"MerchantCategoryCode\": \"5967\",\n        \"MerchantCustomerIdentification\": \"1238808123123\",\n        \"DeliveryAddress\": {\n            \"AddressLine\": [\n                \"7\"\n            ],\n            \"StreetName\": \"Apple Street\",\n            \"BuildingNumber\": \"1\",\n            \"PostCode\": \"E2 7AA\",\n            \"TownName\": \"London\",\n            \"Country\": \"UK\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-payment-consents/0d4b6692-xxxx-4938-xxxx-99e125231cf9\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								},
								{
									"name": "Domestic Payment Consent - EUR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "eyJ0eXAiOiJKT1NFIiwiYWxnIjoiUFMyNTYiLCJraWQiOiJzY3JpcHRqdWFuc2UiLCJjcml0IjpbImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIl0sImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIjoiYXBpLmpzb25iaW4uaXQifQ..cPOaWuhzhtw6wJOMHUHnWBunmhN5BQR4rRPyzd1EAbNn-IO_uywEX8262mAmov09jK6HlzMoOVxlaGyL0CPUIAbc2XTzIBh1wDyXLn4Xv409tQzjKLhVyP-pmUWMR6gzRvvZRmOGJEgeQGZoLMg215TRugs4Nda8ZnlaNp5vwIWYXUv7wSAl75SQ-Twn3LqOTubonZb4J5B8_uIE5n4WTFbG94lF--ZXy3ri0ibbEwuH-eLbVR52ELt2EjO8Z-UOQqOdtP-I0VWGqkI17AzsxZK6ek0ekNgB2cagH7hYJK9TDno0UrSLsI5TAaIZyz8397_70IFFzzXgZnAd4pbQpw"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID412\",\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"EUR\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.IBAN\",\n                \"Identification\": \"DE05504000005040040066\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"EcommerceGoods\",\n        \"MerchantCategoryCode\": \"5967\",\n        \"MerchantCustomerIdentification\": \"1238808123123\",\n        \"DeliveryAddress\": {\n            \"AddressLine\": [\n                \"7\"\n            ],\n            \"StreetName\": \"Apple Street\",\n            \"BuildingNumber\": \"1\",\n            \"PostCode\": \"E2 7AA\",\n            \"TownName\": \"London\",\n            \"Country\": \"UK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/domestic-payment-consents",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-payment-consents"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-23T08:34:43.275221Z\",\n        \"CreationDateTime\": \"2022-09-23T08:34:43.275221Z\",\n        \"ConsentId\": \"0d4b6692-xxxx-4938-xxxx-99e125231cf9\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID412\",\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"EUR\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.IBAN\",\n                \"Identification\": \"DE05504000005040040066\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"EcommerceGoods\",\n        \"MerchantCategoryCode\": \"5967\",\n        \"MerchantCustomerIdentification\": \"1238808123123\",\n        \"DeliveryAddress\": {\n            \"AddressLine\": [\n                \"7\"\n            ],\n            \"StreetName\": \"Apple Street\",\n            \"BuildingNumber\": \"1\",\n            \"PostCode\": \"E2 7AA\",\n            \"TownName\": \"London\",\n            \"Country\": \"UK\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-payment-consents/0d4b6692-xxxx-4938-xxxx-99e125231cf9\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve domestic payment consent",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/domestic-payment-consents/{{consentId}}",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-payment-consents",
										"{{consentId}}"
									]
								}
							},
							"response": [
								{
									"name": "Retrieve domestic payment consent",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "eyJ0eXAiOiJKT1NFIiwiYWxnIjoiUFMyNTYiLCJraWQiOiJzY3JpcHRqdWFuc2UiLCJjcml0IjpbImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIl0sImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIjoiYXBpLmpzb25iaW4uaXQifQ..cPOaWuhzhtw6wJOMHUHnWBunmhN5BQR4rRPyzd1EAbNn-IO_uywEX8262mAmov09jK6HlzMoOVxlaGyL0CPUIAbc2XTzIBh1wDyXLn4Xv409tQzjKLhVyP-pmUWMR6gzRvvZRmOGJEgeQGZoLMg215TRugs4Nda8ZnlaNp5vwIWYXUv7wSAl75SQ-Twn3LqOTubonZb4J5B8_uIE5n4WTFbG94lF--ZXy3ri0ibbEwuH-eLbVR52ELt2EjO8Z-UOQqOdtP-I0VWGqkI17AzsxZK6ek0ekNgB2cagH7hYJK9TDno0UrSLsI5TAaIZyz8397_70IFFzzXgZnAd4pbQpw"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\":{\"Initiation\":{\"InstructionIdentification\":\"ID412\",\"EndToEndIdentification\":\"E2E123\",\"InstructedAmount\":{\"Amount\":\"10.0\",\"Currency\":\"GBP\"},\"CreditorAccount\":{\"SchemeName\":\"UK.OBIE.SortCodeAccountNumber\",\"Identification\":\"11223321325698\",\"Name\":\"Receiver Co.\"},\"RemittanceInformation\":{\"Reference\":\"ReceiverRef\",\"Unstructured\":\"Shipment fee\"}}},\"Risk\":{\"PaymentContextCode\":\"EcommerceGoods\",\"MerchantCategoryCode\":\"5967\",\"MerchantCustomerIdentification\":\"1238808123123\",\"DeliveryAddress\":{\"AddressLine\":[\"7\"],\"StreetName\":\"Apple Street\",\"BuildingNumber\":\"1\",\"PostCode\":\"E2 7AA\",\"TownName\":\"London\",\"Country\":\"UK\"}}}"
										},
										"url": {
											"raw": "{{auth_url}}/domestic-payment-consents/{consentId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-payment-consents",
												"{consentId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-23T08:34:43.275221Z\",\n        \"CreationDateTime\": \"2022-09-23T08:34:43.275221Z\",\n        \"ConsentId\": \"0d4b6692-xxxx-4938-xxxx-99e125231cf9\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            },\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructionIdentification\": \"ID412\"\n        }\n    },\n    \"Risk\": {\n        \"DeliveryAddress\": {\n            \"Country\": \"UK\",\n            \"PostCode\": \"E2 7AA\",\n            \"TownName\": \"London\",\n            \"StreetName\": \"Apple Street\",\n            \"AddressLine\": [\n                \"7\"\n            ],\n            \"BuildingNumber\": \"1\"\n        },\n        \"PaymentContextCode\": \"EcommerceGoods\",\n        \"MerchantCategoryCode\": \"5967\",\n        \"MerchantCustomerIdentification\": \"1238808123123\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-payment-consents/0d4b6692-xxxx-4938-xxxx-99e125231cf9\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Get funds confirmation for a domestic payment consent",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{payments_access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/domestic-payment-consents/{{consentId}}/funds-confirmation",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-payment-consents",
										"{{consentId}}",
										"funds-confirmation"
									]
								}
							},
							"response": [
								{
									"name": "Get funds confirmation for a domestic payment consent",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "eyJ0eXAiOiJKT1NFIiwiYWxnIjoiUFMyNTYiLCJraWQiOiJzY3JpcHRqdWFuc2UiLCJjcml0IjpbImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIl0sImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIjoiYXBpLmpzb25iaW4uaXQifQ..cPOaWuhzhtw6wJOMHUHnWBunmhN5BQR4rRPyzd1EAbNn-IO_uywEX8262mAmov09jK6HlzMoOVxlaGyL0CPUIAbc2XTzIBh1wDyXLn4Xv409tQzjKLhVyP-pmUWMR6gzRvvZRmOGJEgeQGZoLMg215TRugs4Nda8ZnlaNp5vwIWYXUv7wSAl75SQ-Twn3LqOTubonZb4J5B8_uIE5n4WTFbG94lF--ZXy3ri0ibbEwuH-eLbVR52ELt2EjO8Z-UOQqOdtP-I0VWGqkI17AzsxZK6ek0ekNgB2cagH7hYJK9TDno0UrSLsI5TAaIZyz8397_70IFFzzXgZnAd4pbQpw"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\":{\"Initiation\":{\"InstructionIdentification\":\"ID412\",\"EndToEndIdentification\":\"E2E123\",\"InstructedAmount\":{\"Amount\":\"10.0\",\"Currency\":\"GBP\"},\"CreditorAccount\":{\"SchemeName\":\"UK.OBIE.SortCodeAccountNumber\",\"Identification\":\"11223321325698\",\"Name\":\"Receiver Co.\"},\"RemittanceInformation\":{\"Reference\":\"ReceiverRef\",\"Unstructured\":\"Shipment fee\"}}},\"Risk\":{\"PaymentContextCode\":\"EcommerceGoods\",\"MerchantCategoryCode\":\"5967\",\"MerchantCustomerIdentification\":\"1238808123123\",\"DeliveryAddress\":{\"AddressLine\":[\"7\"],\"StreetName\":\"Apple Street\",\"BuildingNumber\":\"1\",\"PostCode\":\"E2 7AA\",\"TownName\":\"London\",\"Country\":\"UK\"}}}"
										},
										"url": {
											"raw": "{{auth_url}}/domestic-payment-consents/{consentId}/funds-confirmation",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-payment-consents",
												"{consentId}",
												"funds-confirmation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"FundsAvailableResult\": {\n            \"FundsAvailableDateTime\": \"2022-09-23T09:08:27.508922Z\",\n            \"FundsAvailable\": true\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-payment-consents/e3884854-be36-xxxx-xxxx-9ce807ab1335/funds-confirmation\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Create a domestic payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Storing payment id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"domesticPaymentId\", jsonData.Data.DomesticPaymentId);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{payments_access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\":\"{{consentId}}\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID41233331\",\n            \"EndToEndIdentification\": \"E2E12333331\",\n            \"InstructedAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"40478470872490\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"EcommerceGoods\",\n        \"MerchantCategoryCode\": \"5967\",\n        \"MerchantCustomerIdentification\": \"1238808123123\",\n        \"DeliveryAddress\": {\n            \"AddressLine\": [\n                \"7\"\n            ],\n            \"StreetName\": \"Apple Street\",\n            \"BuildingNumber\": \"1\",\n            \"PostCode\": \"E2 7AA\",\n            \"TownName\": \"London\",\n            \"Country\": \"UK\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/domestic-payments",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-payments"
									]
								}
							},
							"response": [
								{
									"name": "Create a domestic payment - GBP",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"ec62477b-xxxx-41e2-xxxx-4d760c425a3e\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID412\",\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"EcommerceGoods\",\n        \"MerchantCategoryCode\": \"5967\",\n        \"MerchantCustomerIdentification\": \"1238808123123\",\n        \"DeliveryAddress\": {\n            \"AddressLine\": [\n                \"7\"\n            ],\n            \"StreetName\": \"Apple Street\",\n            \"BuildingNumber\": \"1\",\n            \"PostCode\": \"E2 7AA\",\n            \"TownName\": \"London\",\n            \"Country\": \"UK\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{auth_url}}/domestic-payments",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"ConsentId\": \"ec62477b-xxxx-41e2-xxxx-4d760c425a3e\",\n        \"CreationDateTime\": \"2022-09-23T14:57:45.899155Z\",\n        \"DomesticPaymentId\": \"632dc969-xxxx-ae29-xxxx-50cefc4ceae7\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\"\n            },\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"InstructionIdentification\": \"ID412\",\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            }\n        },\n        \"Status\": \"AcceptedSettlementInProcess\",\n        \"StatusUpdateDateTime\": \"2022-09-23T14:57:45.899155Z\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-payments/632dc969-xxxx-ae29-xxxx-50cefc4ceae7\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								},
								{
									"name": "Create a domestic payment - EUR",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"ec62477b-xxxx-41e2-xxxx-4d760c425a3e\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID412\",\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"EUR\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.IBAN\",\n                \"Identification\": \"DE05504000005040040066\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"EcommerceGoods\",\n        \"MerchantCategoryCode\": \"5967\",\n        \"MerchantCustomerIdentification\": \"1238808123123\",\n        \"DeliveryAddress\": {\n            \"AddressLine\": [\n                \"7\"\n            ],\n            \"StreetName\": \"Apple Street\",\n            \"BuildingNumber\": \"1\",\n            \"PostCode\": \"E2 7AA\",\n            \"TownName\": \"London\",\n            \"Country\": \"UK\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/domestic-payments",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"ConsentId\": \"ec62477b-xxxx-41e2-xxxx-4d760c425a3e\",\n        \"CreationDateTime\": \"2022-09-23T14:57:45.899155Z\",\n        \"DomesticPaymentId\": \"632dc969-xxxx-ae29-xxxx-50cefc4ceae7\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.IBAN\",\n                \"Identification\": \"DE05504000005040040066\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"EUR\"\n            },\n            \"InstructionIdentification\": \"ID412\",\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            }\n        },\n        \"Status\": \"AcceptedSettlementInProcess\",\n        \"StatusUpdateDateTime\": \"2022-09-23T14:57:45.899155Z\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-payments/632dc969-xxxx-ae29-xxxx-50cefc4ceae7\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve a domestic payment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/domestic-payments/:id",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-payments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{domesticPaymentId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "AcceptedSettlementInProcess",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/domestic-payments/637f57f9-4330-ad90-8692-95cc2a4f3334",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-payments",
												"637f57f9-4330-ad90-8692-95cc2a4f3334"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Nov 2022 11:40:14 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "x-jws-signature",
											"value": "eyJraWQiOiJkaDB3MDgzUzdWYnJCd3dKbVBXVXdLMVJNRGMiLCJhbGciOiJQUzI1NiIsImNyaXQiOlsiYjY0IiwiaHR0cDovL29wZW5iYW5raW5nLm9yZy51ay9pYXQiLCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lzcyIsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIl0sImI2NCI6ZmFsc2UsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvaWF0IjoxNjY5MjkwMDE0LCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lzcyI6IjAwMTU4MDAwMDEwM1VBdkFBTSIsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIjoib3BlbmJhbmtpbmcub3JnLnVrIn0..ClEY05elErtVgWJCO357XvaUEDixP099MR31FeJwCm1N2A8jQLIsJk2F29JD1u0RV3bvE8glldQDnBNzgorrk5lxH66WIqSWKfTjDu4czZPUOyLvgoLQpA_u7VtRJt0Cr3J44TiZiqhxWLUQhHkeJTnD99X-Le9TYgmCJcde_hlMG3dKF7LZHrvnJzj_7EDhQPCA2ORkKvMYVRIgpqySEm4XuUwe6k_0VGkacorH5R0MN3OF9Vwnre0YWXiMvJjKPGd0VqxhkBqmnMOv7fJ_Ss9jPeSQ3worc_WHZeJoe4iSFHXJ4fB345WjDJpk4K25uuHfLeP_nn3p2dKQJQrdnQ"
										},
										{
											"key": "request-id",
											"value": "FKPKEN1MEUKV"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubdomains;"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"DomesticPaymentId\": \"637f57f9-4330-ad90-8692-95cc2a4f3334\",\n        \"Status\": \"AcceptedSettlementInProcess\",\n        \"StatusUpdateDateTime\": \"2022-11-24T11:39:37.841424Z\",\n        \"CreationDateTime\": \"2022-11-24T11:39:37.841424Z\",\n        \"ConsentId\": \"0cb5ccc0-5340-4c2a-8b6f-fce31148024d\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            },\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructionIdentification\": \"ID412\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.codes/domestic-payments/637f57f9-4330-ad90-8692-95cc2a4f3334\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								},
								{
									"name": "AcceptedSettlementCompleted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/domestic-payments/6380b3d4-cec3-ac61-9628-2829c6aea11a",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-payments",
												"6380b3d4-cec3-ac61-9628-2829c6aea11a"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Fri, 25 Nov 2022 12:26:50 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "x-jws-signature",
											"value": "eyJraWQiOiJkaDB3MDgzUzdWYnJCd3dKbVBXVXdLMVJNRGMiLCJhbGciOiJQUzI1NiIsImNyaXQiOlsiYjY0IiwiaHR0cDovL29wZW5iYW5raW5nLm9yZy51ay9pYXQiLCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lzcyIsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIl0sImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvaWF0IjoxNjY5Mzc5MjEwLCJiNjQiOmZhbHNlLCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL3RhbiI6Im9wZW5iYW5raW5nLm9yZy51ayIsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvaXNzIjoiMDAxNTgwMDAwMTAzVUF2QUFNIn0..lOuhGE0iZG-9wrH1hr1mJodY9nIE-nxVKqCQojPGVRg69v3iC1DwNkzw92-NgUVhkhw3j8IrwJyyJsve8NaHxihWBpchSHzZlBlDYx1m7226tYb4zPY0iLqDkk2SUpTGjvWP65WPuff0COzxltaFwUDbzOyzwG9KqFa2tGwi8kNNF0hcIGwQQDoBOr7-mHNCvSBF7mOrGlsFt71YslhuvNaJkSqSW_WtFYj5VuZbZKyUtBg-xPJev5LggwXC5-e4TrbCFsxkxaVIuJCs9aAZONlsZLExSypumoBD7rPU6Am9u8rrrqlggkgi9LWjDwIGE2diS4pDdikipwCfR0I8Ew"
										},
										{
											"key": "request-id",
											"value": "H90MXS8S3YRA"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubdomains;"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"DomesticPaymentId\": \"6380b3d4-cec3-ac61-9628-2829c6aea11a\",\n        \"Status\": \"AcceptedSettlementCompleted\",\n        \"StatusUpdateDateTime\": \"2022-11-25T12:25:58.354485Z\",\n        \"CreationDateTime\": \"2022-11-25T12:23:48.333229Z\",\n        \"ConsentId\": \"d7e178ec-7aff-4645-909a-3aa02b1f13ce\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"00000070207055\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"1.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            },\n            \"EndToEndIdentification\": \"E2E12333331\",\n            \"InstructionIdentification\": \"ID41233331\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.codes/domestic-payments/6380b3d4-cec3-ac61-9628-2829c6aea11a\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								},
								{
									"name": "Rejected",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/domestic-payments/637f57f9-4330-ad90-8692-95cc2a4f3334",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-payments",
												"637f57f9-4330-ad90-8692-95cc2a4f3334"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Nov 2022 11:42:05 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "x-jws-signature",
											"value": "eyJraWQiOiJkaDB3MDgzUzdWYnJCd3dKbVBXVXdLMVJNRGMiLCJhbGciOiJQUzI1NiIsImNyaXQiOlsiYjY0IiwiaHR0cDovL29wZW5iYW5raW5nLm9yZy51ay9pYXQiLCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lzcyIsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIl0sImI2NCI6ZmFsc2UsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvaWF0IjoxNjY5MjkwMTI1LCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lzcyI6IjAwMTU4MDAwMDEwM1VBdkFBTSIsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIjoib3BlbmJhbmtpbmcub3JnLnVrIn0..oDi2dzHz1qjsu59SGnRLt20OU4s7TGiYt5Ysz5czKHQ6PhBKmIs8Prz6wZ-fn8DMNYq68RFA3Q7YQ8y4WBgf4rY5OLhLArh-Af89AJ2doQfnRkvy7x8YkRQGbXOaovbKgI3exZkDCwReCQvfptgQbBPpgDmRlLQ3QS41hQIjdIhQHVRz8yjE948n2hlmLMw5QxRXIe6d95QsNwkdLfpI7AKS7oMKoaZ94GYQye3OojIq7KbvYmze7bUs_nymzxVCg4spl2u13GrY0Gw-nT-XhSVPF7mQR21m7DYXBQek79GNXrdEaKGks6442-H-uPibM5fy081Ehnz0P9YYwHHwYw"
										},
										{
											"key": "request-id",
											"value": "12H8769GESBD1"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubdomains;"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"DomesticPaymentId\": \"637f57f9-4330-ad90-8692-95cc2a4f3334\",\n        \"Status\": \"Rejected\",\n        \"StatusUpdateDateTime\": \"2022-11-24T11:40:56.719852Z\",\n        \"CreationDateTime\": \"2022-11-24T11:39:37.841424Z\",\n        \"ConsentId\": \"0cb5ccc0-5340-4c2a-8b6f-fce31148024d\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            },\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructionIdentification\": \"ID412\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.codes/domestic-payments/637f57f9-4330-ad90-8692-95cc2a4f3334\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Domestic Scheduled Payments",
					"item": [
						{
							"name": "Domestic Scheduled Payment Consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"navigator = {}",
											"window = {}",
											"",
											"pm.test(\"Storing consent id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"consentId\", jsonData.Data.ConsentId);",
											"});",
											"",
											"pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
											"    if (error) {",
											"        pm.expect.fail(error.message);",
											"    }",
											"    if (response.code !== 200) {",
											"        pm.expect.fail('Could not load external library.');",
											"    }",
											"",
											"    eval(response.text());",
											"",
											"    let private_key",
											"",
											"    try {",
											"        private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
											"    } catch(error) {",
											"        pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
											"    }",
											"",
											"    if(!['EC','RSA'].includes(private_key.type)){",
											"        pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
											"    }",
											"    ",
											"    const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
											"",
											"    var response = pm.response.json()",
											"    var consentId = response.Data.ConsentId",
											"    var state = Math.floor(Math.random() * 10**16)",
											"",
											"    const nbf = Math.floor(Date.now() / 1000)",
											"",
											"    var header = {",
											"        \"alg\": alg,",
											"        \"kid\": pm.environment.get(\"kid\")",
											"    }",
											"    var body = {",
											"        \"response_type\": \"code id_token\",",
											"        \"client_id\":pm.environment.get(\"client_id\"),",
											"        \"redirect_uri\": pm.environment.get(\"redirect_uri\"),",
											"        \"scope\": \"payments\",",
											"        \"state\": state,",
											"        \"aud\": pm.environment.get(\"auth_url\"),",
											"        \"nbf\": nbf,",
											"        \"exp\": nbf + 3000,",
											"        \"claims\": {",
											"            \"id_token\": {",
											"                \"openbanking_intent_id\": {",
											"                    \"value\": consentId",
											"                }",
											"            }",
											"        }",
											"        }",
											"",
											"    try {",
											"        sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
											"    } catch (ex) {",
											"        pm.expect.fail(\"Unable to create request JWT: \" + ex);",
											"    }",
											"",
											"    let consentRedirectUrl = pm.environment.get(\"url\") + \"/ui/index.html?response_type=code%20id_token\"",
											"    consentRedirectUrl += \"&scope=payments\"",
											"    consentRedirectUrl += \"&redirect_uri=\" + encodeURI(pm.environment.get(\"redirect_uri\"))",
											"    consentRedirectUrl += \"&client_id=\" + encodeURI(pm.environment.get(\"client_id\")) ",
											"    consentRedirectUrl += \"&request=\" + encodeURI(sResult)",
											"    consentRedirectUrl += \"&state=\" + state",
											"",
											"    console.log(\"Go to the following URL, complete the payment, and copy the `code` parameter from the final redirect url:\\n\" + consentRedirectUrl)",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"Permission\": \"Create\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID412\",\n            \"EndToEndIdentification\": \"E2E123\",\n            \"RequestedExecutionDateTime\": \"2025-08-24T14:15:22Z\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Unstructured\": \"Shipment fee\",\n                \"Reference\": \"ReceiverRef\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/domestic-scheduled-payment-consents",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-scheduled-payment-consents"
									]
								}
							},
							"response": [
								{
									"name": "Domestic Scheduled Payment Consent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\":{\"Permission\":\"Create\",\"Initiation\":{\"InstructionIdentification\":\"ID412\",\"EndToEndIdentification\":\"E2E123\",\"RequestedExecutionDateTime\":\"2023-08-24T14:15:22Z\",\"InstructedAmount\":{\"Amount\":\"10.0\",\"Currency\":\"GBP\"},\"CreditorAccount\":{\"SchemeName\":\"UK.OBIE.SortCodeAccountNumber\",\"Identification\":\"11223321325698\",\"Name\":\"Receiver Co.\"},\"RemittanceInformation\":{\"Unstructured\":\"Shipment fee\",\"Reference\":\"ReceiverRef\"}}},\"Risk\":{\"PaymentContextCode\":\"BillPayment\"}}"
										},
										"url": {
											"raw": "{{auth_url}}/domestic-scheduled-payment-consents",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-scheduled-payment-consents"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-23T16:24:44.538265Z\",\n        \"CreationDateTime\": \"2022-09-23T16:24:44.538265Z\",\n        \"Permission\": \"Create\",\n        \"ConsentId\": \"334fxxxx-e6e8-xxxx-a823-acaf8c93a6af\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID412\",\n            \"EndToEndIdentification\": \"E2E123\",\n            \"RequestedExecutionDateTime\": \"2023-08-24T14:15:22Z\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Unstructured\": \"Shipment fee\",\n                \"Reference\": \"ReceiverRef\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-scheduled-payment-consents/334fxxxx-e6e8-xxxx-a823-acaf8c93a6af\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve Domestic Scheduled Payment Consent",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/domestic-scheduled-payment-consents/{{consentId}}",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-scheduled-payment-consents",
										"{{consentId}}"
									]
								}
							},
							"response": [
								{
									"name": "Domestic Scheduled Payment Consent",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\":{\"Permission\":\"Create\",\"Initiation\":{\"InstructionIdentification\":\"ID412\",\"EndToEndIdentification\":\"E2E123\",\"RequestedExecutionDateTime\":\"2023-08-24T14:15:22Z\",\"InstructedAmount\":{\"Amount\":\"10.0\",\"Currency\":\"GBP\"},\"CreditorAccount\":{\"SchemeName\":\"UK.OBIE.SortCodeAccountNumber\",\"Identification\":\"11223321325698\",\"Name\":\"Receiver Co.\"},\"RemittanceInformation\":{\"Unstructured\":\"Shipment fee\",\"Reference\":\"ReceiverRef\"}}},\"Risk\":{\"PaymentContextCode\":\"BillPayment\"}}"
										},
										"url": {
											"raw": "{{auth_url}}/domestic-scheduled-payment-consents/{consentId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-scheduled-payment-consents",
												"{consentId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-23T16:30:48.724988Z\",\n        \"CreationDateTime\": \"2022-09-23T16:30:48.724988Z\",\n        \"Permission\": \"Create\",\n        \"ConsentId\": \"9709f508-xxxx-44bd-xxxx-94cb8d574d2f\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            },\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructionIdentification\": \"ID412\",\n            \"RequestedExecutionDateTime\": \"2023-08-24T14:15:22Z\"\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-scheduled-payment-consents/9709f508-xxxx-44bd-xxxx-94cb8d574d2f\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Create Domestic Scheduled Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Storing payment id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"domesticScheduledPaymentId\", jsonData.Data.DomesticScheduledPaymentId);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{payments_access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{consentId}}\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"ID412\",\n            \"EndToEndIdentification\": \"E2E123\",\n            \"RequestedExecutionDateTime\": \"2025-08-24T14:15:22Z\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            },\n            \"RemittanceInformation\": {\n                \"Unstructured\": \"Shipment fee\",\n                \"Reference\": \"ReceiverRef\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/domestic-scheduled-payments",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-scheduled-payments"
									]
								}
							},
							"response": [
								{
									"name": "Domestic Scheduled Payment Consent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\":{\"Permission\":\"Create\",\"Initiation\":{\"InstructionIdentification\":\"ID412\",\"EndToEndIdentification\":\"E2E123\",\"RequestedExecutionDateTime\":\"2023-08-24T14:15:22Z\",\"InstructedAmount\":{\"Amount\":\"10.0\",\"Currency\":\"GBP\"},\"CreditorAccount\":{\"SchemeName\":\"UK.OBIE.SortCodeAccountNumber\",\"Identification\":\"11223321325698\",\"Name\":\"Receiver Co.\"},\"RemittanceInformation\":{\"Unstructured\":\"Shipment fee\",\"Reference\":\"ReceiverRef\"}}},\"Risk\":{\"PaymentContextCode\":\"BillPayment\"}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/domestic-scheduled-payments",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-scheduled-payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"ConsentId\": \"163cefc8-830b-xxxx-xxxx-34022a19a556\",\n        \"CreationDateTime\": \"2022-09-23T16:36:48.416214Z\",\n        \"DomesticScheduledPaymentId\": \"12345678-xxxx-422b-9270-482770c42379\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\"\n            },\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"InstructionIdentification\": \"ID412\",\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            },\n            \"RequestedExecutionDateTime\": \"2023-08-24T14:15:22Z\"\n        },\n        \"Permission\": \"Create\",\n        \"Status\": \"InitiationPending\",\n        \"StatusUpdateDateTime\": \"2022-09-23T16:36:48.416214Z\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-scheduled-payments/12345678-xxxx-422b-9270-482770c42379\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve Domestic Scheduled Payment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/domestic-scheduled-payments/:id",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-scheduled-payments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{domesticScheduledPaymentId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Retrieve Domestic Scheduled Payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\":{\"Permission\":\"Create\",\"Initiation\":{\"InstructionIdentification\":\"ID412\",\"EndToEndIdentification\":\"E2E123\",\"RequestedExecutionDateTime\":\"2023-08-24T14:15:22Z\",\"InstructedAmount\":{\"Amount\":\"10.0\",\"Currency\":\"GBP\"},\"CreditorAccount\":{\"SchemeName\":\"UK.OBIE.SortCodeAccountNumber\",\"Identification\":\"11223321325698\",\"Name\":\"Receiver Co.\"},\"RemittanceInformation\":{\"Unstructured\":\"Shipment fee\",\"Reference\":\"ReceiverRef\"}}},\"Risk\":{\"PaymentContextCode\":\"BillPayment\"}}"
										},
										"url": {
											"raw": "{{auth_url}}/domestic-scheduled-payment-consents/{DomesticScheduledPaymentId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-scheduled-payment-consents",
												"{DomesticScheduledPaymentId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"InitiationPending\",\n        \"StatusUpdateDateTime\": \"2022-09-23T16:36:48.416214Z\",\n        \"CreationDateTime\": \"2022-09-23T16:36:48.416214Z\",\n        \"Permission\": \"Create\",\n        \"DomesticScheduledPaymentId\": \"12345678-xxxx-422b-9270-482770c42379\",\n        \"ConsentId\": \"163cefc8-830b-xxxx-xxxx-34022a19a556\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"RemittanceInformation\": {\n                \"Reference\": \"ReceiverRef\",\n                \"Unstructured\": \"Shipment fee\"\n            },\n            \"EndToEndIdentification\": \"E2E123\",\n            \"InstructionIdentification\": \"ID412\",\n            \"RequestedExecutionDateTime\": \"2023-08-24T14:15:22Z\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-scheduled-payments/12345678-xxxx-422b-9270-482770c42379\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Domestic Standing Orders",
					"item": [
						{
							"name": "Domestic Standing Orders Consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"navigator = {}",
											"window = {}",
											"",
											"pm.test(\"Storing consent id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"consentId\", jsonData.Data.ConsentId);",
											"});",
											"",
											"pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
											"    if (error) {",
											"        pm.expect.fail(error.message);",
											"    }",
											"    if (response.code !== 200) {",
											"        pm.expect.fail('Could not load external library.');",
											"    }",
											"",
											"    eval(response.text());",
											"",
											"    let private_key",
											"",
											"    try {",
											"        private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
											"    } catch(error) {",
											"        pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
											"    }",
											"",
											"    if(!['EC','RSA'].includes(private_key.type)){",
											"        pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
											"    }",
											"    ",
											"    const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
											"",
											"    var response = pm.response.json()",
											"    var consentId = response.Data.ConsentId",
											"    var state = Math.floor(Math.random() * 10**16)",
											"",
											"    const nbf = Math.floor(Date.now() / 1000)",
											"",
											"    var header = {",
											"        \"alg\": alg,",
											"        \"kid\": pm.environment.get(\"kid\")",
											"    }",
											"    var body = {",
											"        \"response_type\": \"code id_token\",",
											"        \"client_id\":pm.environment.get(\"client_id\"),",
											"        \"redirect_uri\": pm.environment.get(\"redirect_uri\"),",
											"        \"scope\": \"payments\",",
											"        \"state\": state,",
											"        \"aud\": pm.environment.get(\"auth_url\"),",
											"        \"nbf\": nbf,",
											"        \"exp\": nbf + 3000,",
											"        \"claims\": {",
											"            \"id_token\": {",
											"                \"openbanking_intent_id\": {",
											"                    \"value\": consentId",
											"                }",
											"            }",
											"        }",
											"        }",
											"",
											"    try {",
											"        sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
											"    } catch (ex) {",
											"        pm.expect.fail(\"Unable to create request JWT: \" + ex);",
											"    }",
											"",
											"    let consentRedirectUrl = pm.environment.get(\"url\") + \"/ui/index.html?response_type=code%20id_token\"",
											"    consentRedirectUrl += \"&scope=payments\"",
											"    consentRedirectUrl += \"&redirect_uri=\" + encodeURI(pm.environment.get(\"redirect_uri\"))",
											"    consentRedirectUrl += \"&client_id=\" + encodeURI(pm.environment.get(\"client_id\")) ",
											"    consentRedirectUrl += \"&request=\" + encodeURI(sResult)",
											"    consentRedirectUrl += \"&state=\" + state",
											"",
											"    console.log(\"Go to the following URL, complete the payment, and copy the `code` parameter from the final redirect url:\\n\" + consentRedirectUrl)",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"Permission\": \"Create\",\n        \"Initiation\": {\n            \"Frequency\": \"IntrvlMnthDay:01:03\",\n            \"FirstPaymentDateTime\": \"2025-10-03T14:15:22Z\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/domestic-standing-order-consents",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-standing-order-consents"
									]
								}
							},
							"response": [
								{
									"name": "Domestic Standing Orders Consent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"Permission\": \"Create\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentDateTime\": \"2022-09-23T14:15:22Z\",\n            \"FirstPaymentAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/domestic-standing-order-consents",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-standing-order-consents"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-23T17:29:11.18491Z\",\n        \"CreationDateTime\": \"2022-09-23T17:29:11.18491Z\",\n        \"Permission\": \"Create\",\n        \"ConsentId\": \"a8987204-xxxx-4c26-xxxx-f7a3effea6f3\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentDateTime\": \"2022-09-24T14:15:22Z\",\n            \"FirstPaymentAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-standing-order-consents/a8987204-xxxx-4c26-xxxx-f7a3effea6f3\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve Domestic Standing Orders Consent",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/domestic-standing-order-consents/{{consentId}}",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-standing-order-consents",
										"{{consentId}}"
									]
								}
							},
							"response": [
								{
									"name": "Retrieve Domestic Standing Orders Consent",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/domestic-standing-order-consents/{consentId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-standing-order-consents",
												"{consentId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-23T17:29:11.18491Z\",\n        \"CreationDateTime\": \"2022-09-23T17:29:11.18491Z\",\n        \"Permission\": \"Create\",\n        \"ConsentId\": \"a8987204-xxxx-4c26-xxxx-f7a3effea6f3\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"FirstPaymentAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"FirstPaymentDateTime\": \"2022-09-24T14:15:22Z\"\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-standing-order-consents/a8987204-xxxx-4c26-xxxx-f7a3effea6f3\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Create Domestic Standing Orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Storing payment id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"domesticStandingOrderId\", jsonData.Data.DomesticStandingOrderId);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{payments_access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{consentId}}\",\n        \"Initiation\": {\n            \"Frequency\": \"IntrvlMnthDay:01:03\",\n            \"FirstPaymentDateTime\": \"2025-10-03T14:15:22Z\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/domestic-standing-orders",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-standing-orders"
									]
								}
							},
							"response": [
								{
									"name": "Create Domestic Standing Orders",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"a8987204-xxxx-4c26-xxxx-f7a3effea6f3\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentDateTime\": \"2022-09-24T14:15:22Z\",\n            \"FirstPaymentAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/domestic-standing-orders",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-standing-orders"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"ConsentId\": \"a8987204-xxxx-4c26-xxxx-f7a3effea6f3\",\n        \"CreationDateTime\": \"2022-09-23T17:37:46.190063Z\",\n        \"DomesticStandingOrderId\": \"4c31965f-3de0-xxxx-8946-2f4f0e50dcda\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\"\n            },\n            \"FirstPaymentAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"FirstPaymentDateTime\": \"2022-09-24T14:15:22Z\",\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\"\n        },\n        \"Permission\": \"Create\",\n        \"Status\": \"InitiationCompleted\",\n        \"StatusUpdateDateTime\": \"2022-09-23T17:37:46.190063Z\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-standing-orders/4c31965f-3de0-xxxx-8946-2f4f0e50dcda\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve Domestic Standing Order",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/domestic-standing-orders/:id",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"domestic-standing-orders",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{domesticStandingOrderId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Retrieve Domestic Standing Order",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/domestic-standing-orders/4c31965f-3de0-4ad2-8946-2f4f0e50dcda",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"domestic-standing-orders",
												"4c31965f-3de0-4ad2-8946-2f4f0e50dcda"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"InitiationCompleted\",\n        \"StatusUpdateDateTime\": \"2022-09-23T17:37:46.190063Z\",\n        \"CreationDateTime\": \"2022-09-23T17:37:46.190063Z\",\n        \"Permission\": \"Create\",\n        \"DomesticStandingOrderId\": \"4c31965f-3de0-xxxx-8946-2f4f0e50dcda\",\n        \"ConsentId\": \"a8987204-xxxx-4c26-xxxx-f7a3effea6f3\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"NumberOfPayments\": \"1\",\n            \"FirstPaymentAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"FirstPaymentDateTime\": \"2022-09-24T14:15:22Z\",\n            \"RecurringPaymentAmount\": {\n                \"Amount\": \"1.00\",\n                \"Currency\": \"GBP\"\n            }\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/domestic-standing-orders/4c31965f-3de0-xxxx-8946-2f4f0e50dcda\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "File Payments",
					"item": [
						{
							"name": "File Payment consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"navigator = {}",
											"window = {}",
											"",
											"pm.test(\"Storing consent id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"consentId\", jsonData.Data.ConsentId);",
											"});",
											"",
											"pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
											"    if (error) {",
											"        pm.expect.fail(error.message);",
											"    }",
											"    if (response.code !== 200) {",
											"        pm.expect.fail('Could not load external library.');",
											"    }",
											"",
											"    eval(response.text());",
											"",
											"    let private_key",
											"",
											"    try {",
											"        private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
											"    } catch(error) {",
											"        pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
											"    }",
											"",
											"    if(!['EC','RSA'].includes(private_key.type)){",
											"        pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
											"    }",
											"    ",
											"    const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
											"",
											"    var response = pm.response.json()",
											"    var consentId = response.Data.ConsentId",
											"    var state = Math.floor(Math.random() * 10**16)",
											"",
											"    const nbf = Math.floor(Date.now() / 1000)",
											"",
											"    var header = {",
											"        \"alg\": alg,",
											"        \"kid\": pm.environment.get(\"kid\")",
											"    }",
											"    var body = {",
											"        \"response_type\": \"code id_token\",",
											"        \"client_id\":pm.environment.get(\"client_id\"),",
											"        \"redirect_uri\": pm.environment.get(\"redirect_uri\"),",
											"        \"scope\": \"payments\",",
											"        \"state\": state,",
											"        \"aud\": pm.environment.get(\"auth_url\"),",
											"        \"nbf\": nbf,",
											"        \"exp\": nbf + 3000,",
											"        \"claims\": {",
											"            \"id_token\": {",
											"                \"openbanking_intent_id\": {",
											"                    \"value\": consentId",
											"                }",
											"            }",
											"        }",
											"        }",
											"",
											"    try {",
											"        sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
											"    } catch (ex) {",
											"        pm.expect.fail(\"Unable to create request JWT: \" + ex);",
											"    }",
											"",
											"    let consentRedirectUrl = pm.environment.get(\"url\") + \"/ui/index.html?response_type=code%20id_token\"",
											"    consentRedirectUrl += \"&scope=payments\"",
											"    consentRedirectUrl += \"&redirect_uri=\" + encodeURI(pm.environment.get(\"redirect_uri\"))",
											"    consentRedirectUrl += \"&client_id=\" + encodeURI(pm.environment.get(\"client_id\")) ",
											"    consentRedirectUrl += \"&request=\" + encodeURI(sResult)",
											"    consentRedirectUrl += \"&state=\" + state",
											"",
											"    console.log(\"Go to the following URL, complete the payment, and copy the `code` parameter from the final redirect url:\\n\" + consentRedirectUrl)",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"Initiation\": {\n            \"FileType\": \"text/csv\",\n            \"FileHash\": \"aflZYi3Jqn7L3PfSD+rYrY4yxZYrvMMXpop2O3E/GrE=\",\n            \"FileReference\": \"reference1234\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/file-payment-consents",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"file-payment-consents"
									]
								},
								"description": "Compute the FileHash with:\n\n`cat file.csv | shasum -a 256 | xxd -r -p | base64`"
							},
							"response": [
								{
									"name": "File Payment consent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"Initiation\": {\n            \"FileType\": \"text/csv\",\n            \"FileHash\": \"a31f80c0-4946-11ed-b878-0242ac120002\",\n            \"FileReference\": \"reference1234\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/file-payment-consents",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"file-payment-consents"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingUpload\",\n        \"StatusUpdateDateTime\": \"2022-10-11T13:17:08.140705Z\",\n        \"CreationDateTime\": \"2022-10-11T13:17:08.140705Z\",\n        \"ConsentId\": \"d2ca7407-1234-466e-xxxx-00010770a4ff\",\n        \"Initiation\": {\n            \"FileType\": \"text/csv\",\n            \"FileHash\": \"7YuW8NQJ78/cHthltcqeJd1234BlATBS92IzoBXqQz0=\",\n            \"FileReference\": \"reference1234\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba.revolut.com/file-payment-consents/d2ca7407-1234-466e-xxxx-00010770a4ff\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Upload a File Payment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "text/csv"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "Name,Recipient type,Account number,Sort code or Routing number,IBAN,BIC,Recipient bank country,Currency,Amount,Payment reference,Recipient country,State or province,Address line 1,Address line 2,City,Postal code\nJohn Smith,INDIVIDUAL,40513598,207409,,,GB,GBP,10,User comment,GB,,Revolutest LTD,Somewhere in London,London,E14 5AB",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{auth_url}}/file-payment-consents/{{consentId}}/file",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"file-payment-consents",
										"{{consentId}}",
										"file"
									]
								}
							},
							"response": [
								{
									"name": "Upload a File Payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "text/csv"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "Name,Recipient type,Account number,Sort code or Routing number,IBAN,BIC,Recipient bank country,Currency,Amount,Payment reference,Recipient country,State or province,Address line 1,Address line 2,City,Postal code\nJohn Smith,INDIVIDUAL,40513598,207409,,,GB,GBP,10,User comment,GB,,Revolutest LTD,Somewhere in London,London,E14 5AB",
											"options": {
												"raw": {
													"language": "text"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/file-payment-consents/{{consentId}}/file",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"file-payment-consents",
												"{{consentId}}",
												"file"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Wed, 23 Nov 2022 08:40:02 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "x-jws-signature",
											"value": "eyJraWQiOiJkaDB3MDgzUzdWYnJCd3dKbVBXVXdLMVJNRGMiLCJhbGciOiJQUzI1NiIsImNyaXQiOlsiYjY0IiwiaHR0cDovL29wZW5iYW5raW5nLm9yZy51ay9pYXQiLCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lzcyIsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIl0sImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvaXNzIjoiMDAxNTgwMDAwMTAzVUF2QUFNIiwiaHR0cDovL29wZW5iYW5raW5nLm9yZy51ay90YW4iOiJvcGVuYmFua2luZy5vcmcudWsiLCJiNjQiOmZhbHNlLCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lhdCI6MTY2OTE5MjgwMn0..XN_Pt9zGICIp8QCTB_aaaTrY3T7NGivkZppWbjDaATCoyHcGXMWWAZZ2FHp60tZWD82uoRV7eFXcgpRHpmdIpbG4rg8sI6Iznkh9hZT2x2ozulumAxNhS0hEnUnnZLtl3GITr2dKEWpYHhuLnKscEC-kpFW52igIePHgsULUdU-w_Bdb57-FVP897RhTGyqANY8B_a0kZHMOZwdRdo0KjSomIyDRDjwLJA4ZVPZke-8RaUDB5NY84xuH2HVzaTNbchVoP4U9Tg24LM9Ks6zi3ZFyMKd_KBvvc-H_dVB36GA7nsTxPJoOxd3NFCCXhTzEY-n-_gH4wz7H3nCDSIRd8w"
										},
										{
											"key": "request-id",
											"value": "11PWRT4NST9LM"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubdomains;"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Retrieve File Payment consent",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/file-payment-consents/{{consentId}}",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"file-payment-consents",
										"{{consentId}}"
									]
								}
							},
							"response": [
								{
									"name": "Retrieve File Payment consent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/file-payment-consents/6fb10dd9-xxxx-yyyy-zzzz-430e37f8cea0",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"file-payment-consents",
												"6fb10dd9-xxxx-yyyy-zzzz-430e37f8cea0"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingUpload\",\n        \"StatusUpdateDateTime\": \"2022-11-22T17:16:28.350197Z\",\n        \"CreationDateTime\": \"2022-11-22T17:16:28.350197Z\",\n        \"ConsentId\": \"6fb10dd9-xxxx-yyyy-zzzz-430e37f8cea0\",\n        \"Initiation\": {\n            \"FileHash\": \"7YuW8NQJ78/cHthltcqeJd1234BlATBS92IzoBXqQz0=\",\n            \"FileType\": \"text/csv\",\n            \"FileReference\": \"reference1234\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba.revolut.codes/file-payment-consents/6fb10dd9-xxxx-yyyy-zzzz-430e37f8cea0\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve an uploaded payment file",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/file-payment-consents/{{consentId}}/file",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"file-payment-consents",
										"{{consentId}}",
										"file"
									]
								}
							},
							"response": [
								{
									"name": "Retrieve an uploaded payment file",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "text/csv",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/file-payment-consents/{{consentId}}/file",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"file-payment-consents",
												"{{consentId}}",
												"file"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "Date",
											"value": "Wed, 23 Nov 2022 08:52:21 GMT"
										},
										{
											"key": "Content-Type",
											"value": "text/csv"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "x-jws-signature",
											"value": "eyJraWQiOiJkaDB3MDgzUzdWYnJCd3dKbVBXVXdLMVJNRGMiLCJhbGciOiJQUzI1NiIsImNyaXQiOlsiYjY0IiwiaHR0cDovL29wZW5iYW5raW5nLm9yZy51ay9pYXQiLCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lzcyIsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvdGFuIl0sImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvaXNzIjoiMDAxNTgwMDAwMTAzVUF2QUFNIiwiaHR0cDovL29wZW5iYW5raW5nLm9yZy51ay90YW4iOiJvcGVuYmFua2luZy5vcmcudWsiLCJiNjQiOmZhbHNlLCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lhdCI6MTY2OTE5MzU0MX0..MZbfTHRp4Z9GE0mdr3xVVI9QtrqgmnsblFQejloCA0icBDbb8hPcQDECa81KrdVChEpPCC7B2xOKZRZXrSabsMqqFQsyQBQMm6PbDglxBlJiqJD188bUCfc3KUjMP2KgjFTQyBdB5uKcThAOK0aSSj9d-SImfRLtM0z-xywd6JIZ23onk4CXFq7hsQ2EMwSD7eBd9YcA-wyaLRpDUKTlHP4ojMpFbo-jgQ52wsE9qNh3UWBaDcKoXcx0kR_t115uN6bwZHIHSu4MrVYNoX04zvy6ux-Y5Vb7KfUlzGzeN22MKfDNPXg9RkK4DXxFYnFyMEUVRqQ9gVkkPmmasJRR2w"
										},
										{
											"key": "request-id",
											"value": "10NN7RS30IW82"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=63072000; includeSubdomains;"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "Via",
											"value": "1.1 google"
										},
										{
											"key": "Alt-Svc",
											"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""
										}
									],
									"cookie": [],
									"body": "Name,Recipient type,Account number,Sort code or Routing number,IBAN,BIC,Recipient bank country,Currency,Amount,Payment reference,Recipient country,State or province,Address line 1,Address line 2,City,Postal code\nJohn Smith,INDIVIDUAL,40513598,207409,,,GB,GBP,10,User comment,GB,,Revolutest LTD,Somewhere in London,London,E14 5AB"
								}
							]
						},
						{
							"name": "Create a file payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Storing payment id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"filePaymentId\", jsonData.Data.FilePaymentId);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{payments_access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{consentId}}\",\n        \"Initiation\": {\n            \"FileType\": \"text/csv\",\n            \"FileHash\": \"aflZYi3Jqn7L3PfSD+rYrY4yxZYrvMMXpop2O3E/GrE=\",\n            \"FileReference\": \"reference1234\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{auth_url}}/file-payments",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"file-payments"
									]
								}
							},
							"response": [
								{
									"name": "Create a file payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\":{\"ConsentId\":\"7ffe4969-1234-1234-acab-d24e89855fdd\",\"Initiation\":{\"FileType\":\"text/csv\",\"FileHash\":\"7YuW8NQJ78/cHthltcqeJdJKX3BlATBS92IzoBXqQz0=\",\"FileReference\":\"reference1234\"}}}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/file-payments",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"file-payments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"ConsentId\": \"7ffe4969-1234-1234-acab-d24e89855fdd\",\n        \"CreationDateTime\": \"2022-10-12T14:06:27.883606Z\",\n        \"FilePaymentId\": \"6036c4d7-b311-xxxx-xxxx-b37a0a1395e0\",\n        \"Initiation\": {\n            \"FileHash\": \"7YuW8NQJ78/cHthltcqeJd1234BlATBS92IzoBXqQz0=\",\n            \"FileReference\": \"reference1234\",\n            \"FileType\": \"text/csv\"\n        },\n        \"Status\": \"InitiationCompleted\",\n        \"StatusUpdateDateTime\": \"2022-10-12T14:06:27.883606Z\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba.revolut.com/file-payments/6036c4d7-b311-xxxx-xxxx-b37a0a1395e0\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve a file payment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/file-payments/:id",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"file-payments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{filePaymentId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Retrieve a file payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/file-payments/{FilePaymentId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"file-payments",
												"{FilePaymentId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"InitiationCompleted\",\n        \"StatusUpdateDateTime\": \"2022-10-12T14:06:28.48358Z\",\n        \"CreationDateTime\": \"2022-10-12T14:06:27.883606Z\",\n        \"FilePaymentId\": \"6036c4d7-b311-xxxx-xxxx-b37a0a1395e0\",\n        \"ConsentId\": \"7ffe4969-1234-1234-acab-d24e89855fdd\",\n        \"Initiation\": {\n            \"FileHash\": \"7YuW8NQJ78/cHthltcqeJd1234BlATBS92IzoBXqQz0=\",\n            \"FileType\": \"text/csv\",\n            \"FileReference\": \"reference1234\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba.revolut.com/file-payments/6036c4d7-b311-xxxx-xxxx-b37a0a1395e0\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve all payments from a file payment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/file-payments/:id/report-file",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"file-payments",
										":id",
										"report-file"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{filePaymentId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Retrieve all payments from a file payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/file-payments/{FilePaymentId}/report-file",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"file-payments",
												"{FilePaymentId}",
												"report-file"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Payments\": [\n        {\n            \"Amount\": {\n                \"Amount\": \"10.00\",\n                \"Currency\": \"GBP\"\n            },\n            \"Reference\": \"User comment\",\n            \"Status\": \"Created\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "International Payments",
					"item": [
						{
							"name": "International Payment Consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"navigator = {}",
											"window = {}",
											"",
											"pm.test(\"Storing consent id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"consentId\", jsonData.Data.ConsentId);",
											"});",
											"",
											"pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
											"    if (error) {",
											"        pm.expect.fail(error.message);",
											"    }",
											"    if (response.code !== 200) {",
											"        pm.expect.fail('Could not load external library.');",
											"    }",
											"",
											"    eval(response.text());",
											"",
											"    let private_key",
											"",
											"    try {",
											"        private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
											"    } catch(error) {",
											"        pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
											"    }",
											"",
											"    if(!['EC','RSA'].includes(private_key.type)){",
											"        pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
											"    }",
											"    ",
											"    const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
											"",
											"    var response = pm.response.json()",
											"    var consentId = response.Data.ConsentId",
											"    var state = Math.floor(Math.random() * 10**16)",
											"",
											"    const nbf = Math.floor(Date.now() / 1000)",
											"",
											"    var header = {",
											"        \"alg\": alg,",
											"        \"kid\": pm.environment.get(\"kid\")",
											"    }",
											"    var body = {",
											"        \"response_type\": \"code id_token\",",
											"        \"client_id\":pm.environment.get(\"client_id\"),",
											"        \"redirect_uri\": pm.environment.get(\"redirect_uri\"),",
											"        \"scope\": \"payments\",",
											"        \"state\": state,",
											"        \"aud\": pm.environment.get(\"auth_url\"),",
											"        \"nbf\": nbf,",
											"        \"exp\": nbf + 3000,",
											"        \"claims\": {",
											"            \"id_token\": {",
											"                \"openbanking_intent_id\": {",
											"                    \"value\": consentId",
											"                }",
											"            }",
											"        }",
											"        }",
											"",
											"    try {",
											"        sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
											"    } catch (ex) {",
											"        pm.expect.fail(\"Unable to create request JWT: \" + ex);",
											"    }",
											"",
											"    let consentRedirectUrl = pm.environment.get(\"url\") + \"/ui/index.html?response_type=code%20id_token\"",
											"    consentRedirectUrl += \"&scope=payments\"",
											"    consentRedirectUrl += \"&redirect_uri=\" + encodeURI(pm.environment.get(\"redirect_uri\"))",
											"    consentRedirectUrl += \"&client_id=\" + encodeURI(pm.environment.get(\"client_id\")) ",
											"    consentRedirectUrl += \"&request=\" + encodeURI(sResult)",
											"    consentRedirectUrl += \"&state=\" + state",
											"",
											"    console.log(\"Go to the following URL, complete the payment, and copy the `code` parameter from the final redirect url:\\n\" + consentRedirectUrl)",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"Initiation\": {\n            \"InstructionIdentification\": \"Reference1234\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"CurrencyOfTransfer\": \"EUR\",\n            \"InstructedAmount\": {\n                \"Amount\": \"0.1\",\n                \"Currency\": \"EUR\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.IBAN\",\n                \"Identification\": \"DE05504000005040040066\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{auth_url}}/international-payment-consents",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-payment-consents"
									]
								}
							},
							"response": [
								{
									"name": "International Payment Consent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\":{\"Initiation\":{\"InstructionIdentification\":\"Reference1234\",\"EndToEndIdentification\":\"E2E1234\",\"CurrencyOfTransfer\":\"EUR\",\"InstructedAmount\":{\"Amount\":\"10.0\",\"Currency\":\"EUR\"},\"CreditorAccount\":{\"SchemeName\":\"UK.OBIE.SortCodeAccountNumber\",\"Identification\":\"11223321325698\",\"Name\":\"Receiver Co.\"}}},\"Risk\":{\"PaymentContextCode\":\"BillPayment\"}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/international-payment-consents",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-payment-consents"
											]
										}
									},
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-26T09:07:30.952882Z\",\n        \"CreationDateTime\": \"2022-09-26T09:07:30.952882Z\",\n        \"ConsentId\": \"3446d4b6-xxxx-4e4f-xxxx-6605eeff5d1f\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"Reference1234\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"CurrencyOfTransfer\": \"EUR\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"EUR\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        },\n        \"ExchangeRateInformation\": {\n            \"UnitCurrency\": \"EUR\",\n            \"RateType\": \"Indicative\",\n            \"ExchangeRate\": \"1.0000\"\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-payment-consents/3446d4b6-xxxx-4e4f-xxxx-6605eeff5d1f\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve International Payment Consent",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/international-payment-consents/{{consentId}}",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-payment-consents",
										"{{consentId}}"
									]
								}
							},
							"response": [
								{
									"name": "Retrieve International Payment Consent",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/international-payment-consents/{consentId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-payment-consents",
												"{consentId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-26T09:07:30.952882Z\",\n        \"CreationDateTime\": \"2022-09-26T09:07:30.952882Z\",\n        \"ConsentId\": \"3446d4b6-xxxx-4e4f-xxxx-6605eeff5d1f\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"EUR\"\n            },\n            \"CurrencyOfTransfer\": \"EUR\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"InstructionIdentification\": \"Reference1234\"\n        },\n        \"ExchangeRateInformation\": {\n            \"UnitCurrency\": \"EUR\",\n            \"RateType\": \"Indicative\",\n            \"ExchangeRate\": \"1.0000\"\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-payment-consents/3446d4b6-xxxx-4e4f-xxxx-6605eeff5d1f\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Create International Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Storing payment id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"internationalPaymentId\", jsonData.Data.InternationalPaymentId);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{payments_access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{consentId}}\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"Reference1234\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"CurrencyOfTransfer\": \"EUR\",\n            \"InstructedAmount\": {\n                \"Amount\": \"0.1\",\n                \"Currency\": \"EUR\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.IBAN\",\n                \"Identification\": \"DE05504000005040040066\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/international-payments",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-payments"
									]
								}
							},
							"response": [
								{
									"name": "Create International Payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\":{\"ConsentId\":\"65067c5d-e752-410d-a922-c9da2aeb8e6b\",\"Initiation\":{\"InstructionIdentification\":\"Reference1234\",\"EndToEndIdentification\":\"E2E1234\",\"CurrencyOfTransfer\":\"EUR\",\"InstructedAmount\":{\"Amount\":\"10.0\",\"Currency\":\"EUR\"},\"CreditorAccount\":{\"SchemeName\":\"UK.OBIE.SortCodeAccountNumber\",\"Identification\":\"11223321325698\",\"Name\":\"Receiver Co.\"}}},\"Risk\":{\"PaymentContextCode\":\"BillPayment\"}}"
										},
										"url": {
											"raw": "{{auth_url}}/international-payments",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"ConsentId\": \"2373df19-xxxx-43a9-xxxx-b5fd14e5920f\",\n        \"CreationDateTime\": \"2022-09-26T09:29:10.152499Z\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\"\n            },\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"InstructionIdentification\": \"Reference1234\"\n        },\n        \"InternationalPaymentId\": \"633170e6-xxxx-xxxx-xxxx-e90e7f88abee\",\n        \"Status\": \"AcceptedSettlementInProcess\",\n        \"StatusUpdateDateTime\": \"2022-09-26T09:29:10.152499Z\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-payments/633170e6-xxxx-xxxx-xxxx-e90e7f88abee\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Get funds confirmation for international payment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{payments_access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/international-payment-consents/{{consentId}}/funds-confirmation",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-payment-consents",
										"{{consentId}}",
										"funds-confirmation"
									]
								}
							},
							"response": [
								{
									"name": "Get funds confirmation for international payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/international-payment-consents/{consentId}/funds-confirmation",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-payment-consents",
												"{consentId}",
												"funds-confirmation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"FundsAvailableResult\": {\n            \"FundsAvailableDateTime\": \"2022-09-26T14:13:46.585307Z\",\n            \"FundsAvailable\": true\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-payment-consents/323673db-babc-xxxx-xxxx-148cd24c390e/funds-confirmation\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve International Payment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/international-payments/:id",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-payments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{internationalPaymentId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Retrieve International Payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/international-payments/{InternationalPaymentId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-payments",
												"{InternationalPaymentId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AcceptedSettlementCompleted\",\n        \"StatusUpdateDateTime\": \"2022-09-26T14:28:04.342276Z\",\n        \"CreationDateTime\": \"2022-09-26T14:28:00.178343Z\",\n        \"InternationalPaymentId\": \"12345678-6992-a81e-xxxx-01f9c376f047\",\n        \"ConsentId\": \"dd8b3bc7-xxxx-498e-xxxx-72d31ca13970\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"InstructionIdentification\": \"Reference1234\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-payments/12345678-6992-a81e-xxxx-01f9c376f047\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "International Scheduled Payments",
					"item": [
						{
							"name": "International Scheduled Payment Consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"navigator = {}",
											"window = {}",
											"",
											"pm.test(\"Storing consent id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"consentId\", jsonData.Data.ConsentId);",
											"});",
											"",
											"pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
											"    if (error) {",
											"        pm.expect.fail(error.message);",
											"    }",
											"    if (response.code !== 200) {",
											"        pm.expect.fail('Could not load external library.');",
											"    }",
											"",
											"    eval(response.text());",
											"",
											"    let private_key",
											"",
											"    try {",
											"        private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
											"    } catch(error) {",
											"        pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
											"    }",
											"",
											"    if(!['EC','RSA'].includes(private_key.type)){",
											"        pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
											"    }",
											"    ",
											"    const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
											"",
											"    var response = pm.response.json()",
											"    var consentId = response.Data.ConsentId",
											"    var state = Math.floor(Math.random() * 10**16)",
											"",
											"    const nbf = Math.floor(Date.now() / 1000)",
											"",
											"    var header = {",
											"        \"alg\": alg,",
											"        \"kid\": pm.environment.get(\"kid\")",
											"    }",
											"    var body = {",
											"        \"response_type\": \"code id_token\",",
											"        \"client_id\":pm.environment.get(\"client_id\"),",
											"        \"redirect_uri\": pm.environment.get(\"redirect_uri\"),",
											"        \"scope\": \"payments\",",
											"        \"state\": state,",
											"        \"aud\": pm.environment.get(\"auth_url\"),",
											"        \"nbf\": nbf,",
											"        \"exp\": nbf + 3000,",
											"        \"claims\": {",
											"            \"id_token\": {",
											"                \"openbanking_intent_id\": {",
											"                    \"value\": consentId",
											"                }",
											"            }",
											"        }",
											"        }",
											"",
											"    try {",
											"        sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
											"    } catch (ex) {",
											"        pm.expect.fail(\"Unable to create request JWT: \" + ex);",
											"    }",
											"",
											"    let consentRedirectUrl = pm.environment.get(\"url\") + \"/ui/index.html?response_type=code%20id_token\"",
											"    consentRedirectUrl += \"&scope=payments\"",
											"    consentRedirectUrl += \"&redirect_uri=\" + encodeURI(pm.environment.get(\"redirect_uri\"))",
											"    consentRedirectUrl += \"&client_id=\" + encodeURI(pm.environment.get(\"client_id\")) ",
											"    consentRedirectUrl += \"&request=\" + encodeURI(sResult)",
											"    consentRedirectUrl += \"&state=\" + state",
											"",
											"    console.log(\"Go to the following URL, complete the payment, and copy the `code` parameter from the final redirect url:\\n\" + consentRedirectUrl)",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"Permission\": \"Create\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"Reference1234\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"RequestedExecutionDateTime\": \"2025-12-01T14:15:22Z\",\n            \"CurrencyOfTransfer\": \"EUR\",\n            \"InstructedAmount\": {\n                \"Amount\": \"2.50\",\n                \"Currency\": \"EUR\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.IBAN\",\n                \"Identification\": \"DE05504000005040040066\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/international-scheduled-payment-consents",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-scheduled-payment-consents"
									]
								}
							},
							"response": [
								{
									"name": "International Scheduled Payment Consent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\"Data\":{\"Permission\":\"Create\",\"Initiation\":{\"InstructionIdentification\":\"Reference1234\",\"EndToEndIdentification\":\"E2E1234\",\"RequestedExecutionDateTime\":\"2022-10-01T14:15:22Z\",\"CurrencyOfTransfer\":\"GBP\",\"InstructedAmount\":{\"Amount\":\"10.0\",\"Currency\":\"GBP\"},\"CreditorAccount\":{\"SchemeName\":\"UK.OBIE.SortCodeAccountNumber\",\"Identification\":\"11223321325698\",\"Name\":\"Receiver Co.\"}}},\"Risk\":{\"PaymentContextCode\":\"BillPayment\"}}"
										},
										"url": {
											"raw": "{{auth_url}}/international-scheduled-payment-consents",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-scheduled-payment-consents"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-27T07:21:28.523356Z\",\n        \"CreationDateTime\": \"2022-09-27T07:21:28.523356Z\",\n        \"Permission\": \"Create\",\n        \"ConsentId\": \"4c31ba68-aea8-xxxx-xxxx-12349fa9a975\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"Reference1234\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"RequestedExecutionDateTime\": \"2022-10-01T14:15:22Z\",\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"InstructedAmount\": {\n                \"Amount\": \"12.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-scheduled-payment-consents/4c31ba68-aea8-xxxx-xxxx-12349fa9a975\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve International Scheduled Payment Consent",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/international-scheduled-payment-consents/{{consentId}}",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-scheduled-payment-consents",
										"{{consentId}}"
									]
								}
							},
							"response": [
								{
									"name": "Retrieve International Scheduled Payment Consent",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/international-scheduled-payment-consents/{consentId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-scheduled-payment-consents",
												"{consentId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-27T07:21:28.523356Z\",\n        \"CreationDateTime\": \"2022-09-27T07:21:28.523356Z\",\n        \"Permission\": \"Create\",\n        \"ConsentId\": \"4c31ba68-aea8-xxxx-xxxx-12349fa9a975\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"12.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"InstructionIdentification\": \"Reference1234\",\n            \"RequestedExecutionDateTime\": \"2022-10-01T14:15:22Z\"\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-scheduled-payment-consents/4c31ba68-aea8-xxxx-xxxx-12349fa9a975\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Create International Scheduled Payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Storing payment id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"internationalScheduledPaymentId\", jsonData.Data.InternationalScheduledPaymentId);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{payments_access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{consentId}}\",\n        \"Initiation\": {\n            \"InstructionIdentification\": \"Reference1234\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"RequestedExecutionDateTime\": \"2025-12-01T14:15:22Z\",\n            \"CurrencyOfTransfer\": \"EUR\",\n            \"InstructedAmount\": {\n                \"Amount\": \"2.50\",\n                \"Currency\": \"EUR\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.IBAN\",\n                \"Identification\": \"DE05504000005040040066\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/international-scheduled-payments",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-scheduled-payments"
									]
								}
							},
							"response": [
								{
									"name": "Create International Scheduled Payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\":{\"ConsentId\":\"50335ba3-xxxx-4874-xxxx-2191f1fe1114\",\"Initiation\":{\"InstructionIdentification\":\"Reference1234\",\"EndToEndIdentification\":\"E2E1234\",\"RequestedExecutionDateTime\":\"2022-10-01T14:15:22Z\",\"CurrencyOfTransfer\":\"GBP\",\"InstructedAmount\":{\"Amount\":\"12.0\",\"Currency\":\"GBP\"},\"CreditorAccount\":{\"SchemeName\":\"UK.OBIE.SortCodeAccountNumber\",\"Identification\":\"11223321325698\",\"Name\":\"Receiver Co.\"}}},\"Risk\":{\"PaymentContextCode\":\"BillPayment\"}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/international-scheduled-payments",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-scheduled-payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"InitiationPending\",\n        \"StatusUpdateDateTime\": \"2022-09-27T07:35:53.474112Z\",\n        \"CreationDateTime\": \"2022-09-27T07:35:53.474112Z\",\n        \"InternationalScheduledPaymentId\": \"12345678-a0de-466a-1234-e9fc413d0916\",\n        \"Permission\": \"Create\",\n        \"ConsentId\": \"14aee295-xxxx-4147-xxxx-a397c3e5ff9d\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"12.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"InstructionIdentification\": \"Reference1234\",\n            \"RequestedExecutionDateTime\": \"2022-10-01T14:15:22Z\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-scheduled-payments/12345678-a0de-466a-1234-e9fc413d0916\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Get funds confirmation for international scheduled payment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{payments_access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/international-scheduled-payment-consents/{{consentId}}/funds-confirmation",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-scheduled-payment-consents",
										"{{consentId}}",
										"funds-confirmation"
									]
								}
							},
							"response": [
								{
									"name": "Get funds confirmation for international scheduled payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/international-scheduled-payment-consents/{consentId}/funds-confirmation",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-scheduled-payment-consents",
												"{consentId}",
												"funds-confirmation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"FundsAvailableResult\": {\n            \"FundsAvailableDateTime\": \"2022-09-27T07:45:59.760463Z\",\n            \"FundsAvailable\": true\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-scheduled-payment-consents/0e3c0734-fb1c-4d9d-a275-123412341111/funds-confirmation\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve International Scheduled Payment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/international-scheduled-payments/:id",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-scheduled-payments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{internationalScheduledPaymentId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Retrieve International Scheduled Payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/international-scheduled-payments/{InternationalScheduledPaymentId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-scheduled-payments",
												"{InternationalScheduledPaymentId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"InitiationPending\",\n        \"StatusUpdateDateTime\": \"2022-09-27T07:35:53.474112Z\",\n        \"CreationDateTime\": \"2022-09-27T07:35:53.474112Z\",\n        \"InternationalScheduledPaymentId\": \"12345678-a0de-466a-1234-e9fc413d0916\",\n        \"Permission\": \"Create\",\n        \"ConsentId\": \"14aee295-xxxx-4147-xxxx-a397c3e5ff9d\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"12.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"EndToEndIdentification\": \"E2E1234\",\n            \"InstructionIdentification\": \"Reference1234\",\n            \"RequestedExecutionDateTime\": \"2022-10-01T14:15:22Z\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-scheduled-payments/12345678-a0de-466a-1234-e9fc413d0916\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "International Standing Orders",
					"item": [
						{
							"name": "International Standing Order Consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"navigator = {}",
											"window = {}",
											"",
											"pm.test(\"Storing consent id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"consentId\", jsonData.Data.ConsentId);",
											"});",
											"",
											"pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
											"    if (error) {",
											"        pm.expect.fail(error.message);",
											"    }",
											"    if (response.code !== 200) {",
											"        pm.expect.fail('Could not load external library.');",
											"    }",
											"",
											"    eval(response.text());",
											"",
											"    let private_key",
											"",
											"    try {",
											"        private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
											"    } catch(error) {",
											"        pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
											"    }",
											"",
											"    if(!['EC','RSA'].includes(private_key.type)){",
											"        pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
											"    }",
											"    ",
											"    const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
											"",
											"    var response = pm.response.json()",
											"    var consentId = response.Data.ConsentId",
											"    var state = Math.floor(Math.random() * 10**16)",
											"",
											"    const nbf = Math.floor(Date.now() / 1000)",
											"",
											"    var header = {",
											"        \"alg\": alg,",
											"        \"kid\": pm.environment.get(\"kid\")",
											"    }",
											"    var body = {",
											"        \"response_type\": \"code id_token\",",
											"        \"client_id\":pm.environment.get(\"client_id\"),",
											"        \"redirect_uri\": pm.environment.get(\"redirect_uri\"),",
											"        \"scope\": \"payments\",",
											"        \"state\": state,",
											"        \"aud\": pm.environment.get(\"auth_url\"),",
											"        \"nbf\": nbf,",
											"        \"exp\": nbf + 3000,",
											"        \"claims\": {",
											"            \"id_token\": {",
											"                \"openbanking_intent_id\": {",
											"                    \"value\": consentId",
											"                }",
											"            }",
											"        }",
											"        }",
											"",
											"    try {",
											"        sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
											"    } catch (ex) {",
											"        pm.expect.fail(\"Unable to create request JWT: \" + ex);",
											"    }",
											"",
											"    let consentRedirectUrl = pm.environment.get(\"url\") + \"/ui/index.html?response_type=code%20id_token\"",
											"    consentRedirectUrl += \"&scope=payments\"",
											"    consentRedirectUrl += \"&redirect_uri=\" + encodeURI(pm.environment.get(\"redirect_uri\"))",
											"    consentRedirectUrl += \"&client_id=\" + encodeURI(pm.environment.get(\"client_id\")) ",
											"    consentRedirectUrl += \"&request=\" + encodeURI(sResult)",
											"    consentRedirectUrl += \"&state=\" + state",
											"",
											"    console.log(\"Go to the following URL, complete the payment, and copy the `code` parameter from the final redirect url:\\n\" + consentRedirectUrl)",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"Permission\": \"Create\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentDateTime\": \"2025-12-01T14:15:22Z\",\n            \"CurrencyOfTransfer\": \"EUR\",\n            \"InstructedAmount\": {\n                \"Amount\": \"2.50\",\n                \"Currency\": \"EUR\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.IBAN\",\n                \"Identification\": \"DE05504000005040040066\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/international-standing-order-consents",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-standing-order-consents"
									]
								}
							},
							"response": [
								{
									"name": "International Standing Order Consent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"Permission\": \"Create\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentDateTime\": \"2022-10-01T14:15:22Z\",\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/international-standing-order-consents",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-standing-order-consents"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-27T08:20:12.498289Z\",\n        \"CreationDateTime\": \"2022-09-27T08:20:12.498289Z\",\n        \"Permission\": \"Create\",\n        \"ConsentId\": \"b918fd8a-xxx-xxx-xxx-27a984683bd1\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentDateTime\": \"2022-10-01T14:15:22Z\",\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-standing-order-consents/b918fd8a-xxx-xxx-xxx-27a984683bd1\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve International Standing Order Consent",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/international-standing-order-consents/{{consentId}}",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-standing-order-consents",
										"{{consentId}}"
									]
								}
							},
							"response": [
								{
									"name": "Retrieve International Standing Order Consent",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"url": {
											"raw": "{{auth_url}}/international-standing-order-consents/{consentId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-standing-order-consents",
												"{consentId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"AwaitingAuthorisation\",\n        \"StatusUpdateDateTime\": \"2022-09-27T08:20:12.498289Z\",\n        \"CreationDateTime\": \"2022-09-27T08:20:12.498289Z\",\n        \"Permission\": \"Create\",\n        \"ConsentId\": \"b918fd8a-xxx-xxx-xxx-27a984683bd1\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"FirstPaymentDateTime\": \"2022-10-01T14:15:22Z\"\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-standing-order-consents/b918fd8a-xxx-xxx-xxx-27a984683bd1\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Create International Standing Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Storing payment id\", function () {",
											"    pm.response.to.have.status(201);",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"internationalStandingOrderId\", jsonData.Data.InternationalStandingOrderId);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{payments_access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-jws-signature",
										"value": "{{jws_signature}}",
										"type": "text"
									},
									{
										"key": "x-idempotency-key",
										"value": "{{$randomUUID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{consentId}}\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentDateTime\": \"2025-12-01T14:15:22Z\",\n            \"CurrencyOfTransfer\": \"EUR\",\n            \"InstructedAmount\": {\n                \"Amount\": \"2.50\",\n                \"Currency\": \"EUR\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.IBAN\",\n                \"Identification\": \"DE05504000005040040066\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}"
								},
								"url": {
									"raw": "{{auth_url}}/international-standing-orders",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-standing-orders"
									]
								}
							},
							"response": [
								{
									"name": "Create International Standing Order",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{payments_access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"b918fd8a-xxx-xxx-xxx-27a984683bd1\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentDateTime\": \"2022-10-01T14:15:22Z\",\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"InstructedAmount\": {\n                \"Amount\": \"12.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/international-standing-orders",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-standing-orders"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"ConsentId\": \"b918fd8a-xxx-xxx-xxx-27a984683bd1\",\n        \"CreationDateTime\": \"2022-09-27T08:42:10.249638Z\",\n        \"Initiation\": {\n            \"CreditorAccount\": {\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\"\n            },\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"FirstPaymentDateTime\": \"2022-10-01T14:15:22Z\",\n            \"Frequency\": \"EvryDay\",\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"Reference\": \"Reference1234\"\n        },\n        \"InternationalStandingOrderId\": \"b3096891-1234-1234-ae1e-1c8a6fbc5874\",\n        \"Permission\": \"Create\",\n        \"Status\": \"InitiationCompleted\",\n        \"StatusUpdateDateTime\": \"2022-09-27T08:42:10.249638Z\"\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-standing-orders/b3096891-1234-1234-ae1e-1c8a6fbc5874\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve International Standing Order",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-fapi-financial-id",
										"value": "001580000103UAvAAM"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{auth_url}}/international-standing-orders/:id",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"international-standing-orders",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{internationalStandingOrderId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Retrieve International Standing Order",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "x-fapi-financial-id",
												"value": "001580000103UAvAAM"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-jws-signature",
												"value": "{{jws_signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "123"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"b918fd8a-xxx-xxx-xxx-27a984683bd1\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"FirstPaymentDateTime\": \"2022-10-01T14:15:22Z\",\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"InstructedAmount\": {\n                \"Amount\": \"12.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CreditorAccount\": {\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\",\n                \"Name\": \"Receiver Co.\"\n            }\n        }\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillPayment\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{auth_url}}/international-standing-orders/{InternationalStandingOrderId}",
											"host": [
												"{{auth_url}}"
											],
											"path": [
												"international-standing-orders",
												"{InternationalStandingOrderId}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"Data\": {\n        \"Status\": \"InitiationCompleted\",\n        \"StatusUpdateDateTime\": \"2022-09-27T08:42:10.249638Z\",\n        \"CreationDateTime\": \"2022-09-27T08:42:10.249638Z\",\n        \"Permission\": \"Create\",\n        \"InternationalStandingOrderId\": \"12345678-54c1-45ff-xxxx-1c8a6fbc5874\",\n        \"ConsentId\": \"b918fd8a-xxx-xxx-xxx-27a984683bd1\",\n        \"Initiation\": {\n            \"Frequency\": \"EvryDay\",\n            \"Reference\": \"Reference1234\",\n            \"CreditorAccount\": {\n                \"Name\": \"Receiver Co.\",\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\n                \"Identification\": \"11223321325698\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.0\",\n                \"Currency\": \"GBP\"\n            },\n            \"CurrencyOfTransfer\": \"GBP\",\n            \"FirstPaymentDateTime\": \"2022-10-01T14:15:22Z\"\n        }\n    },\n    \"Links\": {\n        \"Self\": \"https://oba-auth.revolut.com/international-standing-orders/12345678-54c1-45ff-xxxx-1c8a6fbc5874\"\n    },\n    \"Meta\": {\n        \"TotalPages\": 1\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Storing access token\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "payments",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth_url}}/token",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": [
						{
							"name": "Get Access Token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "payments",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{auth_url}}/token",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJraWQi...REDACTED_JWT...DvTWUSVpivBpYwH6r9gw\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 2399\n}"
						}
					]
				},
				{
					"name": "Get Payment Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Storing access token\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"payments_access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "code",
									"value": "",
									"description": "The code obtained from the URL after the approved consent redirection.",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth_url}}/token",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": [
						{
							"name": "Get Payment Access Token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "code",
											"value": "",
											"description": "The code obtained from the URL after the approved consent redirection.",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{auth_url}}/token",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"access_token\": \"oa_sand_tP1Nofi1ixsRfBmVBtVPdIVN0J5x91imqmheQIWTS5s\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 7775999,\n    \"id_token\": \"eyJraWQi...REDACTED_JWT...DvTWUSVpivBpYwH6r9gw\"\n}"
						}
					]
				}
			],
			"description": "This section contains all the PISP requests as for the Open Banking specifications.\n\nYou can find more information in ourÂ [Tutorial Documentation](https://developer.revolut.com/docs/build-banking-apps/tutorials/initiate-your-first-payment).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"navigator={}",
							"window={}",
							"",
							"function interpolate (value) {",
							"    const {Property} = require('postman-collection');",
							"    return Property.replaceSubstitutions(value, pm.variables.toObject());",
							"}",
							"",
							"if( pm.request.headers.has(\"x-jws-signature\")) {",
							"",
							"    for(required_var of [\"kid\",\"jwk_domain\",\"private_key\"]){",
							"        if(!pm.environment.has(required_var)){",
							"            pm.expect.fail('Cannot generate x-jws-signature: missing \"'+required_var+'\" environment variable.')",
							"        }",
							"    }",
							"    ",
							"    pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
							"        if (error) {",
							"            pm.expect.fail(error.message);",
							"        }",
							"        if (response.code !== 200) {",
							"            pm.expect.fail('Could not load external library.');",
							"        }",
							"        ",
							"        eval(response.text());",
							"",
							"        let private_key",
							"",
							"        try {",
							"            private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
							"        } catch(error) {",
							"            pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
							"        }",
							"",
							"        if(!['EC','RSA'].includes(private_key.type)){",
							"            pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
							"        }",
							"",
							"        const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
							"",
							"        var header = {",
							"            \"typ\": \"JOSE\",",
							"            \"alg\": alg,",
							"            \"kid\": pm.environment.get(\"kid\"),",
							"            \"crit\": [",
							"                \"http://openbanking.org.uk/tan\"",
							"            ],",
							"            \"http://openbanking.org.uk/tan\": pm.environment.get(\"jwk_domain\")",
							"        };",
							"        var body = interpolate(pm.request.body.toString())",
							"        ",
							"        try {",
							"            sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
							"            ",
							"            pm.environment.set(\"jws_signature\", sResult.replace(/\\..+\\./, '..'));",
							"        } catch (ex) {",
							"            console.error(\"Error: \" + ex);",
							"            pm.expect.fail(\"Error generating x-jws-signature: \" + ex)",
							"        }",
							"    });",
							"}"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Retrieve all webhooks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/webhooks",
							"host": [
								"{{url}}"
							],
							"path": [
								"webhooks"
							]
						}
					},
					"response": [
						{
							"name": "Retrieve all webhooks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/webhooks",
									"host": [
										"{{url}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "[\n    {\n        \"Topic\": \"draftpayments/transfers\",\n        \"Version\": 1,\n        \"Uri\": \"https://example.com\"\n    }\n]"
						}
					]
				},
				{
					"name": "Subscribe notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Topic\": \"tokens\",\n    \"Version\": 1,\n    \"Uri\": \"https://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/webhooks/subscribe",
							"host": [
								"{{url}}"
							],
							"path": [
								"webhooks",
								"subscribe"
							]
						}
					},
					"response": [
						{
							"name": "Subscribe notification",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Topic\": \"draftpayments/transfers\",\n    \"Version\": 1,\n    \"Uri\": \"https://example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/webhooks/subscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"webhooks",
										"subscribe"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "[\n    {\n        \"Topic\": \"draftpayments/transfers\",\n        \"Version\": 1,\n        \"Uri\": \"https://example.com\"\n    }\n]"
						}
					]
				},
				{
					"name": "Unsubscribe notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Topic\": \"draftpayments/transfers\",\n    \"Version\": 1,\n    \"Uri\": \"https://revolut_test.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/webhooks/unsubscribe",
							"host": [
								"{{url}}"
							],
							"path": [
								"webhooks",
								"unsubscribe"
							]
						}
					},
					"response": [
						{
							"name": "Unsubscribe notification",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Topic\": \"draftpayments/transfers\",\n    \"Version\": 1,\n    \"Uri\": \"https://revolut_test.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/webhooks/unsubscribe",
									"host": [
										"{{url}}"
									],
									"path": [
										"webhooks",
										"unsubscribe"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "[]"
						}
					]
				}
			],
			"description": "This section contains all the endpoints to manage your Webhooks in Open Banking.\n\nYou can obtain more information in our [Tutorial Documentation](https://developer.revolut.com/docs/build-banking-apps/tutorials/work-with-webhooks)."
		},
		{
			"name": "Applications (DCR)",
			"item": [
				{
					"name": "Get Distinguished Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Storing access token\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"tls_client_auth_dn\", jsonData.tls_client_auth_dn);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auth_url}}/distinguished-name",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"distinguished-name"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"navigator={}",
									"window={}",
									"",
									"function interpolate (value) {",
									"    const {Property} = require('postman-collection');",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject());",
									"}",
									"",
									"for(required_var of [\"kid\",\"jwk_domain\",\"private_key\",\"redirect_uri\",\"jwks_endpoint\",\"tls_client_auth_dn\"]){",
									"    if(!pm.environment.has(required_var)){",
									"        pm.expect.fail('Cannot generate JWT: missing \"'+required_var+'\" environment variable.')",
									"    }",
									"}",
									"",
									"pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
									"    if (error) {",
									"        pm.expect.fail(error.message);",
									"    }",
									"    if (response.code !== 200) {",
									"        pm.expect.fail('Could not load external library.');",
									"    }",
									"    ",
									"    eval(response.text());",
									"",
									"    let private_key",
									"",
									"    try {",
									"        private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
									"    } catch(error) {",
									"        pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
									"    }",
									"",
									"    if(!['EC','RSA'].includes(private_key.type)){",
									"        pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
									"    }",
									"    ",
									"    const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
									"",
									"    var body = interpolate(pm.request.body.toString())",
									"",
									"    var json_body = JSON.parse(body)",
									"",
									"    var ssa_header = {",
									"        \"alg\": \"none\"",
									"    }",
									"    ",
									"    console.log(\"Calculating self signed software statement assertion...\")",
									"",
									"    console.log(\"SSA header:\\n\" + JSON.stringify(ssa_header,null,2))",
									"",
									"    var ssa_payload = json_body.software_statement",
									"",
									"    console.log(\"SSA payload:\\n\"+ JSON.stringify(ssa_payload, null, 2))",
									"",
									"    var ssa = btoa(JSON.stringify(ssa_header)) + '.' + btoa(JSON.stringify(ssa_payload)) + '.'",
									"    ",
									"    console.log(\"Self signed SSA:\\n\" + ssa)",
									"",
									"    json_body.software_statement = ssa",
									"",
									"    var body = JSON.stringify(json_body)",
									"",
									"    console.log(\"Calculating request JWT...\")",
									"",
									"    var header = {",
									"        \"alg\": alg,",
									"        \"kid\": pm.environment.get(\"kid\")",
									"    };",
									"    ",
									"    console.log(\"JWT header:\\n\" + JSON.stringify(header, null, 2))",
									"    console.log(\"JWT payload:\\n\" + JSON.stringify(JSON.parse(body), null, 2))",
									"    ",
									"    try {",
									"        sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
									"        console.log(\"Request JWT:\\n\" + sResult)",
									"        pm.request.body.update(sResult)",
									"    } catch (ex) {",
									"        pm.expect.fail(\"Error generating JWT: \" + ex)",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"iss\": \"example.com\",\n    \"aud\": \"revolut\",\n    \"exp\": 1899796254, \n    \"iat\": {{$timestamp}},\n    \"id_token_signed_response_alg\": \"PS256\",\n    \"request_object_signing_alg\": \"PS256\",\n    \"token_endpoint_auth_method\": \"tls_client_auth\",\n    \"application_type\": \"web\",\n    \"redirect_uris\": [\n        \"{{redirect_uri}}\"\n    ],\n    \"scope\": [\n        \"openid\",\n        \"payments\",\n        \"accounts\"\n    ],\n    \"tls_client_auth_dn\": \"{{tls_client_auth_dn}}\",\n    \"software_statement\":{\n        \"software_client_name\": \"DCR Application {{$timestamp}}\",\n        \"org_jwks_endpoint\": \"{{jwks_endpoint}}\",\n        \"software_redirect_uris\": [\"{{redirect_uri}}\"]\n    }\n}   ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{auth_url}}/register",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"register"
							]
						},
						"description": "Note that for both the Register Application and the Update Application endpoints, the endpoint expects a JWT in plaintext. For simplicity, this collection automatically calculates both the JWT and the Software Statement Assertion (SSA) that is contained in the JWT. Therefore you only need to enter the information as a JSON in the payload."
					},
					"response": []
				},
				{
					"name": "Get Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Storing access token\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{auth_url}}/token",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"token"
							]
						},
						"description": "Get the details of the account access consent as described in the Open BankingÂ [official documentation](https://openbanking.atlassian.net/wiki/spaces/DZ/pages/999622968/Account+and+Transaction+API+Specification+-+v3.1.1)."
					},
					"response": []
				},
				{
					"name": "Get Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Storing access token\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"authorization_access_token\", jsonData.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false,
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{auth_url}}/register/{{client_id}}",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"register",
								"{{client_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"navigator={}",
									"window={}",
									"",
									"function interpolate (value) {",
									"    const {Property} = require('postman-collection');",
									"    return Property.replaceSubstitutions(value, pm.variables.toObject());",
									"}",
									"",
									"for(required_var of [\"kid\",\"jwk_domain\",\"private_key\",\"redirect_uri\",\"jwks_endpoint\",\"tls_client_auth_dn\"]){",
									"    if(!pm.environment.has(required_var)){",
									"        pm.expect.fail('Cannot generate JWT: missing \"'+required_var+'\" environment variable.')",
									"    }",
									"}",
									"",
									"pm.sendRequest(\"http://cdnjs.cloudflare.com/ajax/libs/jsrsasign/10.5.27/jsrsasign-all-min.js\", (error, response) => {",
									"    if (error) {",
									"        pm.expect.fail(error.message);",
									"    }",
									"    if (response.code !== 200) {",
									"        pm.expect.fail('Could not load external library.');",
									"    }",
									"    ",
									"    eval(response.text());",
									"",
									"    let private_key",
									"",
									"    try {",
									"        private_key = KEYUTIL.getKeyFromPlainPrivatePKCS8PEM(pm.environment.get(\"private_key\"))",
									"    } catch(error) {",
									"        pm.expect.fail('Unable to parse private_key. Only use PEM format signing keys.')",
									"    }",
									"",
									"    if(!['EC','RSA'].includes(private_key.type)){",
									"        pm.expect.fail('Invalid private_key. Only EC or RSA keys are valid.')",
									"    }",
									"",
									"    const alg = private_key.type === 'RSA' ? 'PS256' : 'ES256'",
									"",
									"    var body = interpolate(pm.request.body.toString())",
									"",
									"    var json_body = JSON.parse(body)",
									"",
									"    var ssa_header = {",
									"        \"alg\": \"none\"",
									"    }",
									"    ",
									"    console.log(\"Calculating self signed software statement assertion...\")",
									"",
									"    console.log(\"SSA header:\\n\" + JSON.stringify(ssa_header,null,2))",
									"",
									"    var ssa_payload = json_body.software_statement",
									"",
									"    console.log(\"SSA payload:\\n\"+ JSON.stringify(ssa_payload, null, 2))",
									"",
									"    var ssa = btoa(JSON.stringify(ssa_header)) + '.' + btoa(JSON.stringify(ssa_payload)) + '.'",
									"    ",
									"    console.log(\"Self signed SSA:\\n\" + ssa)",
									"",
									"    json_body.software_statement = ssa",
									"",
									"    var body = JSON.stringify(json_body)",
									"",
									"    console.log(\"Calculating request JWT...\")",
									"",
									"    var header = {",
									"        \"alg\": alg,",
									"        \"kid\": pm.environment.get(\"kid\")",
									"    };",
									"    ",
									"    console.log(\"JWT header:\\n\" + JSON.stringify(header, null, 2))",
									"    console.log(\"JWT payload:\\n\" + JSON.stringify(JSON.parse(body), null, 2))",
									"    ",
									"    try {",
									"        sResult = KJUR.jws.JWS.sign(alg, header, body, pm.environment.get(\"private_key\"));",
									"        console.log(\"Request JWT:\\n\" + sResult)",
									"        pm.request.body.update(sResult)",
									"    } catch (ex) {",
									"        pm.expect.fail(\"Error generating JWT: \" + ex)",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"iss\": \"example.com\",\n    \"aud\": \"revolut\",\n    \"exp\": 1899796254, \n    \"iat\": {{$timestamp}},\n    \"id_token_signed_response_alg\": \"PS256\",\n    \"request_object_signing_alg\": \"PS256\",\n    \"token_endpoint_auth_method\": \"tls_client_auth\",\n    \"application_type\": \"web\",\n    \"redirect_uris\": [\n        \"{{redirect_uri}}\"\n    ],\n    \"scope\": [\n        \"openid\",\n        \"payments\",\n        \"accounts\"\n    ],\n    \"tls_client_auth_dn\": \"{{tls_client_auth_dn}}\",\n    \"software_statement\":{\n        \"software_client_name\": \"DCR Application {{$timestamp}}\",\n        \"org_jwks_endpoint\": \"{{jwks_endpoint}}\",\n        \"software_redirect_uris\": [\"{{redirect_uri}}\"]\n    }\n}   ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{auth_url}}/register/{{client_id}}",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"register",
								"{{client_id}}"
							]
						},
						"description": "Note that for both the Register Application and the Update Application endpoints, the endpoint expects a JWT in plaintext. For simplicity, this collection automatically calculates both the JWT and the Software Statement Assertion (SSA) that is contained in the JWT. Therefore you only need to enter the information as a JSON in the payload."
					},
					"response": []
				},
				{
					"name": "Delete Application",
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "client_id",
								"value": ""
							}
						],
						"url": {
							"raw": "{{auth_url}}/register/:client_id",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"register",
								":client_id"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "",
									"description": "ClientId to delete."
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "This section contains all the endpoints used for application management via DCR.\n\nYou can obtain more information in our [Tutorial Documentation](https://developer.revolut.com/docs/guides/build-banking-apps/register-your-application-using-dcr/).\n\nNote that for both the Register Application and the Update Application endpoints, the endpoint expects a JWT in plaintext. For simplicity, this collection automatically calculates both the JWT and the Software Statement Assertion (SSA) that is contained in the JWT. Therefore you only need to enter the information as a JSON in the payload.\n\nIf you want to see the logic which generates the SSA and JWT, feel free to check the Pre-request Scripts or the console to see the steps that are executed in the background."
		}
	]
}