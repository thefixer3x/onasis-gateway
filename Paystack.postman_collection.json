{
	"info": {
		"_postman_id": "e0519972-5c06-4dc1-889f-08e93e9bc6b0",
		"name": "Paystack",
		"description": "The OpenAPI specification of the Paystack API that merchants and developers can harness to build financial solutions in Africa.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43116137",
		"_collection_link": "https://www.postman.com/paystack-developers/paystack-api/collection/vtizh49/paystack?action=share&source=collection_link&creator=43116137"
	},
	"item": [
		{
			"name": "transaction",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Fetch Transaction",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) The ID of the transaction to fetch"
										}
									]
								}
							},
							"response": [
								{
									"name": "Resource created",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) The ID of the transaction to fetch"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) The ID of the transaction to fetch"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) The ID of the transaction to fetch"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) The ID of the transaction to fetch"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Transaction Event",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/:id/event",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										":id",
										"event"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Resource created",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id/event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id",
												"event"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id/event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id",
												"event"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id/event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id",
												"event"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id/event",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id",
												"event"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Transaction Session",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/:id/session",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										":id",
										"session"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Resource created",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id/session",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id",
												"session"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id/session",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id",
												"session"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id/session",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id",
												"session"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transaction/:id/session",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transaction",
												":id",
												"session"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Initialize Transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "person@email.com",
									"description": "(Required) Customer's email address"
								},
								{
									"key": "amount",
									"value": "10247",
									"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
								},
								{
									"key": "currency",
									"value": "NGN",
									"description": "The transaction currency"
								},
								{
									"key": "reference",
									"value": "123.uniq=ref-",
									"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
								},
								{
									"key": "callback_url",
									"value": "https://example.com/",
									"description": "Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction"
								},
								{
									"key": "plan",
									"value": "PLN_123wede",
									"description": "If transaction is to create a subscription to a predefined plan, provide plan code here. \nThis would invalidate the value provided in amount"
								},
								{
									"key": "invoice_limit",
									"value": "10",
									"description": "Number of times to charge customer during subscription to plan"
								},
								{
									"key": "metadata",
									"value": "{\"cart_id\":398,\"custom_fields\":[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]}",
									"description": "Stringified JSON object of custom data"
								},
								{
									"key": "channels",
									"value": "mobile_money",
									"description": "An array of payment channels to control what channels you want to make available to the user to make a payment with"
								},
								{
									"key": "split_code",
									"value": "SPL_123AbZ",
									"description": "The split code of the transaction split"
								},
								{
									"key": "subaccount",
									"value": "ACCT_23abcdefgh",
									"description": "The code for the subaccount that owns the payment"
								},
								{
									"key": "transaction_charge",
									"value": "12300",
									"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
								},
								{
									"key": "bearer",
									"value": "subaccount",
									"description": "The bearer of the transaction charge"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/initialize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"initialize"
							]
						},
						"description": "Create a new transaction"
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "person@email.com",
											"description": "(Required) Customer's email address"
										},
										{
											"key": "amount",
											"value": "10247",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "The transaction currency"
										},
										{
											"key": "reference",
											"value": "123.uniq=ref-",
											"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
										},
										{
											"key": "callback_url",
											"value": "https://example.com/",
											"description": "Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction"
										},
										{
											"key": "plan",
											"value": "PLN_123wede",
											"description": "If transaction is to create a subscription to a predefined plan, provide plan code here. \nThis would invalidate the value provided in amount"
										},
										{
											"key": "invoice_limit",
											"value": "10",
											"description": "Number of times to charge customer during subscription to plan"
										},
										{
											"key": "metadata",
											"value": "{\"cart_id\":398,\"custom_fields\":[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]}",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "channels",
											"value": "mobile_money",
											"description": "An array of payment channels to control what channels you want to make available to the user to make a payment with"
										},
										{
											"key": "split_code",
											"value": "SPL_123AbZ",
											"description": "The split code of the transaction split"
										},
										{
											"key": "subaccount",
											"value": "ACCT_23abcdefgh",
											"description": "The code for the subaccount that owns the payment"
										},
										{
											"key": "transaction_charge",
											"value": "12300",
											"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
										},
										{
											"key": "bearer",
											"value": "subaccount",
											"description": "The bearer of the transaction charge"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/initialize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"initialize"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Authorization URL created\",\n  \"data\": {\n    \"authorization_url\": \"https://checkout.paystack.com/spnajmit2hgi2c1\",\n    \"access_code\": \"spandaoende\",\n    \"reference\": \"ad123ada\"\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "person@email.com",
											"description": "(Required) Customer's email address"
										},
										{
											"key": "amount",
											"value": "10247",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "The transaction currency"
										},
										{
											"key": "reference",
											"value": "123.uniq=ref-",
											"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
										},
										{
											"key": "callback_url",
											"value": "https://example.com/",
											"description": "Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction"
										},
										{
											"key": "plan",
											"value": "PLN_123wede",
											"description": "If transaction is to create a subscription to a predefined plan, provide plan code here. \nThis would invalidate the value provided in amount"
										},
										{
											"key": "invoice_limit",
											"value": "10",
											"description": "Number of times to charge customer during subscription to plan"
										},
										{
											"key": "metadata",
											"value": "{\"cart_id\":398,\"custom_fields\":[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]}",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "channels",
											"value": "mobile_money",
											"description": "An array of payment channels to control what channels you want to make available to the user to make a payment with"
										},
										{
											"key": "split_code",
											"value": "SPL_123AbZ",
											"description": "The split code of the transaction split"
										},
										{
											"key": "subaccount",
											"value": "ACCT_23abcdefgh",
											"description": "The code for the subaccount that owns the payment"
										},
										{
											"key": "transaction_charge",
											"value": "12300",
											"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
										},
										{
											"key": "bearer",
											"value": "subaccount",
											"description": "The bearer of the transaction charge"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/initialize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"initialize"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "person@email.com",
											"description": "(Required) Customer's email address"
										},
										{
											"key": "amount",
											"value": "10247",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "The transaction currency"
										},
										{
											"key": "reference",
											"value": "123.uniq=ref-",
											"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
										},
										{
											"key": "callback_url",
											"value": "https://example.com/",
											"description": "Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction"
										},
										{
											"key": "plan",
											"value": "PLN_123wede",
											"description": "If transaction is to create a subscription to a predefined plan, provide plan code here. \nThis would invalidate the value provided in amount"
										},
										{
											"key": "invoice_limit",
											"value": "10",
											"description": "Number of times to charge customer during subscription to plan"
										},
										{
											"key": "metadata",
											"value": "{\"cart_id\":398,\"custom_fields\":[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]}",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "channels",
											"value": "mobile_money",
											"description": "An array of payment channels to control what channels you want to make available to the user to make a payment with"
										},
										{
											"key": "split_code",
											"value": "SPL_123AbZ",
											"description": "The split code of the transaction split"
										},
										{
											"key": "subaccount",
											"value": "ACCT_23abcdefgh",
											"description": "The code for the subaccount that owns the payment"
										},
										{
											"key": "transaction_charge",
											"value": "12300",
											"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
										},
										{
											"key": "bearer",
											"value": "subaccount",
											"description": "The bearer of the transaction charge"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/initialize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"initialize"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Verify Transaction",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/verify/:reference",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"verify",
								":reference"
							],
							"variable": [
								{
									"key": "reference",
									"value": "consectetur nulla nisi",
									"description": "(Required) The transaction reference to verify"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/verify/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"verify",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) The transaction reference to verify"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/verify/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"verify",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) The transaction reference to verify"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/verify/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"verify",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) The transaction reference to verify"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/verify/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"verify",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) The transaction reference to verify"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch Transaction Timeline",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/timeline/:id_or_reference",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"timeline",
								":id_or_reference"
							],
							"variable": [
								{
									"key": "id_or_reference",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/timeline/:id_or_reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"timeline",
										":id_or_reference"
									],
									"variable": [
										{
											"key": "id_or_reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/timeline/:id_or_reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"timeline",
										":id_or_reference"
									],
									"variable": [
										{
											"key": "id_or_reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/timeline/:id_or_reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"timeline",
										":id_or_reference"
									],
									"variable": [
										{
											"key": "id_or_reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/timeline/:id_or_reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"timeline",
										":id_or_reference"
									],
									"variable": [
										{
											"key": "id_or_reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Transaction Totals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/totals?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"totals"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/totals?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"totals"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/totals?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"totals"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/totals?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"totals"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/totals?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"totals"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Export Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/export?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"export"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/export?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/export?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/export?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transaction/export?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Charge Authorization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "person@email.com",
									"description": "(Required) Customer's email address used during the first transaction"
								},
								{
									"key": "amount",
									"value": "10247",
									"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
								},
								{
									"key": "authorization_code",
									"value": "AUTH_CODE",
									"description": "(Required) Valid authorization code to charge"
								},
								{
									"key": "reference",
									"value": "123.uniq=ref-2",
									"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
								},
								{
									"key": "currency",
									"value": "NGN",
									"description": "The transaction currency"
								},
								{
									"key": "cart_id",
									"value": "398",
									"description": "Stringified JSON object of custom data"
								},
								{
									"key": "custom_fields",
									"value": "[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]",
									"description": "Stringified JSON object of custom data"
								},
								{
									"key": "split_code",
									"value": "SPL_123AbZ",
									"description": "The split code of the transaction split"
								},
								{
									"key": "subaccount",
									"value": "ACCT_23abcdefgh",
									"description": "The code for the subaccount that owns the payment"
								},
								{
									"key": "transaction_charge",
									"value": "12300",
									"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
								},
								{
									"key": "bearer",
									"value": "subaccount",
									"description": "The bearer of the transaction charge"
								},
								{
									"key": "queue",
									"value": "true",
									"description": "If you are making a scheduled charge call, it is a good idea to queue them so the processing system does not get overloaded causing transaction processing errors."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/charge_authorization",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"charge_authorization"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "person@email.com",
											"description": "(Required) Customer's email address used during the first transaction"
										},
										{
											"key": "amount",
											"value": "10247",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "authorization_code",
											"value": "AUTH_CODE",
											"description": "(Required) Valid authorization code to charge"
										},
										{
											"key": "reference",
											"value": "123.uniq=ref-2",
											"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "The transaction currency"
										},
										{
											"key": "cart_id",
											"value": "398",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "custom_fields",
											"value": "[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "split_code",
											"value": "SPL_123AbZ",
											"description": "The split code of the transaction split"
										},
										{
											"key": "subaccount",
											"value": "ACCT_23abcdefgh",
											"description": "The code for the subaccount that owns the payment"
										},
										{
											"key": "transaction_charge",
											"value": "12300",
											"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
										},
										{
											"key": "bearer",
											"value": "subaccount",
											"description": "The bearer of the transaction charge"
										},
										{
											"key": "queue",
											"value": "true",
											"description": "If you are making a scheduled charge call, it is a good idea to queue them so the processing system does not get overloaded causing transaction processing errors."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/charge_authorization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"charge_authorization"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Charge attempted\",\n  \"data\": {\n    \"amount\": 500000,\n    \"currency\": \"NGN\",\n    \"reference\": \"123.uniq=ref-2\",\n    \"metadata\": \"cart_id:398, custom_fields:[{}]\",\n    \"split_code\": \"SPL_123AbZ\",\n    \"subaccount\": \"ACCT_23abcdefgh\"\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "person@email.com",
											"description": "(Required) Customer's email address used during the first transaction"
										},
										{
											"key": "amount",
											"value": "10247",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "authorization_code",
											"value": "AUTH_CODE",
											"description": "(Required) Valid authorization code to charge"
										},
										{
											"key": "reference",
											"value": "123.uniq=ref-2",
											"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "The transaction currency"
										},
										{
											"key": "cart_id",
											"value": "398",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "custom_fields",
											"value": "[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "split_code",
											"value": "SPL_123AbZ",
											"description": "The split code of the transaction split"
										},
										{
											"key": "subaccount",
											"value": "ACCT_23abcdefgh",
											"description": "The code for the subaccount that owns the payment"
										},
										{
											"key": "transaction_charge",
											"value": "12300",
											"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
										},
										{
											"key": "bearer",
											"value": "subaccount",
											"description": "The bearer of the transaction charge"
										},
										{
											"key": "queue",
											"value": "true",
											"description": "If you are making a scheduled charge call, it is a good idea to queue them so the processing system does not get overloaded causing transaction processing errors."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/charge_authorization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"charge_authorization"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "person@email.com",
											"description": "(Required) Customer's email address used during the first transaction"
										},
										{
											"key": "amount",
											"value": "10247",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "authorization_code",
											"value": "AUTH_CODE",
											"description": "(Required) Valid authorization code to charge"
										},
										{
											"key": "reference",
											"value": "123.uniq=ref-2",
											"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "The transaction currency"
										},
										{
											"key": "cart_id",
											"value": "398",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "custom_fields",
											"value": "[{\"display_name\":\"Invoice ID\",\"variable_name\":\"Invoice ID\",\"value\":209},{\"display_name\":\"Cart Items\",\"variable_name\":\"cart_items\",\"value\":\"3 bananas, 12 mangoes\"}]",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "split_code",
											"value": "SPL_123AbZ",
											"description": "The split code of the transaction split"
										},
										{
											"key": "subaccount",
											"value": "ACCT_23abcdefgh",
											"description": "The code for the subaccount that owns the payment"
										},
										{
											"key": "transaction_charge",
											"value": "12300",
											"description": "A flat fee to charge the subaccount for a transaction. \nThis overrides the split percentage set when the subaccount was created"
										},
										{
											"key": "bearer",
											"value": "subaccount",
											"description": "The bearer of the transaction charge"
										},
										{
											"key": "queue",
											"value": "true",
											"description": "If you are making a scheduled charge call, it is a good idea to queue them so the processing system does not get overloaded causing transaction processing errors."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/charge_authorization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"charge_authorization"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Partial Debit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "person@email.com",
									"description": "(Required) Customer's email address"
								},
								{
									"key": "amount",
									"value": "10247",
									"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
								},
								{
									"key": "authorization_code",
									"value": "AUTH_CODE",
									"description": "(Required) Valid authorization code to charge"
								},
								{
									"key": "currency",
									"value": "ZAR",
									"description": "(Required) The transaction currency"
								},
								{
									"key": "reference",
									"value": "123.uniq=ref-3",
									"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
								},
								{
									"key": "at_least",
									"value": "5500",
									"description": "Minimum amount to charge"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/partial_debit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"partial_debit"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "person@email.com",
											"description": "(Required) Customer's email address"
										},
										{
											"key": "amount",
											"value": "10247",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "authorization_code",
											"value": "AUTH_CODE",
											"description": "(Required) Valid authorization code to charge"
										},
										{
											"key": "currency",
											"value": "ZAR",
											"description": "(Required) The transaction currency"
										},
										{
											"key": "reference",
											"value": "123.uniq=ref-3",
											"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
										},
										{
											"key": "at_least",
											"value": "5500",
											"description": "Minimum amount to charge"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/partial_debit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"partial_debit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Charge attempted\",\n  \"data\": {\n    \"amount\": 10247,\n    \"currency\": \"NGN\",\n    \"transaction_date\": \"2022-09-22T07:36:03.000Z\",\n    \"status\": \"success\",\n    \"reference\": \"dycmjmd23f1hygq\",\n    \"domain\": \"test\",\n    \"metadata\": \"\",\n    \"gateway_response\": \"Approved\",\n    \"message\": null,\n    \"channel\": \"card\",\n    \"ip_address\": null,\n    \"log\": null,\n    \"fees\": 52,\n    \"authorization\": {\n      \"authorization_code\": \"AUTH_15qn6qmeip\",\n      \"bin\": \"408408\",\n      \"last4\": \"4081\",\n      \"exp_month\": \"12\",\n      \"exp_year\": \"2030\",\n      \"channel\": \"card\",\n      \"card_type\": \"visa \",\n      \"bank\": \"TEST BANK\",\n      \"country_code\": \"NG\",\n      \"brand\": \"visa\",\n      \"reusable\": true,\n      \"signature\": \"SIG_yEXu7dLBeqG0kU7g95Ke\",\n      \"account_name\": null\n    },\n    \"customer\": {\n      \"id\": 54219771,\n      \"first_name\": null,\n      \"last_name\": null,\n      \"email\": \"some.other@body.com\",\n      \"customer_code\": \"CUS_toq66lmva87v66g\",\n      \"phone\": null,\n      \"metadata\": null,\n      \"risk_action\": \"default\",\n      \"international_format_phone\": null\n    },\n    \"plan\": 0,\n    \"requested_amount\": 10247,\n    \"id\": 2122110499\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "person@email.com",
											"description": "(Required) Customer's email address"
										},
										{
											"key": "amount",
											"value": "10247",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "authorization_code",
											"value": "AUTH_CODE",
											"description": "(Required) Valid authorization code to charge"
										},
										{
											"key": "currency",
											"value": "ZAR",
											"description": "(Required) The transaction currency"
										},
										{
											"key": "reference",
											"value": "123.uniq=ref-3",
											"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
										},
										{
											"key": "at_least",
											"value": "5500",
											"description": "Minimum amount to charge"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/partial_debit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"partial_debit"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "person@email.com",
											"description": "(Required) Customer's email address"
										},
										{
											"key": "amount",
											"value": "10247",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "authorization_code",
											"value": "AUTH_CODE",
											"description": "(Required) Valid authorization code to charge"
										},
										{
											"key": "currency",
											"value": "ZAR",
											"description": "(Required) The transaction currency"
										},
										{
											"key": "reference",
											"value": "123.uniq=ref-3",
											"description": "Unique transaction reference. Only -, ., = and alphanumeric characters allowed."
										},
										{
											"key": "at_least",
											"value": "5500",
											"description": "Minimum amount to charge"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transaction/partial_debit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transaction",
										"partial_debit"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "split",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "subaccount",
							"item": [
								{
									"name": "Add Subaccount to Split",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "subaccount",
													"value": "ACCT_03tb3u7jgwb4v",
													"description": "Subaccount code of the customer or partner"
												},
												{
													"key": "share",
													"value": "102",
													"description": "The percentage or flat quota of the customer or partner"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/split/:id/subaccount/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"split",
												":id",
												"subaccount",
												"add"
											],
											"variable": [
												{
													"key": "id",
													"value": "application/json",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Request successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "subaccount",
															"value": "ACCT_03tb3u7jgwb4v",
															"description": "Subaccount code of the customer or partner"
														},
														{
															"key": "share",
															"value": "102",
															"description": "The percentage or flat quota of the customer or partner"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/split/:id/subaccount/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"split",
														":id",
														"subaccount",
														"add"
													],
													"variable": [
														{
															"key": "id",
															"value": "application/json",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
										},
										{
											"name": "Unauthorized operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "subaccount",
															"value": "ACCT_03tb3u7jgwb4v",
															"description": "Subaccount code of the customer or partner"
														},
														{
															"key": "share",
															"value": "102",
															"description": "The percentage or flat quota of the customer or partner"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/split/:id/subaccount/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"split",
														":id",
														"subaccount",
														"add"
													],
													"variable": [
														{
															"key": "id",
															"value": "application/json",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "subaccount",
															"value": "ACCT_03tb3u7jgwb4v",
															"description": "Subaccount code of the customer or partner"
														},
														{
															"key": "share",
															"value": "102",
															"description": "The percentage or flat quota of the customer or partner"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/split/:id/subaccount/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"split",
														":id",
														"subaccount",
														"add"
													],
													"variable": [
														{
															"key": "id",
															"value": "application/json",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Remove Subaccount from split",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "subaccount",
													"value": "ACCT_03tb3u7jgwb4v",
													"description": "Subaccount code of the customer or partner"
												},
												{
													"key": "share",
													"value": "102",
													"description": "The percentage or flat quota of the customer or partner"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/split/:id/subaccount/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"split",
												":id",
												"subaccount",
												"remove"
											],
											"variable": [
												{
													"key": "id",
													"value": "application/json",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Request successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "subaccount",
															"value": "ACCT_03tb3u7jgwb4v",
															"description": "Subaccount code of the customer or partner"
														},
														{
															"key": "share",
															"value": "102",
															"description": "The percentage or flat quota of the customer or partner"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/split/:id/subaccount/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"split",
														":id",
														"subaccount",
														"remove"
													],
													"variable": [
														{
															"key": "id",
															"value": "application/json",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
										},
										{
											"name": "Unauthorized operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "subaccount",
															"value": "ACCT_03tb3u7jgwb4v",
															"description": "Subaccount code of the customer or partner"
														},
														{
															"key": "share",
															"value": "102",
															"description": "The percentage or flat quota of the customer or partner"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/split/:id/subaccount/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"split",
														":id",
														"subaccount",
														"remove"
													],
													"variable": [
														{
															"key": "id",
															"value": "application/json",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "subaccount",
															"value": "ACCT_03tb3u7jgwb4v",
															"description": "Subaccount code of the customer or partner"
														},
														{
															"key": "share",
															"value": "102",
															"description": "The percentage or flat quota of the customer or partner"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/split/:id/subaccount/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"split",
														":id",
														"subaccount",
														"remove"
													],
													"variable": [
														{
															"key": "id",
															"value": "application/json",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Fetch Split",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/split/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"split",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Resource created",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/split/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"split",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/split/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"split",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/split/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"split",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/split/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"split",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Split",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "ali",
											"description": "Name of the transaction split"
										},
										{
											"key": "active",
											"value": "true",
											"description": "Toggle status of split. When true, the split is active, else it's inactive"
										},
										{
											"key": "bearer_type",
											"value": "account",
											"description": "This allows you specify how the transaction charge should be processed"
										},
										{
											"key": "bearer_subaccount",
											"value": "consectetur eu in",
											"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/split/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"split",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "ali",
													"description": "Name of the transaction split"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Toggle status of split. When true, the split is active, else it's inactive"
												},
												{
													"key": "bearer_type",
													"value": "account",
													"description": "This allows you specify how the transaction charge should be processed"
												},
												{
													"key": "bearer_subaccount",
													"value": "consectetur eu in",
													"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/split/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"split",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "ali",
													"description": "Name of the transaction split"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Toggle status of split. When true, the split is active, else it's inactive"
												},
												{
													"key": "bearer_type",
													"value": "account",
													"description": "This allows you specify how the transaction charge should be processed"
												},
												{
													"key": "bearer_subaccount",
													"value": "consectetur eu in",
													"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/split/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"split",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "ali",
													"description": "Name of the transaction split"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Toggle status of split. When true, the split is active, else it's inactive"
												},
												{
													"key": "bearer_type",
													"value": "account",
													"description": "This allows you specify how the transaction charge should be processed"
												},
												{
													"key": "bearer_subaccount",
													"value": "consectetur eu in",
													"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/split/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"split",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "ali",
													"description": "Name of the transaction split"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Toggle status of split. When true, the split is active, else it's inactive"
												},
												{
													"key": "bearer_type",
													"value": "account",
													"description": "This allows you specify how the transaction charge should be processed"
												},
												{
													"key": "bearer_subaccount",
													"value": "consectetur eu in",
													"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/split/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"split",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Split",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Testing Accounts",
									"description": "(Required) Name of the transaction split"
								},
								{
									"key": "type",
									"value": "flat",
									"description": "(Required) The type of transaction split you want to create."
								},
								{
									"key": "subaccounts",
									"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
									"description": "(Required) A list of object containing subaccount code and number of shares"
								},
								{
									"key": "subaccounts",
									"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
									"description": "(Required) A list of object containing subaccount code and number of shares"
								},
								{
									"key": "currency",
									"value": "USD",
									"description": "(Required) The transaction currency"
								},
								{
									"key": "bearer_type",
									"value": "account",
									"description": "This allows you specify how the transaction charge should be processed"
								},
								{
									"key": "bearer_subaccount",
									"value": "ACCT_03tb3u7jgwb4",
									"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/split",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"split"
							]
						},
						"description": "Create a new transaction split"
					},
					"response": [
						{
							"name": "Split Creation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Testing Accounts",
											"description": "(Required) Name of the transaction split"
										},
										{
											"key": "type",
											"value": "percentage",
											"description": "(Required) The type of transaction split you want to create."
										},
										{
											"key": "subaccounts",
											"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
											"description": "(Required) A list of object containing subaccount code and number of shares"
										},
										{
											"key": "subaccounts",
											"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
											"description": "(Required) A list of object containing subaccount code and number of shares"
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "(Required) The transaction currency"
										},
										{
											"key": "bearer_type",
											"value": "all-proportional",
											"description": "This allows you specify how the transaction charge should be processed"
										},
										{
											"key": "bearer_subaccount",
											"value": "ACCT_03tb3u7jgwb4",
											"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/split",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"split"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Split created\",\n  \"data\": {\n    \"id\": 142,\n    \"name\": \"Test Doc\",\n    \"type\": \"percentage\",\n    \"currency\": \"NGN\",\n    \"integration\": 428626,\n    \"domain\": \"test\",\n    \"split_code\": \"SPL_e7jnRLtzla\",\n    \"active\": true,\n    \"bearer_type\": \"subaccount\",\n    \"bearer_subaccount\": 40809,\n    \"createdAt\": \"2020-06-30T11:42:29.150Z\",\n    \"updatedAt\": \"2020-06-30T11:42:29.150Z\",\n    \"subaccounts\": [\n      {\n        \"subaccount\": {\n          \"id\": 40809,\n          \"subaccount_code\": \"ACCT_z3x6z3nbo14xsil\",\n          \"business_name\": \"Business Name\",\n          \"description\": \"Business Description\",\n          \"primary_contact_name\": null,\n          \"primary_contact_email\": null,\n          \"primary_contact_phone\": null,\n          \"metadata\": null,\n          \"percentage_charge\": 20,\n          \"settlement_bank\": \"Business Bank\",\n          \"account_number\": 1234567890\n        },\n        \"share\": 20\n      },\n      {\n        \"subaccount\": {\n          \"id\": 40809,\n          \"subaccount_code\": \"ACCT_pwwualwty4nhq9d\",\n          \"business_name\": \"Business Name\",\n          \"description\": \"Business Description\",\n          \"primary_contact_name\": null,\n          \"primary_contact_email\": null,\n          \"primary_contact_phone\": null,\n          \"metadata\": null,\n          \"percentage_charge\": 20,\n          \"settlement_bank\": \"Business Bank\",\n          \"account_number\": \"0123456789\"\n        },\n        \"share\": 30\n      }\n    ],\n    \"total_subaccounts\": 2\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Testing Accounts",
											"description": "(Required) Name of the transaction split"
										},
										{
											"key": "type",
											"value": "percentage",
											"description": "(Required) The type of transaction split you want to create."
										},
										{
											"key": "subaccounts",
											"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
											"description": "(Required) A list of object containing subaccount code and number of shares"
										},
										{
											"key": "subaccounts",
											"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
											"description": "(Required) A list of object containing subaccount code and number of shares"
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "(Required) The transaction currency"
										},
										{
											"key": "bearer_type",
											"value": "all-proportional",
											"description": "This allows you specify how the transaction charge should be processed"
										},
										{
											"key": "bearer_subaccount",
											"value": "ACCT_03tb3u7jgwb4",
											"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/split",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"split"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Testing Accounts",
											"description": "(Required) Name of the transaction split"
										},
										{
											"key": "type",
											"value": "percentage",
											"description": "(Required) The type of transaction split you want to create."
										},
										{
											"key": "subaccounts",
											"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
											"description": "(Required) A list of object containing subaccount code and number of shares"
										},
										{
											"key": "subaccounts",
											"value": "{\"subaccount\":\"ACCT_03tb3u7jgwb4v\",\"share\":\"102\"}",
											"description": "(Required) A list of object containing subaccount code and number of shares"
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "(Required) The transaction currency"
										},
										{
											"key": "bearer_type",
											"value": "all-proportional",
											"description": "This allows you specify how the transaction charge should be processed"
										},
										{
											"key": "bearer_subaccount",
											"value": "ACCT_03tb3u7jgwb4",
											"description": "This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/split",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"split"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Splits",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/split?name=consectetur nulla nisi&active=consectetur nulla nisi&sort_by=consectetur nulla nisi&from=consectetur nulla nisi&to=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"split"
							],
							"query": [
								{
									"key": "name",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "active",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "sort_by",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "from",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "to",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "perPage",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "page",
									"value": "consectetur nulla nisi"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/split?name=consectetur nulla nisi&active=consectetur nulla nisi&sort_by=consectetur nulla nisi&from=consectetur nulla nisi&to=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"split"
									],
									"query": [
										{
											"key": "name",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "active",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "sort_by",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "to",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/split?name=consectetur nulla nisi&active=consectetur nulla nisi&sort_by=consectetur nulla nisi&from=consectetur nulla nisi&to=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"split"
									],
									"query": [
										{
											"key": "name",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "active",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "sort_by",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "to",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/split?name=consectetur nulla nisi&active=consectetur nulla nisi&sort_by=consectetur nulla nisi&from=consectetur nulla nisi&to=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"split"
									],
									"query": [
										{
											"key": "name",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "active",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "sort_by",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "to",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/split?name=consectetur nulla nisi&active=consectetur nulla nisi&sort_by=consectetur nulla nisi&from=consectetur nulla nisi&to=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"split"
									],
									"query": [
										{
											"key": "name",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "active",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "sort_by",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "to",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "customer",
			"item": [
				{
					"name": "{code}",
					"item": [
						{
							"name": "Fetch Customer",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Resource created",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/customer/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Customer",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "first_name",
											"value": "Some",
											"description": "Customer's first name"
										},
										{
											"key": "last_name",
											"value": "Body",
											"description": "Customer's last name"
										},
										{
											"key": "phone",
											"value": "+2348123456789",
											"description": "Customer's phone number"
										},
										{
											"key": "metadata",
											"value": "minim ut ut",
											"description": "Stringified JSON object of custom data"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "first_name",
													"value": "Some",
													"description": "Customer's first name"
												},
												{
													"key": "last_name",
													"value": "Body",
													"description": "Customer's last name"
												},
												{
													"key": "phone",
													"value": "+2348123456789",
													"description": "Customer's phone number"
												},
												{
													"key": "metadata",
													"value": "minim ut ut",
													"description": "Stringified JSON object of custom data"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "first_name",
													"value": "Some",
													"description": "Customer's first name"
												},
												{
													"key": "last_name",
													"value": "Body",
													"description": "Customer's last name"
												},
												{
													"key": "phone",
													"value": "+2348123456789",
													"description": "Customer's phone number"
												},
												{
													"key": "metadata",
													"value": "minim ut ut",
													"description": "Stringified JSON object of custom data"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "first_name",
													"value": "Some",
													"description": "Customer's first name"
												},
												{
													"key": "last_name",
													"value": "Body",
													"description": "Customer's last name"
												},
												{
													"key": "phone",
													"value": "+2348123456789",
													"description": "Customer's phone number"
												},
												{
													"key": "metadata",
													"value": "minim ut ut",
													"description": "Stringified JSON object of custom data"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "first_name",
													"value": "Some",
													"description": "Customer's first name"
												},
												{
													"key": "last_name",
													"value": "Body",
													"description": "Customer's last name"
												},
												{
													"key": "phone",
													"value": "+2348123456789",
													"description": "Customer's phone number"
												},
												{
													"key": "metadata",
													"value": "minim ut ut",
													"description": "Stringified JSON object of custom data"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validate Customer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "type",
											"value": "bvn",
											"description": "(Required) Predefined types of identification."
										},
										{
											"key": "country",
											"value": "NG",
											"description": "(Required) Two-letter country code of identification issuer"
										},
										{
											"key": "bvn",
											"value": "50550755",
											"description": "(Required) Customer's Bank Verification Number"
										},
										{
											"key": "bank_code",
											"value": "007",
											"description": "(Required) You can get the list of bank codes by calling the List Banks endpoint (https://api.paystack.co/bank)."
										},
										{
											"key": "account_number",
											"value": "0111111111",
											"description": "(Required) Customer's bank account number."
										},
										{
											"key": "first_name",
											"value": "Uchenna",
											"description": "Customer's first name"
										},
										{
											"key": "last_name",
											"value": "Okoro",
											"description": "Customer's last name"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer/:code/identification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										":code",
										"identification"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								},
								"description": "Validate a customer's identity"
							},
							"response": [
								{
									"name": "Customer Validation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "type",
													"value": "bvn",
													"description": "(Required) Predefined types of identification."
												},
												{
													"key": "country",
													"value": "NG",
													"description": "(Required) Two-letter country code of identification issuer"
												},
												{
													"key": "bvn",
													"value": "50550755",
													"description": "(Required) Customer's Bank Verification Number"
												},
												{
													"key": "bank_code",
													"value": "007",
													"description": "(Required) You can get the list of bank codes by calling the List Banks endpoint (https://api.paystack.co/bank)."
												},
												{
													"key": "account_number",
													"value": "0111111111",
													"description": "(Required) Customer's bank account number."
												},
												{
													"key": "first_name",
													"value": "Uchenna",
													"description": "Customer's first name"
												},
												{
													"key": "last_name",
													"value": "Okoro",
													"description": "Customer's last name"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:code/identification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code",
												"identification"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": true,\n  \"message\": \"Customer Identification in progress\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "type",
													"value": "bvn",
													"description": "(Required) Predefined types of identification."
												},
												{
													"key": "country",
													"value": "NG",
													"description": "(Required) Two-letter country code of identification issuer"
												},
												{
													"key": "bvn",
													"value": "50550755",
													"description": "(Required) Customer's Bank Verification Number"
												},
												{
													"key": "bank_code",
													"value": "007",
													"description": "(Required) You can get the list of bank codes by calling the List Banks endpoint (https://api.paystack.co/bank)."
												},
												{
													"key": "account_number",
													"value": "0111111111",
													"description": "(Required) Customer's bank account number."
												},
												{
													"key": "first_name",
													"value": "Uchenna",
													"description": "Customer's first name"
												},
												{
													"key": "last_name",
													"value": "Okoro",
													"description": "Customer's last name"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:code/identification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code",
												"identification"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "type",
													"value": "bvn",
													"description": "(Required) Predefined types of identification."
												},
												{
													"key": "country",
													"value": "NG",
													"description": "(Required) Two-letter country code of identification issuer"
												},
												{
													"key": "bvn",
													"value": "50550755",
													"description": "(Required) Customer's Bank Verification Number"
												},
												{
													"key": "bank_code",
													"value": "007",
													"description": "(Required) You can get the list of bank codes by calling the List Banks endpoint (https://api.paystack.co/bank)."
												},
												{
													"key": "account_number",
													"value": "0111111111",
													"description": "(Required) Customer's bank account number."
												},
												{
													"key": "first_name",
													"value": "Uchenna",
													"description": "Customer's first name"
												},
												{
													"key": "last_name",
													"value": "Okoro",
													"description": "Customer's last name"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/customer/:code/identification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												":code",
												"identification"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "sunt tempor Excepteur proident laborum"
								},
								{
									"key": "first_name",
									"value": "Some"
								},
								{
									"key": "last_name",
									"value": "Body"
								},
								{
									"key": "phone",
									"value": "+2348123456789"
								},
								{
									"key": "metadata",
									"value": "sint sit"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/customer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customer"
							]
						}
					},
					"response": [
						{
							"name": "Customer Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "sunt tempor Excepteur proident laborum"
										},
										{
											"key": "first_name",
											"value": "Some"
										},
										{
											"key": "last_name",
											"value": "Body"
										},
										{
											"key": "phone",
											"value": "+2348123456789"
										},
										{
											"key": "metadata",
											"value": "sint sit"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Customer created\",\n  \"data\": {\n    \"transactions\": [],\n    \"subscriptions\": [],\n    \"authorizations\": [],\n    \"email\": \"somebody@example.com\",\n    \"first_name\": \"Some\",\n    \"last_name\": \"Body\",\n    \"phone\": \"+2348123456789\",\n    \"integration\": 463433,\n    \"domain\": \"test\",\n    \"metadata\": {},\n    \"customer_code\": \"CUS_pztcpsx5kng2fbk\",\n    \"risk_action\": \"default\",\n    \"id\": 95485991,\n    \"createdAt\": \"2022-09-20T12:52:10.583Z\",\n    \"updatedAt\": \"2022-09-20T12:52:10.583Z\",\n    \"identified\": false,\n    \"identifications\": []\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "sunt tempor Excepteur proident laborum"
										},
										{
											"key": "first_name",
											"value": "Some"
										},
										{
											"key": "last_name",
											"value": "Body"
										},
										{
											"key": "phone",
											"value": "+2348123456789"
										},
										{
											"key": "metadata",
											"value": "sint sit"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "sunt tempor Excepteur proident laborum"
										},
										{
											"key": "first_name",
											"value": "Some"
										},
										{
											"key": "last_name",
											"value": "Body"
										},
										{
											"key": "phone",
											"value": "+2348123456789"
										},
										{
											"key": "metadata",
											"value": "sint sit"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Customers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customer?use_cursor=false&next=consectetur nulla nisi&previous=consectetur nulla nisi&from=consectetur nulla nisi&to=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customer"
							],
							"query": [
								{
									"key": "use_cursor",
									"value": "false"
								},
								{
									"key": "next",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "previous",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "from",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "to",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "perPage",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "page",
									"value": "consectetur nulla nisi"
								}
							]
						},
						"description": "List customers on your integration"
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer?use_cursor=false&next=consectetur nulla nisi&previous=consectetur nulla nisi&from=consectetur nulla nisi&to=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer"
									],
									"query": [
										{
											"key": "use_cursor",
											"value": "false"
										},
										{
											"key": "next",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "previous",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "to",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer?use_cursor=true&next=consectetur nulla nisi&previous=consectetur nulla nisi&from=consectetur nulla nisi&to=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer"
									],
									"query": [
										{
											"key": "use_cursor",
											"value": "true"
										},
										{
											"key": "next",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "previous",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "to",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer?use_cursor=true&next=consectetur nulla nisi&previous=consectetur nulla nisi&from=consectetur nulla nisi&to=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer"
									],
									"query": [
										{
											"key": "use_cursor",
											"value": "true"
										},
										{
											"key": "next",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "previous",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "to",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customer?use_cursor=true&next=consectetur nulla nisi&previous=consectetur nulla nisi&from=consectetur nulla nisi&to=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer"
									],
									"query": [
										{
											"key": "use_cursor",
											"value": "true"
										},
										{
											"key": "next",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "previous",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "to",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "White/blacklist Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "customer",
									"value": "cupidatat culpa anim incididunt",
									"description": "(Required) Customer's code, or email address"
								},
								{
									"key": "risk_action",
									"value": "default",
									"description": "One of the possible risk actions [ default, allow, deny ]. allow to whitelist. \ndeny to blacklist. Customers start with a default risk action.\n"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/customer/set_risk_action",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customer",
								"set_risk_action"
							]
						},
						"description": "Set customer's risk action by whitelisting or blacklisting the customer"
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "cupidatat culpa anim incididunt",
											"description": "(Required) Customer's code, or email address"
										},
										{
											"key": "risk_action",
											"value": "default",
											"description": "One of the possible risk actions [ default, allow, deny ]. allow to whitelist. \ndeny to blacklist. Customers start with a default risk action.\n"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer/set_risk_action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"set_risk_action"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "cupidatat culpa anim incididunt",
											"description": "(Required) Customer's code, or email address"
										},
										{
											"key": "risk_action",
											"value": "default",
											"description": "One of the possible risk actions [ default, allow, deny ]. allow to whitelist. \ndeny to blacklist. Customers start with a default risk action.\n"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer/set_risk_action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"set_risk_action"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "cupidatat culpa anim incididunt",
											"description": "(Required) Customer's code, or email address"
										},
										{
											"key": "risk_action",
											"value": "default",
											"description": "One of the possible risk actions [ default, allow, deny ]. allow to whitelist. \ndeny to blacklist. Customers start with a default risk action.\n"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer/set_risk_action",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"set_risk_action"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Deactivate Authorization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "authorization_code",
									"value": "in aliqua culpa eiusmod",
									"description": "(Required) Customer's authorization code to be deactivated"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/customer/deactivate_authorization",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customer",
								"deactivate_authorization"
							]
						},
						"description": "Deactivate a customer's card"
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "authorization_code",
											"value": "in aliqua culpa eiusmod",
											"description": "(Required) Customer's authorization code to be deactivated"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer/deactivate_authorization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"deactivate_authorization"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "authorization_code",
											"value": "in aliqua culpa eiusmod",
											"description": "(Required) Customer's authorization code to be deactivated"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer/deactivate_authorization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"deactivate_authorization"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "authorization_code",
											"value": "in aliqua culpa eiusmod",
											"description": "(Required) Customer's authorization code to be deactivated"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/customer/deactivate_authorization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"deactivate_authorization"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "dedicated account",
			"item": [
				{
					"name": "{account id}",
					"item": [
						{
							"name": "Fetch Dedicated Account",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dedicated_account/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dedicated_account/:account_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dedicated_account",
												":account_id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dedicated_account/:account_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dedicated_account",
												":account_id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dedicated_account/:account_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dedicated_account",
												":account_id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dedicated_account/:account_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dedicated_account",
												":account_id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deactivate Dedicated Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dedicated_account/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dedicated_account/:account_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dedicated_account",
												":account_id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dedicated_account/:account_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dedicated_account",
												":account_id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dedicated_account/:account_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dedicated_account",
												":account_id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dedicated_account/:account_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dedicated_account",
												":account_id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Dedicated Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "customer",
									"value": "CUS_abc123der",
									"description": "(Required) Customer ID or code"
								},
								{
									"key": "preferred_bank",
									"value": "wema-bank",
									"description": "The bank slug for preferred bank. To get a list of available banks, use the List Providers endpoint"
								},
								{
									"key": "subaccount",
									"value": "ACCT_123455asdin",
									"description": "Subaccount code of the account you want to split the transaction with"
								},
								{
									"key": "split_code",
									"value": "SPL_123asbde",
									"description": "Split code consisting of the lists of accounts you want to split the transaction with"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/dedicated_account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dedicated_account"
							]
						}
					},
					"response": [
						{
							"name": "Creation Successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "CUS_abc123der",
											"description": "(Required) Customer ID or code"
										},
										{
											"key": "preferred_bank",
											"value": "wema-bank",
											"description": "The bank slug for preferred bank. To get a list of available banks, use the List Providers endpoint"
										},
										{
											"key": "subaccount",
											"value": "ACCT_123455asdin",
											"description": "Subaccount code of the account you want to split the transaction with"
										},
										{
											"key": "split_code",
											"value": "SPL_123asbde",
											"description": "Split code consisting of the lists of accounts you want to split the transaction with"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/dedicated_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"NUBAN successfully created\",\n  \"data\": {\n    \"bank\": {\n      \"name\": \"Wema Bank\",\n      \"id\": 20,\n      \"slug\": \"wema-bank\"\n    },\n    \"account_name\": \"KAROKART / RHODA CHURCH\",\n    \"account_number\": 9930000737,\n    \"assigned\": true,\n    \"currency\": \"NGN\",\n    \"metadata\": null,\n    \"active\": true,\n    \"id\": 253,\n    \"created_at\": \"2019-12-12T12:39:04.000Z\",\n    \"updated_at\": \"2020-01-06T15:51:24.000Z\",\n    \"assignment\": {\n      \"integration\": 100043,\n      \"assignee_id\": 7454289,\n      \"assignee_type\": \"Customer\",\n      \"expired\": false,\n      \"account_type\": \"PAY-WITH-TRANSFER-RECURRING\",\n      \"assigned_at\": \"2020-01-06T15:51:24.764Z\"\n    },\n    \"customer\": {\n      \"id\": 7454289,\n      \"first_name\": \"RHODA\",\n      \"last_name\": \"CHURCH\",\n      \"email\": \"rhodachurch@email.com\",\n      \"customer_code\": \"CUS_kpb3qj71u1m0rw8\",\n      \"phone\": 2349053267565,\n      \"risk_action\": \"default\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "CUS_abc123der",
											"description": "(Required) Customer ID or code"
										},
										{
											"key": "preferred_bank",
											"value": "wema-bank",
											"description": "The bank slug for preferred bank. To get a list of available banks, use the List Providers endpoint"
										},
										{
											"key": "subaccount",
											"value": "ACCT_123455asdin",
											"description": "Subaccount code of the account you want to split the transaction with"
										},
										{
											"key": "split_code",
											"value": "SPL_123asbde",
											"description": "Split code consisting of the lists of accounts you want to split the transaction with"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/dedicated_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "CUS_abc123der",
											"description": "(Required) Customer ID or code"
										},
										{
											"key": "preferred_bank",
											"value": "wema-bank",
											"description": "The bank slug for preferred bank. To get a list of available banks, use the List Providers endpoint"
										},
										{
											"key": "subaccount",
											"value": "ACCT_123455asdin",
											"description": "Subaccount code of the account you want to split the transaction with"
										},
										{
											"key": "split_code",
											"value": "SPL_123asbde",
											"description": "Split code consisting of the lists of accounts you want to split the transaction with"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/dedicated_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Dedicated Accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dedicated_account?account_number=consectetur nulla nisi&customer=consectetur nulla nisi&active=true&currency=consectetur nulla nisi&provider_slug=consectetur nulla nisi&bank_id=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dedicated_account"
							],
							"query": [
								{
									"key": "account_number",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "customer",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "active",
									"value": "true"
								},
								{
									"key": "currency",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "provider_slug",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "bank_id",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "perPage",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "page",
									"value": "consectetur nulla nisi"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dedicated_account?account_number=consectetur nulla nisi&customer=consectetur nulla nisi&active=true&currency=consectetur nulla nisi&provider_slug=consectetur nulla nisi&bank_id=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account"
									],
									"query": [
										{
											"key": "account_number",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "currency",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "provider_slug",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "bank_id",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dedicated_account?account_number=consectetur nulla nisi&customer=consectetur nulla nisi&active=true&currency=consectetur nulla nisi&provider_slug=consectetur nulla nisi&bank_id=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account"
									],
									"query": [
										{
											"key": "account_number",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "currency",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "provider_slug",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "bank_id",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dedicated_account?account_number=consectetur nulla nisi&customer=consectetur nulla nisi&active=true&currency=consectetur nulla nisi&provider_slug=consectetur nulla nisi&bank_id=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account"
									],
									"query": [
										{
											"key": "account_number",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "currency",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "provider_slug",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "bank_id",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dedicated_account?account_number=consectetur nulla nisi&customer=consectetur nulla nisi&active=true&currency=consectetur nulla nisi&provider_slug=consectetur nulla nisi&bank_id=consectetur nulla nisi&perPage=consectetur nulla nisi&page=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account"
									],
									"query": [
										{
											"key": "account_number",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "currency",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "provider_slug",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "bank_id",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "perPage",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "page",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch Bank Providers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dedicated_account/available_providers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dedicated_account",
								"available_providers"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dedicated_account/available_providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account",
										"available_providers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dedicated_account/available_providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account",
										"available_providers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dedicated_account/available_providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account",
										"available_providers"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dedicated_account/available_providers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account",
										"available_providers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Split Dedicated Account Transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "account_number",
									"value": "labor",
									"description": "(Required) Valid Dedicated virtual account"
								},
								{
									"key": "subaccount",
									"value": "pariatur non Ut",
									"description": "Subaccount code of the account you want to split the transaction with"
								},
								{
									"key": "split_code",
									"value": "dolore veniam proident cil",
									"description": "Split code consisting of the lists of accounts you want to split the transaction with"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/dedicated_account/split",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dedicated_account",
								"split"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account_number",
											"value": "labor",
											"description": "(Required) Valid Dedicated virtual account"
										},
										{
											"key": "subaccount",
											"value": "pariatur non Ut",
											"description": "Subaccount code of the account you want to split the transaction with"
										},
										{
											"key": "split_code",
											"value": "dolore veniam proident cil",
											"description": "Split code consisting of the lists of accounts you want to split the transaction with"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/dedicated_account/split",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account",
										"split"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account_number",
											"value": "labor",
											"description": "(Required) Valid Dedicated virtual account"
										},
										{
											"key": "subaccount",
											"value": "pariatur non Ut",
											"description": "Subaccount code of the account you want to split the transaction with"
										},
										{
											"key": "split_code",
											"value": "dolore veniam proident cil",
											"description": "Split code consisting of the lists of accounts you want to split the transaction with"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/dedicated_account/split",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account",
										"split"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account_number",
											"value": "labor",
											"description": "(Required) Valid Dedicated virtual account"
										},
										{
											"key": "subaccount",
											"value": "pariatur non Ut",
											"description": "Subaccount code of the account you want to split the transaction with"
										},
										{
											"key": "split_code",
											"value": "dolore veniam proident cil",
											"description": "Split code consisting of the lists of accounts you want to split the transaction with"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/dedicated_account/split",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dedicated_account",
										"split"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "subaccount",
			"item": [
				{
					"name": "{code}",
					"item": [
						{
							"name": "Fetch Subaccount",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subaccount/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subaccount",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subaccount/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subaccount",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subaccount/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subaccount",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subaccount/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subaccount",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subaccount/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subaccount",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Subaccount",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "business_name",
											"value": "ipsum velit anim",
											"description": "Name of business for subaccount"
										},
										{
											"key": "settlement_bank",
											"value": "deserunt mollit ut",
											"description": "Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
										},
										{
											"key": "account_number",
											"value": "in dolore aliquip",
											"description": "Bank account number"
										},
										{
											"key": "active",
											"value": "true",
											"description": "Activate or deactivate a subaccount"
										},
										{
											"key": "percentage_charge",
											"value": "50797979.54537991",
											"description": "Customer's phone number"
										},
										{
											"key": "description",
											"value": "Lorem consequat in commodo",
											"description": "A description for this subaccount"
										},
										{
											"key": "primary_contact_email",
											"value": "nostrud et",
											"description": "A contact email for the subaccount"
										},
										{
											"key": "primary_contact_name",
											"value": "fugiat consectetur",
											"description": "The name of the contact person for this subaccount"
										},
										{
											"key": "primary_contact_phone",
											"value": "eiusmod adipisicing",
											"description": "A phone number to call for this subaccount"
										},
										{
											"key": "metadata",
											"value": "incididunt ex officia",
											"description": "Stringified JSON object of custom data"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subaccount/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subaccount",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "business_name",
													"value": "ipsum velit anim",
													"description": "Name of business for subaccount"
												},
												{
													"key": "settlement_bank",
													"value": "deserunt mollit ut",
													"description": "Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
												},
												{
													"key": "account_number",
													"value": "in dolore aliquip",
													"description": "Bank account number"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Activate or deactivate a subaccount"
												},
												{
													"key": "percentage_charge",
													"value": "50797979.54537991",
													"description": "Customer's phone number"
												},
												{
													"key": "description",
													"value": "Lorem consequat in commodo",
													"description": "A description for this subaccount"
												},
												{
													"key": "primary_contact_email",
													"value": "nostrud et",
													"description": "A contact email for the subaccount"
												},
												{
													"key": "primary_contact_name",
													"value": "fugiat consectetur",
													"description": "The name of the contact person for this subaccount"
												},
												{
													"key": "primary_contact_phone",
													"value": "eiusmod adipisicing",
													"description": "A phone number to call for this subaccount"
												},
												{
													"key": "metadata",
													"value": "incididunt ex officia",
													"description": "Stringified JSON object of custom data"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/subaccount/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subaccount",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "business_name",
													"value": "ipsum velit anim",
													"description": "Name of business for subaccount"
												},
												{
													"key": "settlement_bank",
													"value": "deserunt mollit ut",
													"description": "Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
												},
												{
													"key": "account_number",
													"value": "in dolore aliquip",
													"description": "Bank account number"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Activate or deactivate a subaccount"
												},
												{
													"key": "percentage_charge",
													"value": "50797979.54537991",
													"description": "Customer's phone number"
												},
												{
													"key": "description",
													"value": "Lorem consequat in commodo",
													"description": "A description for this subaccount"
												},
												{
													"key": "primary_contact_email",
													"value": "nostrud et",
													"description": "A contact email for the subaccount"
												},
												{
													"key": "primary_contact_name",
													"value": "fugiat consectetur",
													"description": "The name of the contact person for this subaccount"
												},
												{
													"key": "primary_contact_phone",
													"value": "eiusmod adipisicing",
													"description": "A phone number to call for this subaccount"
												},
												{
													"key": "metadata",
													"value": "incididunt ex officia",
													"description": "Stringified JSON object of custom data"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/subaccount/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subaccount",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "business_name",
													"value": "ipsum velit anim",
													"description": "Name of business for subaccount"
												},
												{
													"key": "settlement_bank",
													"value": "deserunt mollit ut",
													"description": "Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
												},
												{
													"key": "account_number",
													"value": "in dolore aliquip",
													"description": "Bank account number"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Activate or deactivate a subaccount"
												},
												{
													"key": "percentage_charge",
													"value": "50797979.54537991",
													"description": "Customer's phone number"
												},
												{
													"key": "description",
													"value": "Lorem consequat in commodo",
													"description": "A description for this subaccount"
												},
												{
													"key": "primary_contact_email",
													"value": "nostrud et",
													"description": "A contact email for the subaccount"
												},
												{
													"key": "primary_contact_name",
													"value": "fugiat consectetur",
													"description": "The name of the contact person for this subaccount"
												},
												{
													"key": "primary_contact_phone",
													"value": "eiusmod adipisicing",
													"description": "A phone number to call for this subaccount"
												},
												{
													"key": "metadata",
													"value": "incididunt ex officia",
													"description": "Stringified JSON object of custom data"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/subaccount/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subaccount",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "business_name",
													"value": "ipsum velit anim",
													"description": "Name of business for subaccount"
												},
												{
													"key": "settlement_bank",
													"value": "deserunt mollit ut",
													"description": "Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
												},
												{
													"key": "account_number",
													"value": "in dolore aliquip",
													"description": "Bank account number"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Activate or deactivate a subaccount"
												},
												{
													"key": "percentage_charge",
													"value": "50797979.54537991",
													"description": "Customer's phone number"
												},
												{
													"key": "description",
													"value": "Lorem consequat in commodo",
													"description": "A description for this subaccount"
												},
												{
													"key": "primary_contact_email",
													"value": "nostrud et",
													"description": "A contact email for the subaccount"
												},
												{
													"key": "primary_contact_name",
													"value": "fugiat consectetur",
													"description": "The name of the contact person for this subaccount"
												},
												{
													"key": "primary_contact_phone",
													"value": "eiusmod adipisicing",
													"description": "A phone number to call for this subaccount"
												},
												{
													"key": "metadata",
													"value": "incididunt ex officia",
													"description": "Stringified JSON object of custom data"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/subaccount/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subaccount",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Subaccount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "business_name",
									"value": "Some Subaccount",
									"description": "(Required) Name of business for subaccount"
								},
								{
									"key": "settlement_bank",
									"value": "011",
									"description": "(Required) Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
								},
								{
									"key": "account_number",
									"value": "0000000000",
									"description": "(Required) Bank account number"
								},
								{
									"key": "percentage_charge",
									"value": "0.3",
									"description": "(Required) Transaction percentage that the subaccount gets"
								},
								{
									"key": "description",
									"value": "A service provider",
									"description": "A description for this subaccount"
								},
								{
									"key": "primary_contact_email",
									"value": "sub@example.com",
									"description": "A contact email for the subaccount"
								},
								{
									"key": "primary_contact_name",
									"value": "person@example.com",
									"description": "The name of the contact person for this subaccount"
								},
								{
									"key": "primary_contact_phone",
									"value": "anim in nisi",
									"description": "A phone number to call for this subaccount"
								},
								{
									"key": "category",
									"value": "General supplies",
									"description": "Stringified JSON object of custom data"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/subaccount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subaccount"
							]
						},
						"description": "Create a new subaccount"
					},
					"response": [
						{
							"name": "Subaccount Creation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "business_name",
											"value": "Some Subaccount",
											"description": "(Required) Name of business for subaccount"
										},
										{
											"key": "settlement_bank",
											"value": "011",
											"description": "(Required) Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
										},
										{
											"key": "account_number",
											"value": "0000000000",
											"description": "(Required) Bank account number"
										},
										{
											"key": "percentage_charge",
											"value": "0.3",
											"description": "(Required) Transaction percentage that the subaccount gets"
										},
										{
											"key": "description",
											"value": "A service provider",
											"description": "A description for this subaccount"
										},
										{
											"key": "primary_contact_email",
											"value": "sub@example.com",
											"description": "A contact email for the subaccount"
										},
										{
											"key": "primary_contact_name",
											"value": "person@example.com",
											"description": "The name of the contact person for this subaccount"
										},
										{
											"key": "primary_contact_phone",
											"value": "anim in nisi",
											"description": "A phone number to call for this subaccount"
										},
										{
											"key": "category",
											"value": "General supplies",
											"description": "Stringified JSON object of custom data"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subaccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subaccount"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Subaccount created\",\n  \"data\": {\n    \"business_name\": \"Cheese Sticks\",\n    \"account_number\": \"0123456789\",\n    \"percentage_charge\": 0.2,\n    \"settlement_bank\": \"Guaranty Trust Bank\",\n    \"integration\": 428626,\n    \"domain\": \"test\",\n    \"subaccount_code\": \"ACCT_xxxxxxxxxxxxx\",\n    \"is_verified\": false,\n    \"settlement_schedule\": \"AUTO\",\n    \"active\": true,\n    \"migrate\": false,\n    \"id\": 37614,\n    \"createdAt\": \"2020-05-19T11:54:20.655Z\",\n    \"updatedAt\": \"2020-05-19T11:54:20.655Z\"\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "business_name",
											"value": "Some Subaccount",
											"description": "(Required) Name of business for subaccount"
										},
										{
											"key": "settlement_bank",
											"value": "011",
											"description": "(Required) Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
										},
										{
											"key": "account_number",
											"value": "0000000000",
											"description": "(Required) Bank account number"
										},
										{
											"key": "percentage_charge",
											"value": "0.3",
											"description": "(Required) Transaction percentage that the subaccount gets"
										},
										{
											"key": "description",
											"value": "A service provider",
											"description": "A description for this subaccount"
										},
										{
											"key": "primary_contact_email",
											"value": "sub@example.com",
											"description": "A contact email for the subaccount"
										},
										{
											"key": "primary_contact_name",
											"value": "person@example.com",
											"description": "The name of the contact person for this subaccount"
										},
										{
											"key": "primary_contact_phone",
											"value": "anim in nisi",
											"description": "A phone number to call for this subaccount"
										},
										{
											"key": "category",
											"value": "General supplies",
											"description": "Stringified JSON object of custom data"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subaccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subaccount"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "business_name",
											"value": "Some Subaccount",
											"description": "(Required) Name of business for subaccount"
										},
										{
											"key": "settlement_bank",
											"value": "011",
											"description": "(Required) Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint."
										},
										{
											"key": "account_number",
											"value": "0000000000",
											"description": "(Required) Bank account number"
										},
										{
											"key": "percentage_charge",
											"value": "0.3",
											"description": "(Required) Transaction percentage that the subaccount gets"
										},
										{
											"key": "description",
											"value": "A service provider",
											"description": "A description for this subaccount"
										},
										{
											"key": "primary_contact_email",
											"value": "sub@example.com",
											"description": "A contact email for the subaccount"
										},
										{
											"key": "primary_contact_name",
											"value": "person@example.com",
											"description": "The name of the contact person for this subaccount"
										},
										{
											"key": "primary_contact_phone",
											"value": "anim in nisi",
											"description": "A phone number to call for this subaccount"
										},
										{
											"key": "category",
											"value": "General supplies",
											"description": "Stringified JSON object of custom data"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subaccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subaccount"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Subaccounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subaccount?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subaccount"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subaccount?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subaccount"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subaccount?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subaccount"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subaccount?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subaccount"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subaccount?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subaccount"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "plan",
			"item": [
				{
					"name": "{code}",
					"item": [
						{
							"name": "Fetch Plan",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plan/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plan",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/plan/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plan",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/plan/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plan",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/plan/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plan",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/plan/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plan",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Plan",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "cupidatat ipsum",
											"description": "Name of plan"
										},
										{
											"key": "amount",
											"value": "6812739",
											"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "interval",
											"value": "ex",
											"description": "Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually"
										},
										{
											"key": "description",
											"value": "false",
											"description": "A description for this plan"
										},
										{
											"key": "send_invoices",
											"value": "false",
											"description": "Set to false if you don't want invoices to be sent to your customers"
										},
										{
											"key": "send_sms",
											"value": "true",
											"description": "Set to false if you don't want text messages to be sent to your customers"
										},
										{
											"key": "currency",
											"value": "dolore eu in",
											"description": "Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD"
										},
										{
											"key": "invoice_limit",
											"value": "-87870466",
											"description": "Number of invoices to raise during subscription to this plan. \nCan be overridden by specifying an invoice_limit while subscribing."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/plan/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plan",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "cupidatat ipsum",
													"description": "Name of plan"
												},
												{
													"key": "amount",
													"value": "6812739",
													"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "interval",
													"value": "ex",
													"description": "Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually"
												},
												{
													"key": "description",
													"value": "false",
													"description": "A description for this plan"
												},
												{
													"key": "send_invoices",
													"value": "false",
													"description": "Set to false if you don't want invoices to be sent to your customers"
												},
												{
													"key": "send_sms",
													"value": "true",
													"description": "Set to false if you don't want text messages to be sent to your customers"
												},
												{
													"key": "currency",
													"value": "dolore eu in",
													"description": "Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD"
												},
												{
													"key": "invoice_limit",
													"value": "-87870466",
													"description": "Number of invoices to raise during subscription to this plan. \nCan be overridden by specifying an invoice_limit while subscribing."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/plan/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plan",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "cupidatat ipsum",
													"description": "Name of plan"
												},
												{
													"key": "amount",
													"value": "6812739",
													"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "interval",
													"value": "ex",
													"description": "Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually"
												},
												{
													"key": "description",
													"value": "false",
													"description": "A description for this plan"
												},
												{
													"key": "send_invoices",
													"value": "false",
													"description": "Set to false if you don't want invoices to be sent to your customers"
												},
												{
													"key": "send_sms",
													"value": "true",
													"description": "Set to false if you don't want text messages to be sent to your customers"
												},
												{
													"key": "currency",
													"value": "dolore eu in",
													"description": "Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD"
												},
												{
													"key": "invoice_limit",
													"value": "-87870466",
													"description": "Number of invoices to raise during subscription to this plan. \nCan be overridden by specifying an invoice_limit while subscribing."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/plan/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plan",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "cupidatat ipsum",
													"description": "Name of plan"
												},
												{
													"key": "amount",
													"value": "6812739",
													"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "interval",
													"value": "ex",
													"description": "Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually"
												},
												{
													"key": "description",
													"value": "false",
													"description": "A description for this plan"
												},
												{
													"key": "send_invoices",
													"value": "false",
													"description": "Set to false if you don't want invoices to be sent to your customers"
												},
												{
													"key": "send_sms",
													"value": "true",
													"description": "Set to false if you don't want text messages to be sent to your customers"
												},
												{
													"key": "currency",
													"value": "dolore eu in",
													"description": "Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD"
												},
												{
													"key": "invoice_limit",
													"value": "-87870466",
													"description": "Number of invoices to raise during subscription to this plan. \nCan be overridden by specifying an invoice_limit while subscribing."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/plan/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plan",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "cupidatat ipsum",
													"description": "Name of plan"
												},
												{
													"key": "amount",
													"value": "6812739",
													"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "interval",
													"value": "ex",
													"description": "Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually"
												},
												{
													"key": "description",
													"value": "false",
													"description": "A description for this plan"
												},
												{
													"key": "send_invoices",
													"value": "false",
													"description": "Set to false if you don't want invoices to be sent to your customers"
												},
												{
													"key": "send_sms",
													"value": "true",
													"description": "Set to false if you don't want text messages to be sent to your customers"
												},
												{
													"key": "currency",
													"value": "dolore eu in",
													"description": "Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD"
												},
												{
													"key": "invoice_limit",
													"value": "-87870466",
													"description": "Number of invoices to raise during subscription to this plan. \nCan be overridden by specifying an invoice_limit while subscribing."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/plan/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"plan",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Plan",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "My monthly membership",
									"description": "(Required) Name of plan"
								},
								{
									"key": "amount",
									"value": "20000",
									"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
								},
								{
									"key": "interval",
									"value": "monthly",
									"description": "(Required) Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually"
								},
								{
									"key": "description",
									"value": "Monthly membership payment plan",
									"description": "A description for this plan"
								},
								{
									"key": "send_invoices",
									"value": "false",
									"description": "Set to false if you don't want invoices to be sent to your customers"
								},
								{
									"key": "send_sms",
									"value": "false",
									"description": "Set to false if you don't want text messages to be sent to your customers"
								},
								{
									"key": "currency",
									"value": "NGN",
									"description": "Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD"
								},
								{
									"key": "invoice_limit",
									"value": "0",
									"description": "Number of invoices to raise during subscription to this plan. \nCan be overridden by specifying an invoice_limit while subscribing."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/plan",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"plan"
							]
						}
					},
					"response": [
						{
							"name": "Create Plan",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "My monthly membership",
											"description": "(Required) Name of plan"
										},
										{
											"key": "amount",
											"value": "20000",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "interval",
											"value": "monthly",
											"description": "(Required) Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually"
										},
										{
											"key": "description",
											"value": "Monthly membership payment plan",
											"description": "A description for this plan"
										},
										{
											"key": "send_invoices",
											"value": "false",
											"description": "Set to false if you don't want invoices to be sent to your customers"
										},
										{
											"key": "send_sms",
											"value": "false",
											"description": "Set to false if you don't want text messages to be sent to your customers"
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD"
										},
										{
											"key": "invoice_limit",
											"value": "0",
											"description": "Number of invoices to raise during subscription to this plan. \nCan be overridden by specifying an invoice_limit while subscribing."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/plan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plan"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Plan created\",\n  \"data\": {\n    \"name\": \"My monthly membership\",\n    \"interval\": \"monthly\",\n    \"amount\": 20000,\n    \"description\": \"Monthly membership payment plan\",\n    \"integration\": 463433,\n    \"domain\": \"test\",\n    \"currency\": \"NGN\",\n    \"plan_code\": \"PLN_y4y1wkydoptw6zv\",\n    \"invoice_limit\": 0,\n    \"send_invoices\": true,\n    \"send_sms\": true,\n    \"hosted_page\": false,\n    \"migrate\": false,\n    \"is_archived\": false,\n    \"id\": 393872,\n    \"createdAt\": \"2022-09-22T02:15:06.702Z\",\n    \"updatedAt\": \"2022-09-22T02:15:06.702Z\"\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "My monthly membership",
											"description": "(Required) Name of plan"
										},
										{
											"key": "amount",
											"value": "20000",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "interval",
											"value": "monthly",
											"description": "(Required) Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually"
										},
										{
											"key": "description",
											"value": "Monthly membership payment plan",
											"description": "A description for this plan"
										},
										{
											"key": "send_invoices",
											"value": "false",
											"description": "Set to false if you don't want invoices to be sent to your customers"
										},
										{
											"key": "send_sms",
											"value": "false",
											"description": "Set to false if you don't want text messages to be sent to your customers"
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD"
										},
										{
											"key": "invoice_limit",
											"value": "0",
											"description": "Number of invoices to raise during subscription to this plan. \nCan be overridden by specifying an invoice_limit while subscribing."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/plan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plan"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "My monthly membership",
											"description": "(Required) Name of plan"
										},
										{
											"key": "amount",
											"value": "20000",
											"description": "(Required) Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "interval",
											"value": "monthly",
											"description": "(Required) Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually"
										},
										{
											"key": "description",
											"value": "Monthly membership payment plan",
											"description": "A description for this plan"
										},
										{
											"key": "send_invoices",
											"value": "false",
											"description": "Set to false if you don't want invoices to be sent to your customers"
										},
										{
											"key": "send_sms",
											"value": "false",
											"description": "Set to false if you don't want text messages to be sent to your customers"
										},
										{
											"key": "currency",
											"value": "NGN",
											"description": "Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD"
										},
										{
											"key": "invoice_limit",
											"value": "0",
											"description": "Number of invoices to raise during subscription to this plan. \nCan be overridden by specifying an invoice_limit while subscribing."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/plan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plan"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Plans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/plan?perPage=-91253504&page=-91253504&interval=consectetur nulla nisi&amount=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"plan"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "interval",
									"value": "consectetur nulla nisi",
									"description": "Specify interval of the plan"
								},
								{
									"key": "amount",
									"value": "-91253504",
									"description": "The amount on the plans to retrieve"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plan?perPage=-91253504&page=-91253504&interval=consectetur nulla nisi&amount=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plan"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "interval",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "amount",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plan?perPage=-91253504&page=-91253504&interval=consectetur nulla nisi&amount=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plan"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "interval",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "amount",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plan?perPage=-91253504&page=-91253504&interval=consectetur nulla nisi&amount=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plan"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "interval",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "amount",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/plan?perPage=-91253504&page=-91253504&interval=consectetur nulla nisi&amount=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"plan"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "interval",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "amount",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "subscription",
			"item": [
				{
					"name": "{code}",
					"item": [
						{
							"name": "manage",
							"item": [
								{
									"name": "Generate Update Subscription Link",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:code/manage/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":code",
												"manage",
												"link"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Request successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:code/manage/link",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":code",
														"manage",
														"link"
													],
													"variable": [
														{
															"key": "code",
															"value": "consectetur nulla nisi",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
										},
										{
											"name": "Unauthorized operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:code/manage/link",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":code",
														"manage",
														"link"
													],
													"variable": [
														{
															"key": "code",
															"value": "consectetur nulla nisi",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:code/manage/link",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":code",
														"manage",
														"link"
													],
													"variable": [
														{
															"key": "code",
															"value": "consectetur nulla nisi",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Send Update Subscription Link",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:code/manage/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":code",
												"manage",
												"email"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"name": "Request successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:code/manage/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":code",
														"manage",
														"email"
													],
													"variable": [
														{
															"key": "code",
															"value": "consectetur nulla nisi",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
										},
										{
											"name": "Unauthorized operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:code/manage/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":code",
														"manage",
														"email"
													],
													"variable": [
														{
															"key": "code",
															"value": "consectetur nulla nisi",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subscription/:code/manage/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subscription",
														":code",
														"manage",
														"email"
													],
													"variable": [
														{
															"key": "code",
															"value": "consectetur nulla nisi",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Fetch Subscription",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subscription/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subscription",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Subscription",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "customer",
									"value": "person@example.com",
									"description": "(Required) Customer's email address or customer code"
								},
								{
									"key": "plan",
									"value": "PLN_y4y1wkydoptw6zv",
									"description": "(Required) Plan code that the customer should subscribe to"
								},
								{
									"key": "authorization",
									"value": "AUTH_Codaad23",
									"description": "If customer has multiple authorizations, you can set the desired authorization you wish to use for this subscription here. \nIf this is not supplied, the customer's most recent authorization would be used"
								},
								{
									"key": "start_date",
									"value": "1946-03-17T05:30:59.472Z",
									"description": "Set the date for the first debit. (ISO 8601 format) e.g. 2017-05-16T00:30:13+01:00"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/subscription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription"
							]
						}
					},
					"response": [
						{
							"name": "Create Subscription",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "person@example.com",
											"description": "(Required) Customer's email address or customer code"
										},
										{
											"key": "plan",
											"value": "PLN_y4y1wkydoptw6zv",
											"description": "(Required) Plan code that the customer should subscribe to"
										},
										{
											"key": "authorization",
											"value": "AUTH_Codaad23",
											"description": "If customer has multiple authorizations, you can set the desired authorization you wish to use for this subscription here. \nIf this is not supplied, the customer's most recent authorization would be used"
										},
										{
											"key": "start_date",
											"value": "1946-03-17T05:30:59.472Z",
											"description": "Set the date for the first debit. (ISO 8601 format) e.g. 2017-05-16T00:30:13+01:00"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Subscription successfully created\",\n  \"data\": {\n    \"customer\": 89363925,\n    \"plan\": 393873,\n    \"integration\": 463433,\n    \"domain\": \"test\",\n    \"start\": 1663817490,\n    \"status\": \"active\",\n    \"quantity\": 1,\n    \"amount\": 20000,\n    \"authorization\": 374536802,\n    \"invoice_limit\": 0,\n    \"split_code\": null,\n    \"subscription_code\": \"SUB_k0alurkz6l2d3nz\",\n    \"email_token\": \"txyhn3zjzcr9xlo\",\n    \"id\": 456933,\n    \"cancelledAt\": null,\n    \"createdAt\": \"2022-09-22T03:31:30.886Z\",\n    \"updatedAt\": \"2022-09-22T03:31:30.886Z\",\n    \"cron_expression\": \"31 3 22 * *\",\n    \"next_payment_date\": \"2022-10-22T03:31:00.000Z\"\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "person@example.com",
											"description": "(Required) Customer's email address or customer code"
										},
										{
											"key": "plan",
											"value": "PLN_y4y1wkydoptw6zv",
											"description": "(Required) Plan code that the customer should subscribe to"
										},
										{
											"key": "authorization",
											"value": "AUTH_Codaad23",
											"description": "If customer has multiple authorizations, you can set the desired authorization you wish to use for this subscription here. \nIf this is not supplied, the customer's most recent authorization would be used"
										},
										{
											"key": "start_date",
											"value": "1946-03-17T05:30:59.472Z",
											"description": "Set the date for the first debit. (ISO 8601 format) e.g. 2017-05-16T00:30:13+01:00"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "person@example.com",
											"description": "(Required) Customer's email address or customer code"
										},
										{
											"key": "plan",
											"value": "PLN_y4y1wkydoptw6zv",
											"description": "(Required) Plan code that the customer should subscribe to"
										},
										{
											"key": "authorization",
											"value": "AUTH_Codaad23",
											"description": "If customer has multiple authorizations, you can set the desired authorization you wish to use for this subscription here. \nIf this is not supplied, the customer's most recent authorization would be used"
										},
										{
											"key": "start_date",
											"value": "1946-03-17T05:30:59.472Z",
											"description": "Set the date for the first debit. (ISO 8601 format) e.g. 2017-05-16T00:30:13+01:00"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Subscriptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscription?perPage=-91253504&page=-91253504&plan=consectetur nulla nisi&customer=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "plan",
									"value": "consectetur nulla nisi",
									"description": "Plan ID"
								},
								{
									"key": "customer",
									"value": "consectetur nulla nisi",
									"description": "Customer ID"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription?perPage=-91253504&page=-91253504&plan=consectetur nulla nisi&customer=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "plan",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription?perPage=-91253504&page=-91253504&plan=consectetur nulla nisi&customer=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "plan",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription?perPage=-91253504&page=-91253504&plan=consectetur nulla nisi&customer=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "plan",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription?perPage=-91253504&page=-91253504&plan=consectetur nulla nisi&customer=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "plan",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Disable Subscription",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "code",
									"value": "ullamco consequat",
									"description": "(Required) Subscription code"
								},
								{
									"key": "token",
									"value": "proident",
									"description": "(Required) Email token"
								},
								{
									"key": "authorization",
									"value": "-24676160",
									"description": "(Required) "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/subscription/disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription",
								"disable"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "code",
											"value": "ullamco consequat",
											"description": "(Required) Subscription code"
										},
										{
											"key": "token",
											"value": "proident",
											"description": "(Required) Email token"
										},
										{
											"key": "authorization",
											"value": "-24676160",
											"description": "(Required) "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subscription/disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"disable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "code",
											"value": "ullamco consequat",
											"description": "(Required) Subscription code"
										},
										{
											"key": "token",
											"value": "proident",
											"description": "(Required) Email token"
										},
										{
											"key": "authorization",
											"value": "-24676160",
											"description": "(Required) "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subscription/disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"disable"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "code",
											"value": "ullamco consequat",
											"description": "(Required) Subscription code"
										},
										{
											"key": "token",
											"value": "proident",
											"description": "(Required) Email token"
										},
										{
											"key": "authorization",
											"value": "-24676160",
											"description": "(Required) "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subscription/disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"disable"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable Subscription",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "code",
									"value": "ullamco consequat",
									"description": "(Required) Subscription code"
								},
								{
									"key": "token",
									"value": "proident",
									"description": "(Required) Email token"
								},
								{
									"key": "authorization",
									"value": "-24676160",
									"description": "(Required) "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/subscription/enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription",
								"enable"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "code",
											"value": "ullamco consequat",
											"description": "(Required) Subscription code"
										},
										{
											"key": "token",
											"value": "proident",
											"description": "(Required) Email token"
										},
										{
											"key": "authorization",
											"value": "-24676160",
											"description": "(Required) "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subscription/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"enable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "code",
											"value": "ullamco consequat",
											"description": "(Required) Subscription code"
										},
										{
											"key": "token",
											"value": "proident",
											"description": "(Required) Email token"
										},
										{
											"key": "authorization",
											"value": "-24676160",
											"description": "(Required) "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subscription/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"enable"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "code",
											"value": "ullamco consequat",
											"description": "(Required) Subscription code"
										},
										{
											"key": "token",
											"value": "proident",
											"description": "(Required) Email token"
										},
										{
											"key": "authorization",
											"value": "-24676160",
											"description": "(Required) "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/subscription/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"enable"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "product",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Fetch Product",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update product",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "nostrud sunt velit in",
											"description": "Name of product"
										},
										{
											"key": "description",
											"value": "do v",
											"description": "The description of the product"
										},
										{
											"key": "price",
											"value": "-21692372",
											"description": "Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "currency",
											"value": "Lorem culpa amet",
											"description": "Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD"
										},
										{
											"key": "limited",
											"value": "true",
											"description": "Set to true if the product has limited stock. Leave as false if the product has unlimited stock"
										},
										{
											"key": "quantity",
											"value": "5252489",
											"description": "Number of products in stock. Use if limited is true"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "nostrud sunt velit in",
													"description": "Name of product"
												},
												{
													"key": "description",
													"value": "do v",
													"description": "The description of the product"
												},
												{
													"key": "price",
													"value": "-21692372",
													"description": "Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "currency",
													"value": "Lorem culpa amet",
													"description": "Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD"
												},
												{
													"key": "limited",
													"value": "true",
													"description": "Set to true if the product has limited stock. Leave as false if the product has unlimited stock"
												},
												{
													"key": "quantity",
													"value": "5252489",
													"description": "Number of products in stock. Use if limited is true"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "nostrud sunt velit in",
													"description": "Name of product"
												},
												{
													"key": "description",
													"value": "do v",
													"description": "The description of the product"
												},
												{
													"key": "price",
													"value": "-21692372",
													"description": "Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "currency",
													"value": "Lorem culpa amet",
													"description": "Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD"
												},
												{
													"key": "limited",
													"value": "true",
													"description": "Set to true if the product has limited stock. Leave as false if the product has unlimited stock"
												},
												{
													"key": "quantity",
													"value": "5252489",
													"description": "Number of products in stock. Use if limited is true"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "nostrud sunt velit in",
													"description": "Name of product"
												},
												{
													"key": "description",
													"value": "do v",
													"description": "The description of the product"
												},
												{
													"key": "price",
													"value": "-21692372",
													"description": "Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "currency",
													"value": "Lorem culpa amet",
													"description": "Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD"
												},
												{
													"key": "limited",
													"value": "true",
													"description": "Set to true if the product has limited stock. Leave as false if the product has unlimited stock"
												},
												{
													"key": "quantity",
													"value": "5252489",
													"description": "Number of products in stock. Use if limited is true"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "nostrud sunt velit in",
													"description": "Name of product"
												},
												{
													"key": "description",
													"value": "do v",
													"description": "The description of the product"
												},
												{
													"key": "price",
													"value": "-21692372",
													"description": "Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "currency",
													"value": "Lorem culpa amet",
													"description": "Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD"
												},
												{
													"key": "limited",
													"value": "true",
													"description": "Set to true if the product has limited stock. Leave as false if the product has unlimited stock"
												},
												{
													"key": "quantity",
													"value": "5252489",
													"description": "Number of products in stock. Use if limited is true"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Product",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/product/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/product/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"product",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "elit cillum aute",
									"description": "(Required) Name of product"
								},
								{
									"key": "description",
									"value": "aliqua Ut",
									"description": "(Required) The description of the product"
								},
								{
									"key": "price",
									"value": "36235745",
									"description": "(Required) Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
								},
								{
									"key": "currency",
									"value": "",
									"description": "(Required) Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD"
								},
								{
									"key": "limited",
									"value": "false",
									"description": "Set to true if the product has limited stock. Leave as false if the product has unlimited stock"
								},
								{
									"key": "quantity",
									"value": "-64557125",
									"description": "Number of products in stock. Use if limited is true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/product",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "elit cillum aute",
											"description": "(Required) Name of product"
										},
										{
											"key": "description",
											"value": "aliqua Ut",
											"description": "(Required) The description of the product"
										},
										{
											"key": "price",
											"value": "36235745",
											"description": "(Required) Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "currency",
											"value": "",
											"description": "(Required) Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD"
										},
										{
											"key": "limited",
											"value": "false",
											"description": "Set to true if the product has limited stock. Leave as false if the product has unlimited stock"
										},
										{
											"key": "quantity",
											"value": "-64557125",
											"description": "Number of products in stock. Use if limited is true"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "elit cillum aute",
											"description": "(Required) Name of product"
										},
										{
											"key": "description",
											"value": "aliqua Ut",
											"description": "(Required) The description of the product"
										},
										{
											"key": "price",
											"value": "36235745",
											"description": "(Required) Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "currency",
											"value": "",
											"description": "(Required) Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD"
										},
										{
											"key": "limited",
											"value": "false",
											"description": "Set to true if the product has limited stock. Leave as false if the product has unlimited stock"
										},
										{
											"key": "quantity",
											"value": "-64557125",
											"description": "Number of products in stock. Use if limited is true"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "elit cillum aute",
											"description": "(Required) Name of product"
										},
										{
											"key": "description",
											"value": "aliqua Ut",
											"description": "(Required) The description of the product"
										},
										{
											"key": "price",
											"value": "36235745",
											"description": "(Required) Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "currency",
											"value": "",
											"description": "(Required) Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD"
										},
										{
											"key": "limited",
											"value": "false",
											"description": "Set to true if the product has limited stock. Leave as false if the product has unlimited stock"
										},
										{
											"key": "quantity",
											"value": "-64557125",
											"description": "Number of products in stock. Use if limited is true"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/product?perPage=-91253504&page=-91253504&active=true&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504"
								},
								{
									"key": "page",
									"value": "-91253504"
								},
								{
									"key": "active",
									"value": "true"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/product?perPage=-91253504&page=-91253504&active=true&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/product?perPage=-91253504&page=-91253504&active=true&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/product?perPage=-91253504&page=-91253504&active=true&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/product?perPage=-91253504&page=-91253504&active=true&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"product"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "active",
											"value": "true"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "page",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Fetch Page",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/page/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/page/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/page/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/page/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/page/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Page",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "minim aliqua",
											"description": "Name of page"
										},
										{
											"key": "description",
											"value": "amet",
											"description": "The description of the page"
										},
										{
											"key": "amount",
											"value": "69178097",
											"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "active",
											"value": "true",
											"description": "Set to false to deactivate page url"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/page/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "minim aliqua",
													"description": "Name of page"
												},
												{
													"key": "description",
													"value": "amet",
													"description": "The description of the page"
												},
												{
													"key": "amount",
													"value": "69178097",
													"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Set to false to deactivate page url"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/page/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "minim aliqua",
													"description": "Name of page"
												},
												{
													"key": "description",
													"value": "amet",
													"description": "The description of the page"
												},
												{
													"key": "amount",
													"value": "69178097",
													"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Set to false to deactivate page url"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/page/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "minim aliqua",
													"description": "Name of page"
												},
												{
													"key": "description",
													"value": "amet",
													"description": "The description of the page"
												},
												{
													"key": "amount",
													"value": "69178097",
													"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Set to false to deactivate page url"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/page/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "minim aliqua",
													"description": "Name of page"
												},
												{
													"key": "description",
													"value": "amet",
													"description": "The description of the page"
												},
												{
													"key": "amount",
													"value": "69178097",
													"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "active",
													"value": "true",
													"description": "Set to false to deactivate page url"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/page/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add Products",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product",
											"value": "dolore ut est in in",
											"description": "(Required) IDs of all products to add to a page"
										},
										{
											"key": "product",
											"value": "ipsum",
											"description": "(Required) IDs of all products to add to a page"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/page/:id/product",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page",
										":id",
										"product"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "product",
													"value": "id occaecat amet",
													"description": "(Required) IDs of all products to add to a page"
												},
												{
													"key": "product",
													"value": "irure",
													"description": "(Required) IDs of all products to add to a page"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/page/:id/product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id",
												"product"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "product",
													"value": "id occaecat amet",
													"description": "(Required) IDs of all products to add to a page"
												},
												{
													"key": "product",
													"value": "irure",
													"description": "(Required) IDs of all products to add to a page"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/page/:id/product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id",
												"product"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "product",
													"value": "id occaecat amet",
													"description": "(Required) IDs of all products to add to a page"
												},
												{
													"key": "product",
													"value": "irure",
													"description": "(Required) IDs of all products to add to a page"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/page/:id/product",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"page",
												":id",
												"product"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Page",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "officia do adipisicing occaecat",
									"description": "(Required) Name of page"
								},
								{
									"key": "description",
									"value": "dolore qui paria",
									"description": "The description of the page"
								},
								{
									"key": "amount",
									"value": "-86464229",
									"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
								},
								{
									"key": "slug",
									"value": "i",
									"description": "URL slug you would like to be associated with this page. Page will be accessible at https://paystack.com/pay/[slug]"
								},
								{
									"key": "metadata",
									"value": "dolore tempor cillum in",
									"description": "Stringified JSON object of custom data"
								},
								{
									"key": "redirect_url",
									"value": "reprehenderit laborum minim",
									"description": "If you would like Paystack to redirect to a URL upon successful payment, specify the URL here."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/page",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"page"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "sed dolor consequat aute",
											"description": "(Required) Name of page"
										},
										{
											"key": "description",
											"value": "adipisicing ea mollit",
											"description": "The description of the page"
										},
										{
											"key": "amount",
											"value": "31473052",
											"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "slug",
											"value": "ut",
											"description": "URL slug you would like to be associated with this page. Page will be accessible at https://paystack.com/pay/[slug]"
										},
										{
											"key": "metadata",
											"value": "anim cupidatat nostrud",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "redirect_url",
											"value": "laborum sunt in sint ullamco",
											"description": "If you would like Paystack to redirect to a URL upon successful payment, specify the URL here."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/page",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "sed dolor consequat aute",
											"description": "(Required) Name of page"
										},
										{
											"key": "description",
											"value": "adipisicing ea mollit",
											"description": "The description of the page"
										},
										{
											"key": "amount",
											"value": "31473052",
											"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "slug",
											"value": "ut",
											"description": "URL slug you would like to be associated with this page. Page will be accessible at https://paystack.com/pay/[slug]"
										},
										{
											"key": "metadata",
											"value": "anim cupidatat nostrud",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "redirect_url",
											"value": "laborum sunt in sint ullamco",
											"description": "If you would like Paystack to redirect to a URL upon successful payment, specify the URL here."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/page",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "sed dolor consequat aute",
											"description": "(Required) Name of page"
										},
										{
											"key": "description",
											"value": "adipisicing ea mollit",
											"description": "The description of the page"
										},
										{
											"key": "amount",
											"value": "31473052",
											"description": "Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "slug",
											"value": "ut",
											"description": "URL slug you would like to be associated with this page. Page will be accessible at https://paystack.com/pay/[slug]"
										},
										{
											"key": "metadata",
											"value": "anim cupidatat nostrud",
											"description": "Stringified JSON object of custom data"
										},
										{
											"key": "redirect_url",
											"value": "laborum sunt in sint ullamco",
											"description": "If you would like Paystack to redirect to a URL upon successful payment, specify the URL here."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/page",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Pages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/page?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"page"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/page?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/page?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/page?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/page?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check Slug Availability",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/page/check_slug_availability/:slug",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"page",
								"check_slug_availability",
								":slug"
							],
							"variable": [
								{
									"key": "slug",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/page/check_slug_availability/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page",
										"check_slug_availability",
										":slug"
									],
									"variable": [
										{
											"key": "slug",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/page/check_slug_availability/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page",
										"check_slug_availability",
										":slug"
									],
									"variable": [
										{
											"key": "slug",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/page/check_slug_availability/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page",
										"check_slug_availability",
										":slug"
									],
									"variable": [
										{
											"key": "slug",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/page/check_slug_availability/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"page",
										"check_slug_availability",
										":slug"
									],
									"variable": [
										{
											"key": "slug",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "paymentrequest",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Fetch Payment Request",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paymentrequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paymentrequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paymentrequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paymentrequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paymentrequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paymentrequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/paymentrequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paymentrequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Payment Request",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "ullamco id ad reprehenderit",
											"description": "Customer id or code"
										},
										{
											"key": "amount",
											"value": "-57212213",
											"description": "Payment request amount. Only useful if line items and tax values are ignored. \nThe endpoint will throw a friendly warning if neither is available."
										},
										{
											"key": "currency",
											"value": "sunt irure eiusmod",
											"description": "Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN"
										},
										{
											"key": "due_date",
											"value": "2010-01-08T19:26:13.137Z",
											"description": "ISO 8601 representation of request due date"
										},
										{
											"key": "description",
											"value": "ut culpa",
											"description": "A short description of the payment request"
										},
										{
											"key": "send_notification",
											"value": "false",
											"description": "Indicates whether Paystack sends an email notification to customer. Defaults to true"
										},
										{
											"key": "draft",
											"value": "false",
											"description": "Indicate if request should be saved as draft. Defaults to false and overrides send_notification"
										},
										{
											"key": "has_invoice",
											"value": "true",
											"description": "Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \neven if there are no line_items or tax passed"
										},
										{
											"key": "invoice_number",
											"value": "77972725",
											"description": "Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \noverride whatever value Paystack decides. Auto increment for subsequent invoices continue from this point."
										},
										{
											"key": "split_code",
											"value": "cupidatat amet sunt",
											"description": "The split code of the transaction split."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "customer",
													"value": "sed nostrud dolore esse dolore",
													"description": "Customer id or code"
												},
												{
													"key": "amount",
													"value": "-39548821",
													"description": "Payment request amount. Only useful if line items and tax values are ignored. \nThe endpoint will throw a friendly warning if neither is available."
												},
												{
													"key": "currency",
													"value": "cillum in voluptate dolor exercitation",
													"description": "Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN"
												},
												{
													"key": "due_date",
													"value": "1980-09-27T15:28:43.189Z",
													"description": "ISO 8601 representation of request due date"
												},
												{
													"key": "description",
													"value": "eiusmod",
													"description": "A short description of the payment request"
												},
												{
													"key": "send_notification",
													"value": "false",
													"description": "Indicates whether Paystack sends an email notification to customer. Defaults to true"
												},
												{
													"key": "draft",
													"value": "false",
													"description": "Indicate if request should be saved as draft. Defaults to false and overrides send_notification"
												},
												{
													"key": "has_invoice",
													"value": "false",
													"description": "Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \neven if there are no line_items or tax passed"
												},
												{
													"key": "invoice_number",
													"value": "2319839",
													"description": "Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \noverride whatever value Paystack decides. Auto increment for subsequent invoices continue from this point."
												},
												{
													"key": "split_code",
													"value": "proident reprehenderit magna elit",
													"description": "The split code of the transaction split."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/paymentrequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paymentrequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "customer",
													"value": "sed nostrud dolore esse dolore",
													"description": "Customer id or code"
												},
												{
													"key": "amount",
													"value": "-39548821",
													"description": "Payment request amount. Only useful if line items and tax values are ignored. \nThe endpoint will throw a friendly warning if neither is available."
												},
												{
													"key": "currency",
													"value": "cillum in voluptate dolor exercitation",
													"description": "Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN"
												},
												{
													"key": "due_date",
													"value": "1980-09-27T15:28:43.189Z",
													"description": "ISO 8601 representation of request due date"
												},
												{
													"key": "description",
													"value": "eiusmod",
													"description": "A short description of the payment request"
												},
												{
													"key": "send_notification",
													"value": "false",
													"description": "Indicates whether Paystack sends an email notification to customer. Defaults to true"
												},
												{
													"key": "draft",
													"value": "false",
													"description": "Indicate if request should be saved as draft. Defaults to false and overrides send_notification"
												},
												{
													"key": "has_invoice",
													"value": "false",
													"description": "Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \neven if there are no line_items or tax passed"
												},
												{
													"key": "invoice_number",
													"value": "2319839",
													"description": "Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \noverride whatever value Paystack decides. Auto increment for subsequent invoices continue from this point."
												},
												{
													"key": "split_code",
													"value": "proident reprehenderit magna elit",
													"description": "The split code of the transaction split."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/paymentrequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paymentrequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "customer",
													"value": "sed nostrud dolore esse dolore",
													"description": "Customer id or code"
												},
												{
													"key": "amount",
													"value": "-39548821",
													"description": "Payment request amount. Only useful if line items and tax values are ignored. \nThe endpoint will throw a friendly warning if neither is available."
												},
												{
													"key": "currency",
													"value": "cillum in voluptate dolor exercitation",
													"description": "Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN"
												},
												{
													"key": "due_date",
													"value": "1980-09-27T15:28:43.189Z",
													"description": "ISO 8601 representation of request due date"
												},
												{
													"key": "description",
													"value": "eiusmod",
													"description": "A short description of the payment request"
												},
												{
													"key": "send_notification",
													"value": "false",
													"description": "Indicates whether Paystack sends an email notification to customer. Defaults to true"
												},
												{
													"key": "draft",
													"value": "false",
													"description": "Indicate if request should be saved as draft. Defaults to false and overrides send_notification"
												},
												{
													"key": "has_invoice",
													"value": "false",
													"description": "Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \neven if there are no line_items or tax passed"
												},
												{
													"key": "invoice_number",
													"value": "2319839",
													"description": "Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \noverride whatever value Paystack decides. Auto increment for subsequent invoices continue from this point."
												},
												{
													"key": "split_code",
													"value": "proident reprehenderit magna elit",
													"description": "The split code of the transaction split."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/paymentrequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paymentrequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "customer",
													"value": "sed nostrud dolore esse dolore",
													"description": "Customer id or code"
												},
												{
													"key": "amount",
													"value": "-39548821",
													"description": "Payment request amount. Only useful if line items and tax values are ignored. \nThe endpoint will throw a friendly warning if neither is available."
												},
												{
													"key": "currency",
													"value": "cillum in voluptate dolor exercitation",
													"description": "Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN"
												},
												{
													"key": "due_date",
													"value": "1980-09-27T15:28:43.189Z",
													"description": "ISO 8601 representation of request due date"
												},
												{
													"key": "description",
													"value": "eiusmod",
													"description": "A short description of the payment request"
												},
												{
													"key": "send_notification",
													"value": "false",
													"description": "Indicates whether Paystack sends an email notification to customer. Defaults to true"
												},
												{
													"key": "draft",
													"value": "false",
													"description": "Indicate if request should be saved as draft. Defaults to false and overrides send_notification"
												},
												{
													"key": "has_invoice",
													"value": "false",
													"description": "Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \neven if there are no line_items or tax passed"
												},
												{
													"key": "invoice_number",
													"value": "2319839",
													"description": "Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \noverride whatever value Paystack decides. Auto increment for subsequent invoices continue from this point."
												},
												{
													"key": "split_code",
													"value": "proident reprehenderit magna elit",
													"description": "The split code of the transaction split."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/paymentrequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"paymentrequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Payment Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "customer",
									"value": "aliqua id voluptate",
									"description": "(Required) Customer id or code"
								},
								{
									"key": "amount",
									"value": "5363100",
									"description": "Payment request amount. Only useful if line items and tax values are ignored. \nThe endpoint will throw a friendly warning if neither is available."
								},
								{
									"key": "currency",
									"value": "Excepteur deserunt",
									"description": "Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN"
								},
								{
									"key": "due_date",
									"value": "1958-06-04T02:02:04.879Z",
									"description": "ISO 8601 representation of request due date"
								},
								{
									"key": "description",
									"value": "sit exercitation elit",
									"description": "A short description of the payment request"
								},
								{
									"key": "send_notification",
									"value": "true",
									"description": "Indicates whether Paystack sends an email notification to customer. Defaults to true"
								},
								{
									"key": "draft",
									"value": "true",
									"description": "Indicate if request should be saved as draft. Defaults to false and overrides send_notification"
								},
								{
									"key": "has_invoice",
									"value": "false",
									"description": "Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \neven if there are no line_items or tax passed"
								},
								{
									"key": "invoice_number",
									"value": "11206142",
									"description": "Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \noverride whatever value Paystack decides. Auto increment for subsequent invoices continue from this point."
								},
								{
									"key": "split_code",
									"value": "amet Duis",
									"description": "The split code of the transaction split."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/paymentrequest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paymentrequest"
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "elit in officia sint",
											"description": "(Required) Customer id or code"
										},
										{
											"key": "amount",
											"value": "55382287",
											"description": "Payment request amount. Only useful if line items and tax values are ignored. \nThe endpoint will throw a friendly warning if neither is available."
										},
										{
											"key": "currency",
											"value": "est voluptate",
											"description": "Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN"
										},
										{
											"key": "due_date",
											"value": "2005-12-05T03:52:58.401Z",
											"description": "ISO 8601 representation of request due date"
										},
										{
											"key": "description",
											"value": "Lorem ullamco labore exercitation ad",
											"description": "A short description of the payment request"
										},
										{
											"key": "send_notification",
											"value": "true",
											"description": "Indicates whether Paystack sends an email notification to customer. Defaults to true"
										},
										{
											"key": "draft",
											"value": "true",
											"description": "Indicate if request should be saved as draft. Defaults to false and overrides send_notification"
										},
										{
											"key": "has_invoice",
											"value": "true",
											"description": "Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \neven if there are no line_items or tax passed"
										},
										{
											"key": "invoice_number",
											"value": "8668139",
											"description": "Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \noverride whatever value Paystack decides. Auto increment for subsequent invoices continue from this point."
										},
										{
											"key": "split_code",
											"value": "reprehenderit aute voluptate Ut",
											"description": "The split code of the transaction split."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/paymentrequest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "elit in officia sint",
											"description": "(Required) Customer id or code"
										},
										{
											"key": "amount",
											"value": "55382287",
											"description": "Payment request amount. Only useful if line items and tax values are ignored. \nThe endpoint will throw a friendly warning if neither is available."
										},
										{
											"key": "currency",
											"value": "est voluptate",
											"description": "Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN"
										},
										{
											"key": "due_date",
											"value": "2005-12-05T03:52:58.401Z",
											"description": "ISO 8601 representation of request due date"
										},
										{
											"key": "description",
											"value": "Lorem ullamco labore exercitation ad",
											"description": "A short description of the payment request"
										},
										{
											"key": "send_notification",
											"value": "true",
											"description": "Indicates whether Paystack sends an email notification to customer. Defaults to true"
										},
										{
											"key": "draft",
											"value": "true",
											"description": "Indicate if request should be saved as draft. Defaults to false and overrides send_notification"
										},
										{
											"key": "has_invoice",
											"value": "true",
											"description": "Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \neven if there are no line_items or tax passed"
										},
										{
											"key": "invoice_number",
											"value": "8668139",
											"description": "Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \noverride whatever value Paystack decides. Auto increment for subsequent invoices continue from this point."
										},
										{
											"key": "split_code",
											"value": "reprehenderit aute voluptate Ut",
											"description": "The split code of the transaction split."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/paymentrequest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer",
											"value": "elit in officia sint",
											"description": "(Required) Customer id or code"
										},
										{
											"key": "amount",
											"value": "55382287",
											"description": "Payment request amount. Only useful if line items and tax values are ignored. \nThe endpoint will throw a friendly warning if neither is available."
										},
										{
											"key": "currency",
											"value": "est voluptate",
											"description": "Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN"
										},
										{
											"key": "due_date",
											"value": "2005-12-05T03:52:58.401Z",
											"description": "ISO 8601 representation of request due date"
										},
										{
											"key": "description",
											"value": "Lorem ullamco labore exercitation ad",
											"description": "A short description of the payment request"
										},
										{
											"key": "send_notification",
											"value": "true",
											"description": "Indicates whether Paystack sends an email notification to customer. Defaults to true"
										},
										{
											"key": "draft",
											"value": "true",
											"description": "Indicate if request should be saved as draft. Defaults to false and overrides send_notification"
										},
										{
											"key": "has_invoice",
											"value": "true",
											"description": "Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \neven if there are no line_items or tax passed"
										},
										{
											"key": "invoice_number",
											"value": "8668139",
											"description": "Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \noverride whatever value Paystack decides. Auto increment for subsequent invoices continue from this point."
										},
										{
											"key": "split_code",
											"value": "reprehenderit aute voluptate Ut",
											"description": "The split code of the transaction split."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/paymentrequest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Payment Request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/paymentrequest?perPage=-91253504&page=-91253504&customer=consectetur nulla nisi&status=consectetur nulla nisi&currency=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paymentrequest"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "customer",
									"value": "consectetur nulla nisi",
									"description": "Customer ID"
								},
								{
									"key": "status",
									"value": "consectetur nulla nisi",
									"description": "Invoice status to filter"
								},
								{
									"key": "currency",
									"value": "consectetur nulla nisi",
									"description": "If your integration supports more than one currency, choose the one to filter"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest?perPage=-91253504&page=-91253504&customer=consectetur nulla nisi&status=consectetur nulla nisi&currency=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "currency",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest?perPage=-91253504&page=-91253504&customer=consectetur nulla nisi&status=consectetur nulla nisi&currency=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "currency",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest?perPage=-91253504&page=-91253504&customer=consectetur nulla nisi&status=consectetur nulla nisi&currency=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "currency",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest?perPage=-91253504&page=-91253504&customer=consectetur nulla nisi&status=consectetur nulla nisi&currency=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "customer",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "currency",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Verify Payment Request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/paymentrequest/verify/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paymentrequest",
								"verify",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/verify/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"verify",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/verify/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"verify",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/verify/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"verify",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/verify/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"verify",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Send Notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/paymentrequest/notify/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paymentrequest",
								"notify",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/notify/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"notify",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/notify/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"notify",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/notify/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"notify",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Payment Request Total",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/paymentrequest/totals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paymentrequest",
								"totals"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/totals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"totals"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/totals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"totals"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/totals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"totals"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/totals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"totals"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Finalize Payment Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/paymentrequest/finalize/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paymentrequest",
								"finalize",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/finalize/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"finalize",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/finalize/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"finalize",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/finalize/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"finalize",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Archive Payment Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/paymentrequest/archive/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"paymentrequest",
								"archive",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/archive/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"archive",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/archive/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"archive",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/paymentrequest/archive/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"paymentrequest",
										"archive",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "settlement",
			"item": [
				{
					"name": "Fetch Settlements",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/settlement?perPage=50&page=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"settlement"
							],
							"query": [
								{
									"key": "perPage",
									"value": "50"
								},
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settlement?perPage=50&page=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settlement"
									],
									"query": [
										{
											"key": "perPage",
											"value": "50"
										},
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settlement?perPage=50&page=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settlement"
									],
									"query": [
										{
											"key": "perPage",
											"value": "50"
										},
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settlement?perPage=50&page=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settlement"
									],
									"query": [
										{
											"key": "perPage",
											"value": "50"
										},
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settlement?perPage=50&page=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settlement"
									],
									"query": [
										{
											"key": "perPage",
											"value": "50"
										},
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Settlement Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/settlement/:id/transaction?perPage=50&page=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"settlement",
								":id",
								"transaction"
							],
							"query": [
								{
									"key": "perPage",
									"value": "50"
								},
								{
									"key": "page",
									"value": "2"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "-91253504",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource created",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settlement/:id/transaction?perPage=50&page=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settlement",
										":id",
										"transaction"
									],
									"query": [
										{
											"key": "perPage",
											"value": "50"
										},
										{
											"key": "page",
											"value": "2"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "-91253504",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settlement/:id/transaction?perPage=50&page=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settlement",
										":id",
										"transaction"
									],
									"query": [
										{
											"key": "perPage",
											"value": "50"
										},
										{
											"key": "page",
											"value": "2"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "-91253504",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settlement/:id/transaction?perPage=50&page=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settlement",
										":id",
										"transaction"
									],
									"query": [
										{
											"key": "perPage",
											"value": "50"
										},
										{
											"key": "page",
											"value": "2"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "-91253504",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settlement/:id/transaction?perPage=50&page=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settlement",
										":id",
										"transaction"
									],
									"query": [
										{
											"key": "perPage",
											"value": "50"
										},
										{
											"key": "page",
											"value": "2"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "-91253504",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "transferrecipient",
			"item": [
				{
					"name": "{code}",
					"item": [
						{
							"name": "Fetch Transfer recipient",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transferrecipient/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transfer recipient code"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Transfer recipient",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "mollit laboris cillum",
											"description": "Recipient's name"
										},
										{
											"key": "email",
											"value": "officia in",
											"description": "Recipient's email address"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transferrecipient/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transfer recipient code"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "mollit laboris cillum",
													"description": "Recipient's name"
												},
												{
													"key": "email",
													"value": "officia in",
													"description": "Recipient's email address"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "mollit laboris cillum",
													"description": "Recipient's name"
												},
												{
													"key": "email",
													"value": "officia in",
													"description": "Recipient's email address"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "mollit laboris cillum",
													"description": "Recipient's name"
												},
												{
													"key": "email",
													"value": "officia in",
													"description": "Recipient's email address"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "mollit laboris cillum",
													"description": "Recipient's name"
												},
												{
													"key": "email",
													"value": "officia in",
													"description": "Recipient's email address"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Transfer Recipient",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transferrecipient/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transfer recipient code"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transferrecipient/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transferrecipient",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Transfer recipient code"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Transfer Recipient",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "type",
									"value": "mobile_money",
									"description": "(Required) Recipient Type - nuban for NGN, mobile_money for MOMO in GHS, basa for ZAR and authorization for all."
								},
								{
									"key": "name",
									"value": "Ada Lovelace",
									"description": "(Required) Recipient's name"
								},
								{
									"key": "account_number",
									"value": "0000000000",
									"description": "(Required) Recipient's bank account number"
								},
								{
									"key": "bank_code",
									"value": "011",
									"description": "(Required) Recipient's bank code. You can get the list of Bank Codes by calling the List Banks endpoint"
								},
								{
									"key": "description",
									"value": "Keeps our servers running",
									"description": "A description for this recipient"
								},
								{
									"key": "currency",
									"value": "GHS",
									"description": "Currency for the account receiving the transfer"
								},
								{
									"key": "authorization_code",
									"value": "AUTH_CODE",
									"description": "An authorization code from a previous transaction"
								},
								{
									"key": "metadata",
									"value": "{referrer_id: 123}\n",
									"description": "Stringified JSON object of custom data"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transferrecipient",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transferrecipient"
							]
						}
					},
					"response": [
						{
							"name": "Transfer Recipient Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "type",
											"value": "mobile_money",
											"description": "(Required) Recipient Type - nuban for NGN, mobile_money for MOMO in GHS, basa for ZAR and authorization for all."
										},
										{
											"key": "name",
											"value": "Ada Lovelace",
											"description": "(Required) Recipient's name"
										},
										{
											"key": "account_number",
											"value": "0000000000",
											"description": "(Required) Recipient's bank account number"
										},
										{
											"key": "bank_code",
											"value": "011",
											"description": "(Required) Recipient's bank code. You can get the list of Bank Codes by calling the List Banks endpoint"
										},
										{
											"key": "description",
											"value": "Keeps our servers running",
											"description": "A description for this recipient"
										},
										{
											"key": "currency",
											"value": "GHS",
											"description": "Currency for the account receiving the transfer"
										},
										{
											"key": "authorization_code",
											"value": "AUTH_CODE",
											"description": "An authorization code from a previous transaction"
										},
										{
											"key": "metadata",
											"value": "{referrer_id: 123}\n",
											"description": "Stringified JSON object of custom data"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transferrecipient",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer recipient created successfully\",\n  \"data\": {\n    \"active\": true,\n    \"createdAt\": \"2022-09-16T08:31:43.321Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"id\": 38770134,\n    \"integration\": 463433,\n    \"metadata\": {\n      \"referrer_id\": 123\n    },\n    \"name\": \"Ada Lovelace\",\n    \"recipient_code\": \"RCP_2fl8jmb2v3kbleb\",\n    \"type\": \"nuban\",\n    \"updatedAt\": \"2022-09-16T08:31:43.321Z\",\n    \"is_deleted\": false,\n    \"isDeleted\": false,\n    \"details\": {\n      \"authorization_code\": null,\n      \"account_number\": 0,\n      \"account_name\": \"Doe Jane Loren\",\n      \"bank_code\": 9,\n      \"bank_name\": \"First Bank of Nigeria\"\n    }\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "type",
											"value": "mobile_money",
											"description": "(Required) Recipient Type - nuban for NGN, mobile_money for MOMO in GHS, basa for ZAR and authorization for all."
										},
										{
											"key": "name",
											"value": "Ada Lovelace",
											"description": "(Required) Recipient's name"
										},
										{
											"key": "account_number",
											"value": "0000000000",
											"description": "(Required) Recipient's bank account number"
										},
										{
											"key": "bank_code",
											"value": "011",
											"description": "(Required) Recipient's bank code. You can get the list of Bank Codes by calling the List Banks endpoint"
										},
										{
											"key": "description",
											"value": "Keeps our servers running",
											"description": "A description for this recipient"
										},
										{
											"key": "currency",
											"value": "GHS",
											"description": "Currency for the account receiving the transfer"
										},
										{
											"key": "authorization_code",
											"value": "AUTH_CODE",
											"description": "An authorization code from a previous transaction"
										},
										{
											"key": "metadata",
											"value": "{referrer_id: 123}\n",
											"description": "Stringified JSON object of custom data"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transferrecipient",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "type",
											"value": "mobile_money",
											"description": "(Required) Recipient Type - nuban for NGN, mobile_money for MOMO in GHS, basa for ZAR and authorization for all."
										},
										{
											"key": "name",
											"value": "Ada Lovelace",
											"description": "(Required) Recipient's name"
										},
										{
											"key": "account_number",
											"value": "0000000000",
											"description": "(Required) Recipient's bank account number"
										},
										{
											"key": "bank_code",
											"value": "011",
											"description": "(Required) Recipient's bank code. You can get the list of Bank Codes by calling the List Banks endpoint"
										},
										{
											"key": "description",
											"value": "Keeps our servers running",
											"description": "A description for this recipient"
										},
										{
											"key": "currency",
											"value": "GHS",
											"description": "Currency for the account receiving the transfer"
										},
										{
											"key": "authorization_code",
											"value": "AUTH_CODE",
											"description": "An authorization code from a previous transaction"
										},
										{
											"key": "metadata",
											"value": "{referrer_id: 123}\n",
											"description": "Stringified JSON object of custom data"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transferrecipient",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Transfer Recipients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transferrecipient?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transferrecipient"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transferrecipient?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transferrecipient?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transferrecipient?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transferrecipient?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Bulk Create Transfer Recipient",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "batch",
									"value": "{\"type\":\"mobile_money\",\"name\":\"Ada Lovelace\",\"account_number\":\"0000000000\",\"bank_code\":\"011\",\"description\":\"Keeps our servers running\",\"currency\":\"GHS\",\"authorization_code\":\"AUTH_CODE\",\"metadata\":\"{referrer_id: 123}\\n\"}",
									"description": "(Required) A list of transfer recipient object. Each object should contain type, name, and bank_code. \nAny Create Transfer Recipient param can also be passed."
								},
								{
									"key": "batch",
									"value": "{\"type\":\"authorization\",\"name\":\"Ada Lovelace\",\"account_number\":\"0000000000\",\"bank_code\":\"011\",\"description\":\"Keeps our servers running\",\"currency\":\"ZAR\",\"authorization_code\":\"AUTH_CODE\",\"metadata\":\"{referrer_id: 123}\\n\"}",
									"description": "(Required) A list of transfer recipient object. Each object should contain type, name, and bank_code. \nAny Create Transfer Recipient param can also be passed."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transferrecipient/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transferrecipient",
								"bulk"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "batch",
											"value": "{\"type\":\"nuban\",\"name\":\"Ada Lovelace\",\"account_number\":\"0000000000\",\"bank_code\":\"011\",\"description\":\"Keeps our servers running\",\"currency\":\"NGN\",\"authorization_code\":\"AUTH_CODE\",\"metadata\":\"{referrer_id: 123}\\n\"}",
											"description": "(Required) A list of transfer recipient object. Each object should contain type, name, and bank_code. \nAny Create Transfer Recipient param can also be passed."
										},
										{
											"key": "batch",
											"value": "{\"type\":\"basa\",\"name\":\"Ada Lovelace\",\"account_number\":\"0000000000\",\"bank_code\":\"011\",\"description\":\"Keeps our servers running\",\"currency\":\"ZAR\",\"authorization_code\":\"AUTH_CODE\",\"metadata\":\"{referrer_id: 123}\\n\"}",
											"description": "(Required) A list of transfer recipient object. Each object should contain type, name, and bank_code. \nAny Create Transfer Recipient param can also be passed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transferrecipient/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient",
										"bulk"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "batch",
											"value": "{\"type\":\"nuban\",\"name\":\"Ada Lovelace\",\"account_number\":\"0000000000\",\"bank_code\":\"011\",\"description\":\"Keeps our servers running\",\"currency\":\"NGN\",\"authorization_code\":\"AUTH_CODE\",\"metadata\":\"{referrer_id: 123}\\n\"}",
											"description": "(Required) A list of transfer recipient object. Each object should contain type, name, and bank_code. \nAny Create Transfer Recipient param can also be passed."
										},
										{
											"key": "batch",
											"value": "{\"type\":\"basa\",\"name\":\"Ada Lovelace\",\"account_number\":\"0000000000\",\"bank_code\":\"011\",\"description\":\"Keeps our servers running\",\"currency\":\"ZAR\",\"authorization_code\":\"AUTH_CODE\",\"metadata\":\"{referrer_id: 123}\\n\"}",
											"description": "(Required) A list of transfer recipient object. Each object should contain type, name, and bank_code. \nAny Create Transfer Recipient param can also be passed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transferrecipient/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient",
										"bulk"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "batch",
											"value": "{\"type\":\"nuban\",\"name\":\"Ada Lovelace\",\"account_number\":\"0000000000\",\"bank_code\":\"011\",\"description\":\"Keeps our servers running\",\"currency\":\"NGN\",\"authorization_code\":\"AUTH_CODE\",\"metadata\":\"{referrer_id: 123}\\n\"}",
											"description": "(Required) A list of transfer recipient object. Each object should contain type, name, and bank_code. \nAny Create Transfer Recipient param can also be passed."
										},
										{
											"key": "batch",
											"value": "{\"type\":\"basa\",\"name\":\"Ada Lovelace\",\"account_number\":\"0000000000\",\"bank_code\":\"011\",\"description\":\"Keeps our servers running\",\"currency\":\"ZAR\",\"authorization_code\":\"AUTH_CODE\",\"metadata\":\"{referrer_id: 123}\\n\"}",
											"description": "(Required) A list of transfer recipient object. Each object should contain type, name, and bank_code. \nAny Create Transfer Recipient param can also be passed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transferrecipient/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transferrecipient",
										"bulk"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "transfer",
			"item": [
				{
					"name": "Initiate Transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "source",
									"value": "balance",
									"description": "(Required) Where should we transfer from? Only balance is allowed for now"
								},
								{
									"key": "amount",
									"value": "10234",
									"description": "(Required) Amount to transfer in kobo if currency is NGN. pesewas if currency is GHS and cents for ZAR."
								},
								{
									"key": "recipient",
									"value": "RCP_CODE",
									"description": "(Required) The transfer recipient's code"
								},
								{
									"key": "reason",
									"value": "Good job",
									"description": "The reason or narration for the transfer."
								},
								{
									"key": "currency",
									"value": "laborum velit dolor elit sunt",
									"description": "Specify the currency of the transfer. Defaults to NGN."
								},
								{
									"key": "reference",
									"value": "Transfer-123_unique",
									"description": "If specified, the field should be a unique identifier (in lowercase) for the object. \nOnly -,_ and alphanumeric characters are allowed."
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "source",
											"value": "balance",
											"description": "(Required) Where should we transfer from? Only balance is allowed for now"
										},
										{
											"key": "amount",
											"value": "10234",
											"description": "(Required) Amount to transfer in kobo if currency is NGN. pesewas if currency is GHS and cents for ZAR."
										},
										{
											"key": "recipient",
											"value": "RCP_CODE",
											"description": "(Required) The transfer recipient's code"
										},
										{
											"key": "reason",
											"value": "Good job",
											"description": "The reason or narration for the transfer."
										},
										{
											"key": "currency",
											"value": "laborum velit dolor elit sunt",
											"description": "Specify the currency of the transfer. Defaults to NGN."
										},
										{
											"key": "reference",
											"value": "Transfer-123_unique",
											"description": "If specified, the field should be a unique identifier (in lowercase) for the object. \nOnly -,_ and alphanumeric characters are allowed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer has been queued\",\n  \"data\": {\n    \"reference\": \"on5hyz9poe\",\n    \"integration\": 428626,\n    \"domain\": \"test\",\n    \"amount\": 3794800,\n    \"currency\": \"NGN\",\n    \"source\": \"balance\",\n    \"reason\": \"Holiday Flexing\",\n    \"recipient\": 6788170,\n    \"status\": \"success\",\n    \"transfer_code\": \"TRF_fiyxvgkh71e717b\",\n    \"id\": 23070321,\n    \"createdAt\": \"2020-05-13T14:22:49.687Z\",\n    \"updatedAt\": \"2020-05-13T14:22:49.687Z\"\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "source",
											"value": "balance",
											"description": "(Required) Where should we transfer from? Only balance is allowed for now"
										},
										{
											"key": "amount",
											"value": "10234",
											"description": "(Required) Amount to transfer in kobo if currency is NGN. pesewas if currency is GHS and cents for ZAR."
										},
										{
											"key": "recipient",
											"value": "RCP_CODE",
											"description": "(Required) The transfer recipient's code"
										},
										{
											"key": "reason",
											"value": "Good job",
											"description": "The reason or narration for the transfer."
										},
										{
											"key": "currency",
											"value": "laborum velit dolor elit sunt",
											"description": "Specify the currency of the transfer. Defaults to NGN."
										},
										{
											"key": "reference",
											"value": "Transfer-123_unique",
											"description": "If specified, the field should be a unique identifier (in lowercase) for the object. \nOnly -,_ and alphanumeric characters are allowed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "source",
											"value": "balance",
											"description": "(Required) Where should we transfer from? Only balance is allowed for now"
										},
										{
											"key": "amount",
											"value": "10234",
											"description": "(Required) Amount to transfer in kobo if currency is NGN. pesewas if currency is GHS and cents for ZAR."
										},
										{
											"key": "recipient",
											"value": "RCP_CODE",
											"description": "(Required) The transfer recipient's code"
										},
										{
											"key": "reason",
											"value": "Good job",
											"description": "The reason or narration for the transfer."
										},
										{
											"key": "currency",
											"value": "laborum velit dolor elit sunt",
											"description": "Specify the currency of the transfer. Defaults to NGN."
										},
										{
											"key": "reference",
											"value": "Transfer-123_unique",
											"description": "If specified, the field should be a unique identifier (in lowercase) for the object. \nOnly -,_ and alphanumeric characters are allowed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Transfers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transfer?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "status",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Finalize Transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "transfer_code",
									"value": "TRF_CODE",
									"description": "(Required) The transfer code you want to finalize"
								},
								{
									"key": "otp",
									"value": "123456",
									"description": "(Required) OTP sent to business phone to verify transfer"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transfer/finalize_transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer",
								"finalize_transfer"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transfer_code",
											"value": "TRF_CODE",
											"description": "(Required) The transfer code you want to finalize"
										},
										{
											"key": "otp",
											"value": "123456",
											"description": "(Required) OTP sent to business phone to verify transfer"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/finalize_transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"finalize_transfer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transfer_code",
											"value": "TRF_CODE",
											"description": "(Required) The transfer code you want to finalize"
										},
										{
											"key": "otp",
											"value": "123456",
											"description": "(Required) OTP sent to business phone to verify transfer"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/finalize_transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"finalize_transfer"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transfer_code",
											"value": "TRF_CODE",
											"description": "(Required) The transfer code you want to finalize"
										},
										{
											"key": "otp",
											"value": "123456",
											"description": "(Required) OTP sent to business phone to verify transfer"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/finalize_transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"finalize_transfer"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Initiate Bulk Transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "source",
									"value": "nostrud occaecat",
									"description": "Where should we transfer from? Only balance is allowed for now"
								},
								{
									"key": "transfers",
									"value": "{\"source\":\"balance\",\"amount\":10234,\"recipient\":\"RCP_CODE\",\"reason\":\"Good job\",\"currency\":\"id adipisicing magna\",\"reference\":\"Transfer-123_unique\"}",
									"description": "A list of transfer object. Each object should contain amount, recipient, and reference"
								},
								{
									"key": "transfers",
									"value": "{\"source\":\"balance\",\"amount\":10234,\"recipient\":\"RCP_CODE\",\"reason\":\"Good job\",\"currency\":\"voluptate ea incididunt\",\"reference\":\"Transfer-123_unique\"}",
									"description": "A list of transfer object. Each object should contain amount, recipient, and reference"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transfer/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer",
								"bulk"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "source",
											"value": "anim pariatu",
											"description": "Where should we transfer from? Only balance is allowed for now"
										},
										{
											"key": "transfers",
											"value": "{\"source\":\"balance\",\"amount\":10234,\"recipient\":\"RCP_CODE\",\"reason\":\"Good job\",\"currency\":\"sunt exercitation id consectetur\",\"reference\":\"Transfer-123_unique\"}",
											"description": "A list of transfer object. Each object should contain amount, recipient, and reference"
										},
										{
											"key": "transfers",
											"value": "{\"source\":\"balance\",\"amount\":10234,\"recipient\":\"RCP_CODE\",\"reason\":\"Good job\",\"currency\":\"aliquip qui incididunt\",\"reference\":\"Transfer-123_unique\"}",
											"description": "A list of transfer object. Each object should contain amount, recipient, and reference"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"bulk"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Transfer has been queued\",\n  \"data\": {\n    \"reference\": \"on5hyz9poe\",\n    \"integration\": 428626,\n    \"domain\": \"test\",\n    \"amount\": 3794800,\n    \"currency\": \"NGN\",\n    \"source\": \"balance\",\n    \"reason\": \"Holiday Flexing\",\n    \"recipient\": 6788170,\n    \"status\": \"success\",\n    \"transfer_code\": \"TRF_fiyxvgkh71e717b\",\n    \"id\": 23070321,\n    \"createdAt\": \"2020-05-13T14:22:49.687Z\",\n    \"updatedAt\": \"2020-05-13T14:22:49.687Z\"\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "source",
											"value": "anim pariatu",
											"description": "Where should we transfer from? Only balance is allowed for now"
										},
										{
											"key": "transfers",
											"value": "{\"source\":\"balance\",\"amount\":10234,\"recipient\":\"RCP_CODE\",\"reason\":\"Good job\",\"currency\":\"sunt exercitation id consectetur\",\"reference\":\"Transfer-123_unique\"}",
											"description": "A list of transfer object. Each object should contain amount, recipient, and reference"
										},
										{
											"key": "transfers",
											"value": "{\"source\":\"balance\",\"amount\":10234,\"recipient\":\"RCP_CODE\",\"reason\":\"Good job\",\"currency\":\"aliquip qui incididunt\",\"reference\":\"Transfer-123_unique\"}",
											"description": "A list of transfer object. Each object should contain amount, recipient, and reference"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"bulk"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "source",
											"value": "anim pariatu",
											"description": "Where should we transfer from? Only balance is allowed for now"
										},
										{
											"key": "transfers",
											"value": "{\"source\":\"balance\",\"amount\":10234,\"recipient\":\"RCP_CODE\",\"reason\":\"Good job\",\"currency\":\"sunt exercitation id consectetur\",\"reference\":\"Transfer-123_unique\"}",
											"description": "A list of transfer object. Each object should contain amount, recipient, and reference"
										},
										{
											"key": "transfers",
											"value": "{\"source\":\"balance\",\"amount\":10234,\"recipient\":\"RCP_CODE\",\"reason\":\"Good job\",\"currency\":\"aliquip qui incididunt\",\"reference\":\"Transfer-123_unique\"}",
											"description": "A list of transfer object. Each object should contain amount, recipient, and reference"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"bulk"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch Transfer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transfer/:code",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "consectetur nulla nisi",
									"description": "(Required) Transfer code"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transfer code"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transfer code"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transfer code"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transfer code"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Verify Transfer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transfer/verify/:reference",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer",
								"verify",
								":reference"
							],
							"variable": [
								{
									"key": "reference",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/verify/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"verify",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/verify/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"verify",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/verify/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"verify",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/verify/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"verify",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Export Transfers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transfer/export?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer",
								"export"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "status",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/export?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/export?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/export?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/export?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Resend OTP for Transfer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "transfer_code",
									"value": "dolore in reprehenderit ipsum",
									"description": "(Required) The transfer code that requires an OTP validation"
								},
								{
									"key": "reason",
									"value": "ad ex",
									"description": "(Required) Either resend_otp or transfer"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transfer/resend_otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer",
								"resend_otp"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transfer_code",
											"value": "dolore in reprehenderit ipsum",
											"description": "(Required) The transfer code that requires an OTP validation"
										},
										{
											"key": "reason",
											"value": "ad ex",
											"description": "(Required) Either resend_otp or transfer"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/resend_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"resend_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transfer_code",
											"value": "dolore in reprehenderit ipsum",
											"description": "(Required) The transfer code that requires an OTP validation"
										},
										{
											"key": "reason",
											"value": "ad ex",
											"description": "(Required) Either resend_otp or transfer"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/resend_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"resend_otp"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transfer_code",
											"value": "dolore in reprehenderit ipsum",
											"description": "(Required) The transfer code that requires an OTP validation"
										},
										{
											"key": "reason",
											"value": "ad ex",
											"description": "(Required) Either resend_otp or transfer"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/resend_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"resend_otp"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Disable OTP requirement for Transfers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transfer/disable_otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer",
								"disable_otp"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/disable_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"disable_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/disable_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"disable_otp"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/disable_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"disable_otp"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Finalize Disabling of OTP requirement for Transfers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "otp",
									"value": "123456",
									"description": "(Required) OTP sent to business phone to verify disabling OTP requirement"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/transfer/disable_otp_finalize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer",
								"disable_otp_finalize"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "otp",
											"value": "123456",
											"description": "(Required) OTP sent to business phone to verify disabling OTP requirement"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/disable_otp_finalize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"disable_otp_finalize"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "otp",
											"value": "123456",
											"description": "(Required) OTP sent to business phone to verify disabling OTP requirement"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/disable_otp_finalize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"disable_otp_finalize"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "otp",
											"value": "123456",
											"description": "(Required) OTP sent to business phone to verify disabling OTP requirement"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/transfer/disable_otp_finalize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"disable_otp_finalize"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Enable OTP requirement for Transfers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transfer/enable_otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer",
								"enable_otp"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/enable_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"enable_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/enable_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"enable_otp"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transfer/enable_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer",
										"enable_otp"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "balance",
			"item": [
				{
					"name": "Fetch Balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/balance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"balance"
							]
						},
						"description": "Check your Paystack account balance"
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/balance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"balance"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/balance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"balance"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/balance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"balance"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/balance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"balance"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Balance Ledger",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/balance/ledger?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"balance",
								"ledger"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/balance/ledger?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"balance",
										"ledger"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/balance/ledger?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"balance",
										"ledger"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/balance/ledger?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"balance",
										"ledger"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/balance/ledger?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"balance",
										"ledger"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "charge",
			"item": [
				{
					"name": "Create Charge",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "dolore consectetur"
								},
								{
									"key": "amount",
									"value": "incididunt occaecat in"
								},
								{
									"key": "authorization_code",
									"value": "reprehenderit enim"
								},
								{
									"key": "pin",
									"value": "do consequat qui"
								},
								{
									"key": "reference",
									"value": "incididunt sunt"
								},
								{
									"key": "birthday",
									"value": "2017-12-22T07:53:32.428Z"
								},
								{
									"key": "device_id",
									"value": "ullamco reprehenderit Ut in"
								},
								{
									"key": "metadata",
									"value": "consequat Lorem sit"
								},
								{
									"key": "code",
									"value": "dolor officia"
								},
								{
									"key": "account_number",
									"value": "aliqua nulla dolore"
								},
								{
									"key": "phone",
									"value": "ipsum"
								},
								{
									"key": "provider",
									"value": "velit dolor"
								},
								{
									"key": "type",
									"value": "919"
								},
								{
									"key": "provider",
									"value": "ozow"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/charge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charge"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "dolore consectetur"
										},
										{
											"key": "amount",
											"value": "incididunt occaecat in"
										},
										{
											"key": "authorization_code",
											"value": "reprehenderit enim"
										},
										{
											"key": "pin",
											"value": "do consequat qui"
										},
										{
											"key": "reference",
											"value": "incididunt sunt"
										},
										{
											"key": "birthday",
											"value": "2017-12-22T07:53:32.428Z"
										},
										{
											"key": "device_id",
											"value": "ullamco reprehenderit Ut in"
										},
										{
											"key": "metadata",
											"value": "consequat Lorem sit"
										},
										{
											"key": "code",
											"value": "dolor officia"
										},
										{
											"key": "account_number",
											"value": "aliqua nulla dolore"
										},
										{
											"key": "phone",
											"value": "ipsum"
										},
										{
											"key": "provider",
											"value": "velit dolor"
										},
										{
											"key": "type",
											"value": "919"
										},
										{
											"key": "provider",
											"value": "ozow"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "dolore consectetur"
										},
										{
											"key": "amount",
											"value": "incididunt occaecat in"
										},
										{
											"key": "authorization_code",
											"value": "reprehenderit enim"
										},
										{
											"key": "pin",
											"value": "do consequat qui"
										},
										{
											"key": "reference",
											"value": "incididunt sunt"
										},
										{
											"key": "birthday",
											"value": "2017-12-22T07:53:32.428Z"
										},
										{
											"key": "device_id",
											"value": "ullamco reprehenderit Ut in"
										},
										{
											"key": "metadata",
											"value": "consequat Lorem sit"
										},
										{
											"key": "code",
											"value": "dolor officia"
										},
										{
											"key": "account_number",
											"value": "aliqua nulla dolore"
										},
										{
											"key": "phone",
											"value": "ipsum"
										},
										{
											"key": "provider",
											"value": "velit dolor"
										},
										{
											"key": "type",
											"value": "919"
										},
										{
											"key": "provider",
											"value": "ozow"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "dolore consectetur"
										},
										{
											"key": "amount",
											"value": "incididunt occaecat in"
										},
										{
											"key": "authorization_code",
											"value": "reprehenderit enim"
										},
										{
											"key": "pin",
											"value": "do consequat qui"
										},
										{
											"key": "reference",
											"value": "incididunt sunt"
										},
										{
											"key": "birthday",
											"value": "2017-12-22T07:53:32.428Z"
										},
										{
											"key": "device_id",
											"value": "ullamco reprehenderit Ut in"
										},
										{
											"key": "metadata",
											"value": "consequat Lorem sit"
										},
										{
											"key": "code",
											"value": "dolor officia"
										},
										{
											"key": "account_number",
											"value": "aliqua nulla dolore"
										},
										{
											"key": "phone",
											"value": "ipsum"
										},
										{
											"key": "provider",
											"value": "velit dolor"
										},
										{
											"key": "type",
											"value": "919"
										},
										{
											"key": "provider",
											"value": "ozow"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Submit PIN",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "pin",
									"value": "eiusmod dolore id",
									"description": "(Required) Customer's PIN"
								},
								{
									"key": "reference",
									"value": "do commodo proident magna",
									"description": "(Required) Transaction reference that requires the PIN"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/charge/submit_pin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charge",
								"submit_pin"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "pin",
											"value": "eiusmod dolore id",
											"description": "(Required) Customer's PIN"
										},
										{
											"key": "reference",
											"value": "do commodo proident magna",
											"description": "(Required) Transaction reference that requires the PIN"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_pin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_pin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "pin",
											"value": "eiusmod dolore id",
											"description": "(Required) Customer's PIN"
										},
										{
											"key": "reference",
											"value": "do commodo proident magna",
											"description": "(Required) Transaction reference that requires the PIN"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_pin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_pin"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "pin",
											"value": "eiusmod dolore id",
											"description": "(Required) Customer's PIN"
										},
										{
											"key": "reference",
											"value": "do commodo proident magna",
											"description": "(Required) Transaction reference that requires the PIN"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_pin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_pin"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Submit OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "otp",
									"value": "ipsum ullamco proident",
									"description": "(Required) Customer's OTP"
								},
								{
									"key": "reference",
									"value": "mollit Ut",
									"description": "(Required) The reference of the ongoing transaction"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/charge/submit_otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charge",
								"submit_otp"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "otp",
											"value": "ipsum ullamco proident",
											"description": "(Required) Customer's OTP"
										},
										{
											"key": "reference",
											"value": "mollit Ut",
											"description": "(Required) The reference of the ongoing transaction"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "otp",
											"value": "ipsum ullamco proident",
											"description": "(Required) Customer's OTP"
										},
										{
											"key": "reference",
											"value": "mollit Ut",
											"description": "(Required) The reference of the ongoing transaction"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_otp"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "otp",
											"value": "ipsum ullamco proident",
											"description": "(Required) Customer's OTP"
										},
										{
											"key": "reference",
											"value": "mollit Ut",
											"description": "(Required) The reference of the ongoing transaction"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_otp"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Submit Phone",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "phone",
									"value": "adipisicing ut d",
									"description": "(Required) Customer's mobile number"
								},
								{
									"key": "reference",
									"value": "ut occaecat",
									"description": "(Required) The reference of the ongoing transaction"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/charge/submit_phone",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charge",
								"submit_phone"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "phone",
											"value": "adipisicing ut d",
											"description": "(Required) Customer's mobile number"
										},
										{
											"key": "reference",
											"value": "ut occaecat",
											"description": "(Required) The reference of the ongoing transaction"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_phone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_phone"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "phone",
											"value": "adipisicing ut d",
											"description": "(Required) Customer's mobile number"
										},
										{
											"key": "reference",
											"value": "ut occaecat",
											"description": "(Required) The reference of the ongoing transaction"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_phone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_phone"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "phone",
											"value": "adipisicing ut d",
											"description": "(Required) Customer's mobile number"
										},
										{
											"key": "reference",
											"value": "ut occaecat",
											"description": "(Required) The reference of the ongoing transaction"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_phone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_phone"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Submit Birthday",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "birthday",
									"value": "in exercitation",
									"description": "(Required) Customer's birthday in the format YYYY-MM-DD e.g 2016-09-21"
								},
								{
									"key": "reference",
									"value": "quis dolore sit do",
									"description": "(Required) The reference of the ongoing transaction"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/charge/submit_birthday",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charge",
								"submit_birthday"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "birthday",
											"value": "in exercitation",
											"description": "(Required) Customer's birthday in the format YYYY-MM-DD e.g 2016-09-21"
										},
										{
											"key": "reference",
											"value": "quis dolore sit do",
											"description": "(Required) The reference of the ongoing transaction"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_birthday",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_birthday"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "birthday",
											"value": "in exercitation",
											"description": "(Required) Customer's birthday in the format YYYY-MM-DD e.g 2016-09-21"
										},
										{
											"key": "reference",
											"value": "quis dolore sit do",
											"description": "(Required) The reference of the ongoing transaction"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_birthday",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_birthday"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "birthday",
											"value": "in exercitation",
											"description": "(Required) Customer's birthday in the format YYYY-MM-DD e.g 2016-09-21"
										},
										{
											"key": "reference",
											"value": "quis dolore sit do",
											"description": "(Required) The reference of the ongoing transaction"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_birthday",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_birthday"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Submit Address",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "address",
									"value": "in",
									"description": "(Required) Customer's address"
								},
								{
									"key": "reference",
									"value": "voluptate qui et in officia",
									"description": "(Required) The reference of the ongoing transaction"
								},
								{
									"key": "city",
									"value": "proident deserunt ipsum nostrud nulla",
									"description": "(Required) Customer's city"
								},
								{
									"key": "state",
									"value": "minim nostrud dolore sunt",
									"description": "(Required) Customer's state"
								},
								{
									"key": "zipcode",
									"value": "deserunt Excepteur",
									"description": "(Required) Customer's zipcode"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/charge/submit_address",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charge",
								"submit_address"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "address",
											"value": "in",
											"description": "(Required) Customer's address"
										},
										{
											"key": "reference",
											"value": "voluptate qui et in officia",
											"description": "(Required) The reference of the ongoing transaction"
										},
										{
											"key": "city",
											"value": "proident deserunt ipsum nostrud nulla",
											"description": "(Required) Customer's city"
										},
										{
											"key": "state",
											"value": "minim nostrud dolore sunt",
											"description": "(Required) Customer's state"
										},
										{
											"key": "zipcode",
											"value": "deserunt Excepteur",
											"description": "(Required) Customer's zipcode"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_address"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "address",
											"value": "in",
											"description": "(Required) Customer's address"
										},
										{
											"key": "reference",
											"value": "voluptate qui et in officia",
											"description": "(Required) The reference of the ongoing transaction"
										},
										{
											"key": "city",
											"value": "proident deserunt ipsum nostrud nulla",
											"description": "(Required) Customer's city"
										},
										{
											"key": "state",
											"value": "minim nostrud dolore sunt",
											"description": "(Required) Customer's state"
										},
										{
											"key": "zipcode",
											"value": "deserunt Excepteur",
											"description": "(Required) Customer's zipcode"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_address"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "address",
											"value": "in",
											"description": "(Required) Customer's address"
										},
										{
											"key": "reference",
											"value": "voluptate qui et in officia",
											"description": "(Required) The reference of the ongoing transaction"
										},
										{
											"key": "city",
											"value": "proident deserunt ipsum nostrud nulla",
											"description": "(Required) Customer's city"
										},
										{
											"key": "state",
											"value": "minim nostrud dolore sunt",
											"description": "(Required) Customer's state"
										},
										{
											"key": "zipcode",
											"value": "deserunt Excepteur",
											"description": "(Required) Customer's zipcode"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/charge/submit_address",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										"submit_address"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check pending charge",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/charge/:reference",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"charge",
								":reference"
							],
							"variable": [
								{
									"key": "reference",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/charge/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/charge/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/charge/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/charge/:reference",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"charge",
										":reference"
									],
									"variable": [
										{
											"key": "reference",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "bulkcharge",
			"item": [
				{
					"name": "{code}",
					"item": [
						{
							"name": "Fetch Bulk Charge Batch",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Batch code"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bulkcharge/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bulkcharge",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Batch code"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bulkcharge/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bulkcharge",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Batch code"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bulkcharge/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bulkcharge",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Batch code"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bulkcharge/:code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bulkcharge",
												":code"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Batch code"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Fetch Charges in a Batch",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge/:code/charges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge",
										":code",
										"charges"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Batch code"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bulkcharge/:code/charges",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bulkcharge",
												":code",
												"charges"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Batch code"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bulkcharge/:code/charges",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bulkcharge",
												":code",
												"charges"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Batch code"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bulkcharge/:code/charges",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bulkcharge",
												":code",
												"charges"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Batch code"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/bulkcharge/:code/charges",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"bulkcharge",
												":code",
												"charges"
											],
											"variable": [
												{
													"key": "code",
													"value": "consectetur nulla nisi",
													"description": "(Required) Batch code"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Initiate Bulk Charge",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "authorization",
									"value": "voluptate minim dolor ut"
								},
								{
									"key": "amount",
									"value": "Duis minim in"
								},
								{
									"key": "reference",
									"value": "irure laboris Ut qui"
								},
								{
									"key": "authorization",
									"value": "reprehenderit incididunt"
								},
								{
									"key": "amount",
									"value": "Ut e"
								},
								{
									"key": "reference",
									"value": "consequat"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/bulkcharge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bulkcharge"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "authorization",
											"value": "adipisicing dolor quis labore"
										},
										{
											"key": "amount",
											"value": "laboris incididunt ullamco veniam"
										},
										{
											"key": "reference",
											"value": "nisi non"
										},
										{
											"key": "authorization",
											"value": "Excepteur dolore commodo"
										},
										{
											"key": "amount",
											"value": "cillum nos"
										},
										{
											"key": "reference",
											"value": "eu "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/bulkcharge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "authorization",
											"value": "adipisicing dolor quis labore"
										},
										{
											"key": "amount",
											"value": "laboris incididunt ullamco veniam"
										},
										{
											"key": "reference",
											"value": "nisi non"
										},
										{
											"key": "authorization",
											"value": "Excepteur dolore commodo"
										},
										{
											"key": "amount",
											"value": "cillum nos"
										},
										{
											"key": "reference",
											"value": "eu "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/bulkcharge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "authorization",
											"value": "adipisicing dolor quis labore"
										},
										{
											"key": "amount",
											"value": "laboris incididunt ullamco veniam"
										},
										{
											"key": "reference",
											"value": "nisi non"
										},
										{
											"key": "authorization",
											"value": "Excepteur dolore commodo"
										},
										{
											"key": "amount",
											"value": "cillum nos"
										},
										{
											"key": "reference",
											"value": "eu "
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/bulkcharge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Bulk Charge Batches",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bulkcharge?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bulkcharge"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Pause Bulk Charge Batch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bulkcharge/pause/:code",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bulkcharge",
								"pause",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "consectetur nulla nisi",
									"description": "(Required) Batch code"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge/pause/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge",
										"pause",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Batch code"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge/pause/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge",
										"pause",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Batch code"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge/pause/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge",
										"pause",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Batch code"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge/pause/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge",
										"pause",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Batch code"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Resume Bulk Charge Batch",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bulkcharge/resume/:code",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bulkcharge",
								"resume",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "consectetur nulla nisi",
									"description": "(Required) Batch code"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge/resume/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge",
										"resume",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Batch code"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge/resume/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge",
										"resume",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Batch code"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge/resume/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge",
										"resume",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Batch code"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bulkcharge/resume/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bulkcharge",
										"resume",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "consectetur nulla nisi",
											"description": "(Required) Batch code"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "integration/payment session timeout",
			"item": [
				{
					"name": "Fetch Payment Session Timeout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/integration/payment_session_timeout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"integration",
								"payment_session_timeout"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/integration/payment_session_timeout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integration",
										"payment_session_timeout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/integration/payment_session_timeout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integration",
										"payment_session_timeout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/integration/payment_session_timeout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integration",
										"payment_session_timeout"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/integration/payment_session_timeout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integration",
										"payment_session_timeout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Payment Session Timeout",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "timeout",
									"value": "eiusmod est occaecat laboris",
									"description": "(Required) Time in seconds before a transaction becomes invalid"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/integration/payment_session_timeout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"integration",
								"payment_session_timeout"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "timeout",
											"value": "eiusmod est occaecat laboris",
											"description": "(Required) Time in seconds before a transaction becomes invalid"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/integration/payment_session_timeout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integration",
										"payment_session_timeout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "timeout",
											"value": "eiusmod est occaecat laboris",
											"description": "(Required) Time in seconds before a transaction becomes invalid"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/integration/payment_session_timeout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integration",
										"payment_session_timeout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "timeout",
											"value": "eiusmod est occaecat laboris",
											"description": "(Required) Time in seconds before a transaction becomes invalid"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/integration/payment_session_timeout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integration",
										"payment_session_timeout"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "timeout",
											"value": "eiusmod est occaecat laboris",
											"description": "(Required) Time in seconds before a transaction becomes invalid"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/integration/payment_session_timeout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integration",
										"payment_session_timeout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "refund",
			"item": [
				{
					"name": "Create Refund",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "transaction",
									"value": "T685312322670591",
									"description": "(Required) Transaction reference or id"
								},
								{
									"key": "amount",
									"value": "10000",
									"description": "Amount ( in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR ) to be refunded to the customer. \nAmount cannot be more than the original transaction amount"
								},
								{
									"key": "currency",
									"value": "USD",
									"description": "Three-letter ISO currency"
								},
								{
									"key": "customer_note",
									"value": "Refund for transaction T685312322670591",
									"description": "Customer reason"
								},
								{
									"key": "merchant_note",
									"value": "Refund for transaction T685312322670591 by test@me.com",
									"description": "Merchant reason"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/refund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refund"
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transaction",
											"value": "T685312322670591",
											"description": "(Required) Transaction reference or id"
										},
										{
											"key": "amount",
											"value": "10000",
											"description": "Amount ( in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR ) to be refunded to the customer. \nAmount cannot be more than the original transaction amount"
										},
										{
											"key": "currency",
											"value": "USD",
											"description": "Three-letter ISO currency"
										},
										{
											"key": "customer_note",
											"value": "Refund for transaction T685312322670591",
											"description": "Customer reason"
										},
										{
											"key": "merchant_note",
											"value": "Refund for transaction T685312322670591 by test@me.com",
											"description": "Merchant reason"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/refund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Refund has been queued for processing\",\n  \"data\": {\n    \"transaction\": {\n      \"id\": 1004723697,\n      \"domain\": \"test\",\n      \"reference\": \"T685312322670591\",\n      \"amount\": 10000,\n      \"paid_at\": \"2021-08-20T18:34:11.000Z\",\n      \"channel\": \"apple_pay\",\n      \"currency\": \"NGN\",\n      \"authorization\": {\n        \"exp_month\": null,\n        \"exp_year\": null,\n        \"account_name\": null\n      },\n      \"customer\": {\n        \"international_format_phone\": null\n      },\n      \"plan\": {},\n      \"subaccount\": {\n        \"currency\": null\n      },\n      \"split\": {},\n      \"order_id\": null,\n      \"paidAt\": \"2021-08-20T18:34:11.000Z\",\n      \"pos_transaction_data\": null,\n      \"source\": null,\n      \"fees_breakdown\": null\n    },\n    \"integration\": 412829,\n    \"deducted_amount\": 0,\n    \"channel\": null,\n    \"merchant_note\": \"Refund for transaction T685312322670591 by test@me.com\",\n    \"customer_note\": \"Refund for transaction T685312322670591\",\n    \"status\": \"pending\",\n    \"refunded_by\": \"test@me.com\",\n    \"expected_at\": \"2021-12-16T09:21:17.016Z\",\n    \"currency\": \"NGN\",\n    \"domain\": \"live\",\n    \"amount\": 10000,\n    \"fully_deducted\": false,\n    \"id\": 3018284,\n    \"createdAt\": \"2021-12-07T09:21:17.122Z\",\n    \"updatedAt\": \"2021-12-07T09:21:17.122Z\"\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transaction",
											"value": "T685312322670591",
											"description": "(Required) Transaction reference or id"
										},
										{
											"key": "amount",
											"value": "10000",
											"description": "Amount ( in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR ) to be refunded to the customer. \nAmount cannot be more than the original transaction amount"
										},
										{
											"key": "currency",
											"value": "USD",
											"description": "Three-letter ISO currency"
										},
										{
											"key": "customer_note",
											"value": "Refund for transaction T685312322670591",
											"description": "Customer reason"
										},
										{
											"key": "merchant_note",
											"value": "Refund for transaction T685312322670591 by test@me.com",
											"description": "Merchant reason"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/refund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "transaction",
											"value": "T685312322670591",
											"description": "(Required) Transaction reference or id"
										},
										{
											"key": "amount",
											"value": "10000",
											"description": "Amount ( in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR ) to be refunded to the customer. \nAmount cannot be more than the original transaction amount"
										},
										{
											"key": "currency",
											"value": "USD",
											"description": "Three-letter ISO currency"
										},
										{
											"key": "customer_note",
											"value": "Refund for transaction T685312322670591",
											"description": "Customer reason"
										},
										{
											"key": "merchant_note",
											"value": "Refund for transaction T685312322670591 by test@me.com",
											"description": "Merchant reason"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/refund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Refunds",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/refund?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refund"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refund?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refund?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refund?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refund?perPage=-91253504&page=-91253504&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch Refund",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/refund/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refund",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refund/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refund/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refund/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/refund/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"refund",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "dispute",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Fetch Dispute",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) Dispute ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dispute/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dispute/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dispute/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dispute/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Dispute",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "refund_amount",
											"value": "laborum Duis reprehenderit elit",
											"description": "(Required) The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "uploaded_filename",
											"value": "Duis Excepteur tempor mollit ea",
											"description": "Filename of attachment returned via response from the Dispute upload URL"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/dispute/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) Dispute ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "refund_amount",
													"value": "laborum Duis reprehenderit elit",
													"description": "(Required) The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "uploaded_filename",
													"value": "Duis Excepteur tempor mollit ea",
													"description": "Filename of attachment returned via response from the Dispute upload URL"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "refund_amount",
													"value": "laborum Duis reprehenderit elit",
													"description": "(Required) The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "uploaded_filename",
													"value": "Duis Excepteur tempor mollit ea",
													"description": "Filename of attachment returned via response from the Dispute upload URL"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "refund_amount",
													"value": "laborum Duis reprehenderit elit",
													"description": "(Required) The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "uploaded_filename",
													"value": "Duis Excepteur tempor mollit ea",
													"description": "Filename of attachment returned via response from the Dispute upload URL"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "refund_amount",
													"value": "laborum Duis reprehenderit elit",
													"description": "(Required) The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "uploaded_filename",
													"value": "Duis Excepteur tempor mollit ea",
													"description": "Filename of attachment returned via response from the Dispute upload URL"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Upload URL",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute/:id/upload_url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										":id",
										"upload_url"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) Dispute ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/upload_url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"upload_url"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/upload_url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"upload_url"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/upload_url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"upload_url"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/upload_url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"upload_url"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Resolve a Dispute",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "resolution",
											"value": "declined",
											"description": "(Required) Dispute resolution."
										},
										{
											"key": "message",
											"value": "deserunt aliquip",
											"description": "(Required) Reason for resolving"
										},
										{
											"key": "refund_amount",
											"value": "labore nostrud fugiat magna ut",
											"description": "(Required) The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
										},
										{
											"key": "uploaded_filename",
											"value": "voluptate ut consectetur Duis id",
											"description": "(Required) Filename of attachment returned via response from the Dispute upload URL"
										},
										{
											"key": "evidence",
											"value": "-2371096",
											"description": "Evidence Id for fraud claims"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/dispute/:id/resolve",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										":id",
										"resolve"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) Dispute ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "resolution",
													"value": "declined",
													"description": "(Required) Dispute resolution."
												},
												{
													"key": "message",
													"value": "deserunt aliquip",
													"description": "(Required) Reason for resolving"
												},
												{
													"key": "refund_amount",
													"value": "labore nostrud fugiat magna ut",
													"description": "(Required) The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "uploaded_filename",
													"value": "voluptate ut consectetur Duis id",
													"description": "(Required) Filename of attachment returned via response from the Dispute upload URL"
												},
												{
													"key": "evidence",
													"value": "-2371096",
													"description": "Evidence Id for fraud claims"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"resolve"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "resolution",
													"value": "declined",
													"description": "(Required) Dispute resolution."
												},
												{
													"key": "message",
													"value": "deserunt aliquip",
													"description": "(Required) Reason for resolving"
												},
												{
													"key": "refund_amount",
													"value": "labore nostrud fugiat magna ut",
													"description": "(Required) The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "uploaded_filename",
													"value": "voluptate ut consectetur Duis id",
													"description": "(Required) Filename of attachment returned via response from the Dispute upload URL"
												},
												{
													"key": "evidence",
													"value": "-2371096",
													"description": "Evidence Id for fraud claims"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"resolve"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "resolution",
													"value": "declined",
													"description": "(Required) Dispute resolution."
												},
												{
													"key": "message",
													"value": "deserunt aliquip",
													"description": "(Required) Reason for resolving"
												},
												{
													"key": "refund_amount",
													"value": "labore nostrud fugiat magna ut",
													"description": "(Required) The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "uploaded_filename",
													"value": "voluptate ut consectetur Duis id",
													"description": "(Required) Filename of attachment returned via response from the Dispute upload URL"
												},
												{
													"key": "evidence",
													"value": "-2371096",
													"description": "Evidence Id for fraud claims"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"resolve"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "resolution",
													"value": "declined",
													"description": "(Required) Dispute resolution."
												},
												{
													"key": "message",
													"value": "deserunt aliquip",
													"description": "(Required) Reason for resolving"
												},
												{
													"key": "refund_amount",
													"value": "labore nostrud fugiat magna ut",
													"description": "(Required) The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR"
												},
												{
													"key": "uploaded_filename",
													"value": "voluptate ut consectetur Duis id",
													"description": "(Required) Filename of attachment returned via response from the Dispute upload URL"
												},
												{
													"key": "evidence",
													"value": "-2371096",
													"description": "Evidence Id for fraud claims"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/resolve",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"resolve"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add Evidence",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "customer_email",
											"value": "sunt",
											"description": "(Required) Customer email"
										},
										{
											"key": "customer_name",
											"value": "magna non dolore",
											"description": "(Required) Customer name"
										},
										{
											"key": "customer_phone",
											"value": "proident cupidatat velit",
											"description": "(Required) Customer mobile number"
										},
										{
											"key": "service_details",
											"value": "reprehenderit eu ex",
											"description": "(Required) Details of service offered"
										},
										{
											"key": "delivery_address",
											"value": "officia",
											"description": "Delivery address"
										},
										{
											"key": "delivery_date",
											"value": "2015-06-06T03:48:14.777Z",
											"description": "ISO 8601 representation of delivery date (YYYY-MM-DD)"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/dispute/:id/evidence",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										":id",
										"evidence"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) Dispute ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "customer_email",
													"value": "sunt",
													"description": "(Required) Customer email"
												},
												{
													"key": "customer_name",
													"value": "magna non dolore",
													"description": "(Required) Customer name"
												},
												{
													"key": "customer_phone",
													"value": "proident cupidatat velit",
													"description": "(Required) Customer mobile number"
												},
												{
													"key": "service_details",
													"value": "reprehenderit eu ex",
													"description": "(Required) Details of service offered"
												},
												{
													"key": "delivery_address",
													"value": "officia",
													"description": "Delivery address"
												},
												{
													"key": "delivery_date",
													"value": "2015-06-06T03:48:14.777Z",
													"description": "ISO 8601 representation of delivery date (YYYY-MM-DD)"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/evidence",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"evidence"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
								},
								{
									"name": "Unauthorized operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "customer_email",
													"value": "sunt",
													"description": "(Required) Customer email"
												},
												{
													"key": "customer_name",
													"value": "magna non dolore",
													"description": "(Required) Customer name"
												},
												{
													"key": "customer_phone",
													"value": "proident cupidatat velit",
													"description": "(Required) Customer mobile number"
												},
												{
													"key": "service_details",
													"value": "reprehenderit eu ex",
													"description": "(Required) Details of service offered"
												},
												{
													"key": "delivery_address",
													"value": "officia",
													"description": "Delivery address"
												},
												{
													"key": "delivery_date",
													"value": "2015-06-06T03:48:14.777Z",
													"description": "ISO 8601 representation of delivery date (YYYY-MM-DD)"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/evidence",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"evidence"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "customer_email",
													"value": "sunt",
													"description": "(Required) Customer email"
												},
												{
													"key": "customer_name",
													"value": "magna non dolore",
													"description": "(Required) Customer name"
												},
												{
													"key": "customer_phone",
													"value": "proident cupidatat velit",
													"description": "(Required) Customer mobile number"
												},
												{
													"key": "service_details",
													"value": "reprehenderit eu ex",
													"description": "(Required) Details of service offered"
												},
												{
													"key": "delivery_address",
													"value": "officia",
													"description": "Delivery address"
												},
												{
													"key": "delivery_date",
													"value": "2015-06-06T03:48:14.777Z",
													"description": "ISO 8601 representation of delivery date (YYYY-MM-DD)"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/dispute/:id/evidence",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dispute",
												":id",
												"evidence"
											],
											"variable": [
												{
													"key": "id",
													"value": "consectetur nulla nisi",
													"description": "(Required) Dispute ID"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "List Disputes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dispute?perPage=-91253504&page=-91253504&status=awaiting-bank-feedback&transaction=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dispute"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "status",
									"value": "awaiting-bank-feedback",
									"description": "Dispute Status."
								},
								{
									"key": "transaction",
									"value": "consectetur nulla nisi",
									"description": "Transaction ID"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute?perPage=-91253504&page=-91253504&status=awaiting-bank-feedback&transaction=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "awaiting-bank-feedback"
										},
										{
											"key": "transaction",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute?perPage=-91253504&page=-91253504&status=awaiting-bank-feedback&transaction=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "awaiting-bank-feedback"
										},
										{
											"key": "transaction",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute?perPage=-91253504&page=-91253504&status=awaiting-bank-feedback&transaction=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "awaiting-bank-feedback"
										},
										{
											"key": "transaction",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute?perPage=-91253504&page=-91253504&status=awaiting-bank-feedback&transaction=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "awaiting-bank-feedback"
										},
										{
											"key": "transaction",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Export Disputes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dispute/export?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dispute",
								"export"
							],
							"query": [
								{
									"key": "perPage",
									"value": "-91253504",
									"description": "Number of records to fetch per page"
								},
								{
									"key": "page",
									"value": "-91253504",
									"description": "The section to retrieve"
								},
								{
									"key": "status",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "from",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The start date"
								},
								{
									"key": "to",
									"value": "1985-02-27T16:12:40.220Z",
									"description": "The end date"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute/export?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute/export?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute/export?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute/export?perPage=-91253504&page=-91253504&status=consectetur nulla nisi&from=1985-02-27T16:12:40.220Z&to=1985-02-27T16:12:40.220Z",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										"export"
									],
									"query": [
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "page",
											"value": "-91253504"
										},
										{
											"key": "status",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "from",
											"value": "1985-02-27T16:12:40.220Z"
										},
										{
											"key": "to",
											"value": "1985-02-27T16:12:40.220Z"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Transaction Disputes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dispute/transaction/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dispute",
								"transaction",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consectetur nulla nisi",
									"description": "(Required) Transaction ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute/transaction/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										"transaction",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transaction ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute/transaction/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										"transaction",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transaction ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute/transaction/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										"transaction",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transaction ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dispute/transaction/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dispute",
										"transaction",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consectetur nulla nisi",
											"description": "(Required) Transaction ID"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "bank",
			"item": [
				{
					"name": "Fetch Banks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bank?country=consectetur nulla nisi&pay_with_bank_transfer=true&use_cursor=true&perPage=-91253504&next=consectetur nulla nisi&previous=consectetur nulla nisi&gateway=consectetur nulla nisi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bank"
							],
							"query": [
								{
									"key": "country",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "pay_with_bank_transfer",
									"value": "true"
								},
								{
									"key": "use_cursor",
									"value": "true"
								},
								{
									"key": "perPage",
									"value": "-91253504"
								},
								{
									"key": "next",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "previous",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "gateway",
									"value": "consectetur nulla nisi"
								}
							]
						}
					},
					"response": [
						{
							"name": "Request successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bank?country=consectetur nulla nisi&pay_with_bank_transfer=true&use_cursor=true&perPage=-91253504&next=consectetur nulla nisi&previous=consectetur nulla nisi&gateway=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bank"
									],
									"query": [
										{
											"key": "country",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "pay_with_bank_transfer",
											"value": "true"
										},
										{
											"key": "use_cursor",
											"value": "true"
										},
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "next",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "previous",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "gateway",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bank?country=consectetur nulla nisi&pay_with_bank_transfer=true&use_cursor=true&perPage=-91253504&next=consectetur nulla nisi&previous=consectetur nulla nisi&gateway=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bank"
									],
									"query": [
										{
											"key": "country",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "pay_with_bank_transfer",
											"value": "true"
										},
										{
											"key": "use_cursor",
											"value": "true"
										},
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "next",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "previous",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "gateway",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bank?country=consectetur nulla nisi&pay_with_bank_transfer=true&use_cursor=true&perPage=-91253504&next=consectetur nulla nisi&previous=consectetur nulla nisi&gateway=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bank"
									],
									"query": [
										{
											"key": "country",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "pay_with_bank_transfer",
											"value": "true"
										},
										{
											"key": "use_cursor",
											"value": "true"
										},
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "next",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "previous",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "gateway",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bank?country=consectetur nulla nisi&pay_with_bank_transfer=true&use_cursor=true&perPage=-91253504&next=consectetur nulla nisi&previous=consectetur nulla nisi&gateway=consectetur nulla nisi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bank"
									],
									"query": [
										{
											"key": "country",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "pay_with_bank_transfer",
											"value": "true"
										},
										{
											"key": "use_cursor",
											"value": "true"
										},
										{
											"key": "perPage",
											"value": "-91253504"
										},
										{
											"key": "next",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "previous",
											"value": "consectetur nulla nisi"
										},
										{
											"key": "gateway",
											"value": "consectetur nulla nisi"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Resolve Account Number",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bank/resolve?account_number=-10692829&bank_code=51",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bank",
								"resolve"
							],
							"query": [
								{
									"key": "account_number",
									"value": "-10692829"
								},
								{
									"key": "bank_code",
									"value": "51"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resolve Account Number",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bank/resolve?account_number=-10692829&bank_code=51",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bank",
										"resolve"
									],
									"query": [
										{
											"key": "account_number",
											"value": "-10692829"
										},
										{
											"key": "bank_code",
											"value": "51"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": true,\n  \"message\": \"Account number resolved\",\n  \"data\": {\n    \"account_number\": 342391,\n    \"account_name\": \"Doe Jane Loren\",\n    \"bank_id\": 9\n  }\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bank/resolve?account_number=-10692829&bank_code=51",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bank",
										"resolve"
									],
									"query": [
										{
											"key": "account_number",
											"value": "-10692829"
										},
										{
											"key": "bank_code",
											"value": "51"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Unauthorized operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bank/resolve?account_number=-10692829&bank_code=51",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bank",
										"resolve"
									],
									"query": [
										{
											"key": "account_number",
											"value": "-10692829"
										},
										{
											"key": "bank_code",
											"value": "51"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/bank/resolve?account_number=-10692829&bank_code=51",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"bank",
										"resolve"
									],
									"query": [
										{
											"key": "account_number",
											"value": "-10692829"
										},
										{
											"key": "bank_code",
											"value": "51"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Resolve Card BIN",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/decision/bin/:bin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"decision",
						"bin",
						":bin"
					],
					"variable": [
						{
							"key": "bin",
							"value": "consectetur nulla nisi",
							"description": "(Required) "
						}
					]
				}
			},
			"response": [
				{
					"name": "Request successful",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decision/bin/:bin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decision",
								"bin",
								":bin"
							],
							"variable": [
								{
									"key": "bin",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
				},
				{
					"name": "Unauthorized operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decision/bin/:bin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decision",
								"bin",
								":bin"
							],
							"variable": [
								{
									"key": "bin",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
				},
				{
					"name": "Unauthorized operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decision/bin/:bin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decision",
								"bin",
								":bin"
							],
							"variable": [
								{
									"key": "bin",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decision/bin/:bin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decision",
								"bin",
								":bin"
							],
							"variable": [
								{
									"key": "bin",
									"value": "consectetur nulla nisi",
									"description": "(Required) "
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "List Countries",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/country",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"country"
					]
				}
			},
			"response": [
				{
					"name": "Request successful",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/country",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"country"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
				},
				{
					"name": "Unauthorized operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/country",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"country"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
				},
				{
					"name": "Unauthorized operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/country",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"country"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/country",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"country"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "List States (AVS)",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/address_verification/states?type=consectetur nulla nisi&country=consectetur nulla nisi&currency=consectetur nulla nisi",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"address_verification",
						"states"
					],
					"query": [
						{
							"key": "type",
							"value": "consectetur nulla nisi"
						},
						{
							"key": "country",
							"value": "consectetur nulla nisi"
						},
						{
							"key": "currency",
							"value": "consectetur nulla nisi"
						}
					]
				}
			},
			"response": [
				{
					"name": "Request successful",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/address_verification/states?type=consectetur nulla nisi&country=consectetur nulla nisi&currency=consectetur nulla nisi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"address_verification",
								"states"
							],
							"query": [
								{
									"key": "type",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "country",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "currency",
									"value": "consectetur nulla nisi"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"laborum non\",\n  \"data\": {}\n}"
				},
				{
					"name": "Unauthorized operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/address_verification/states?type=consectetur nulla nisi&country=consectetur nulla nisi&currency=consectetur nulla nisi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"address_verification",
								"states"
							],
							"query": [
								{
									"key": "type",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "country",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "currency",
									"value": "consectetur nulla nisi"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
				},
				{
					"name": "Unauthorized operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/address_verification/states?type=consectetur nulla nisi&country=consectetur nulla nisi&currency=consectetur nulla nisi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"address_verification",
								"states"
							],
							"query": [
								{
									"key": "type",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "country",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "currency",
									"value": "consectetur nulla nisi"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": false,\n  \"message\": \"No Authorization Header was found\"\n}"
				},
				{
					"name": "Server error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer <token>",
								"description": "Added as a part of security scheme: bearer"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/address_verification/states?type=consectetur nulla nisi&country=consectetur nulla nisi&currency=consectetur nulla nisi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"address_verification",
								"states"
							],
							"query": [
								{
									"key": "type",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "country",
									"value": "consectetur nulla nisi"
								},
								{
									"key": "currency",
									"value": "consectetur nulla nisi"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "<Bearer Token>",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.paystack.co",
			"type": "string"
		}
	]
}