{
	"info": {
		"_postman_id": "7cb26de2-98a4-49f8-bad3-004167df663a",
		"name": "ngrok Examples",
		"description": "**The following collection provides samples of using ngrok in production. It goes over white labeling, creating users, managing authtokens as well as using HTTPS edges and using the ngrok's API gateway policy features with the API.**",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43116137",
		"_collection_link": "https://www.postman.com/ngrok-api/ngrok/collection/2nlbd46/ngrok-examples?action=share&source=collection_link&creator=43116137"
	},
	"item": [
		{
			"name": "Custom Brand ngrok",
			"item": [
				{
					"name": "Create Agent Ingress Address",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {API_KEY}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\":\"{DESCRIPTION}\",\n    \"domain\": “connect.{YOUR_DOMAIN}”\n}"
						},
						"url": {
							"raw": "https://api.ngrok.com/agent_ingresses",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"agent_ingresses"
							]
						},
						"description": "Configuring a [custom agent ingress address](https://ngrok.com/docs/agent/ingress/) allows you to provide your customers with a whitelabeled endpoint to connect to the ngrok platform. Since your customers will connect using your subdomain, they can safely block other ngrok domains to control the tunnels started in their network. You'll provide a subdomain you own, such as `connect.{YOUR_DOMAIN}`, and delegate DNS (Domain Name Service) control of that subdomain to ngrok."
					},
					"response": [
						{
							"name": "Create Agent Ingress Address",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {API_KEY}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ngrok-Version",
										"value": "2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\":\"{DESCRIPTION}\",\n    \"domain\": “connect.{YOUR_DOMAIN}”\n}"
								},
								"url": {
									"raw": "https://api.ngrok.com/agent_ingresses",
									"protocol": "https",
									"host": [
										"api",
										"ngrok",
										"com"
									],
									"path": [
										"agent_ingresses"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"id\": \"agin_2esRkfoq4frGvOVUmfhytlr2zS3\",\n\t\"uri\": \"/agent_ingresses/agin_2esRkfoq4frGvOVUmfhytlr2zS3\",\n\t\"description\": \"Custom ingress address for site-to-site connectivity\",\n\t\"domain\": \"connect.configurable-domain.com\",\n\t\"ns_targets\": [\n\t\t\"ns-1329.awsdns-38.org\",\n\t\t\"ns-737.awsdns-28.net\",\n\t\t\"ns-1940.awsdns-50.co.uk\",\n\t\t\"ns-427.awsdns-53.com\"\n\t],\n\t\"region_domains\": [\n\t\t\"tunnel.us.connect.configurable-domain.com\",\n\t\t\"tunnel.us-cal-1.connect.configurable-domain.com\",\n\t\t\"tunnel.eu.connect.configurable-domain.com\",\n\t\t\"tunnel.au.connect.configurable-domain.com\",\n\t\t\"tunnel.ap.connect.configurable-domain.com\",\n\t\t\"tunnel.jp.connect.configurable-domain.com\",\n\t\t\"tunnel.sa.connect.configurable-domain.com\",\n\t\t\"tunnel.in.connect.configurable-domain.com\"\n\t],\n\t\"created_at\": \"2024-04-09T19:37:23Z\",\n\t\"certificate_management_policy\": null,\n\t\"certificate_management_status\": null\n}"
						}
					]
				},
				{
					"name": "Create Custom Wildcard Domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {API_KEY}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\":\"*.customer1.{YOUR_DOMAIN}\",\n    \"region\":\"us\"\n}"
						},
						"url": {
							"raw": "https://api.ngrok.com/reserved_domains",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"reserved_domains"
							]
						},
						"description": "Create a custom [wildcard domain](https://ngrok.com/docs/network-edge/domains-and-tcp-addresses/#wildcard-domains), which will allow you to create endpoints and receive traffic on any subdomain of your domain.\n\nFor example, you might create `\\\\\\*.customer1.{YOUR_DOMAIN}`. You would then be able to create endpoints on `app.customer1.{YOUR_DOMAIN}` and `dev.customer1.{YOUR_DOMAIN}`. It can be helpful to create a separate subdomain for each customer site you wish to connect to."
					},
					"response": [
						{
							"name": "Create Custom Wildcard Domain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {API_KEY}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ngrok-Version",
										"value": "2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\":\"*.customer1.{YOUR_DOMAIN}\",\n    \"region\":\"us\"\n}"
								},
								"url": {
									"raw": "https://api.ngrok.com/reserved_domains",
									"protocol": "https",
									"host": [
										"api",
										"ngrok",
										"com"
									],
									"path": [
										"reserved_domains"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"id\": \"rd_2euR3S7Mt07gRC6NlVGcXtghElK\",\n\t\"uri\": \"https://api.ngrok.com/reserved_domains/rd_2euR3S7Mt07gRC6NlVGcXtghElK\",\n\t\"created_at\": \"2024-04-10T12:31:16Z\",\n\t\"domain\": \"*.customer1.configurable-domain.com\",\n\t\"region\": \"\",\n\t\"cname_target\": \"hn9tzsiu5lnlbhcl.4wsgv9l5wfesschhy.ngrok-cname.com\",\n\t\"http_endpoint_configuration\": null,\n\t\"https_endpoint_configuration\": null,\n\t\"certificate\": null,\n\t\"certificate_management_policy\": {\n\t\t\"authority\": \"letsencrypt\",\n\t\t\"private_key_type\": \"ecdsa\"\n\t},\n\t\"certificate_management_status\": {\n\t\t\"renews_at\": null,\n\t\t\"provisioning_job\": {\n\t\t\t\"error_code\": null,\n\t\t\t\"msg\": \"Managed certificate provisioning in progress.\",\n\t\t\t\"started_at\": \"2024-04-10T12:31:16Z\",\n\t\t\t\"retries_at\": null\n\t\t}\n\t},\n\t\"acme_challenge_cname_target\": \"mpgy8nkj.acme-challenge.ngrok-dns.com\"\n}"
						}
					]
				}
			],
			"description": "The following folder contains the API requests for how to apply your own custom branding to the ngrok service."
		},
		{
			"name": "Scope Authtokens to a Domain",
			"item": [
				{
					"name": "Create Bot User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {API_KEY}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.ngrok.com/bot_users",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"bot_users"
							]
						},
						"description": "Create a [bot user](https://ngrok.com/docs/iam/bot-users/) so that next you can create an agent authtoken independent of any user account. A bot user does not belong to a particular user account."
					},
					"response": [
						{
							"name": "Create Bot User",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {API_KEY}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ngrok-Version",
										"value": "2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://api.ngrok.com/bot_users",
									"protocol": "https",
									"host": [
										"api",
										"ngrok",
										"com"
									],
									"path": [
										"bot_users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n\t\"id\": \"bot_2fmwUXhnImKswMgZKCsx7cnbt2l\",\n\t\"uri\": \"https://api.ngrok.com/bot_users/bot_2fmwUXhnImKswMgZKCsx7cnbt2l\",\n\t\"name\": \"new bot user from API\",\n\t\"active\": true,\n\t\"created_at\": \"2024-04-29T19:39:36Z\"\n}"
						}
					]
				},
				{
					"name": "Create Authtoken for Bot User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {API_KEY}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"testing\",\n  \"acl\": [\"bind:*.customer1.{YOUR_DOMAIN}\"],\n  \"owner_id\":\"{bot_USER_ID}\"\n}"
						},
						"url": {
							"raw": "https://api.ngrok.com/credentials",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"credentials"
							]
						},
						"description": "Create an authtoken for the bot user created and ACL bind it to a specific domain.This ACL will allow an agent with the authtoken to create tunnels on any subdomain of customer1.{YOUR_DOMAIN}."
					},
					"response": [
						{
							"name": "Create Authtoken for Bot User",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {API_KEY}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ngrok-Version",
										"value": "2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"testing\",\n  \"acl\": [\"bind:*.customer1.{YOUR_DOMAIN}\"],\n  \"owner_id\":\"{bot_USER_ID}\"\n}"
								},
								"url": {
									"raw": "https://api.ngrok.com/credentials",
									"protocol": "https",
									"host": [
										"api",
										"ngrok",
										"com"
									],
									"path": [
										"credentials"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"cr_2hkBTEdtChWMijJaumtgmG5CuzH\",\n    \"uri\": \"https://api.ngrok.com/credentials/cr_2hkBTEdtChWMijJaumtgmG5CuzH\",\n    \"created_at\": \"2024-06-11T17:50:00Z\",\n    \"description\": \"ACL Bind Bot User to Domain\",\n    \"token\": \"2hkBTEdtChWMijJaumtgmG5CuzH_4K9iaweby5qafgxGErNto\",\n    \"acl\": [\n        \"bind:*.customer1.configurable-domain.com\"\n    ],\n    \"owner_id\": \"bot_2hjy31cq4aHAa9LJJtptf0JQ2aG\"\n}"
						}
					]
				}
			],
			"description": "The following folder contains the API requests needed to create Authtokens which can only create endpoints with the domain it is bound to using our Bot Users functionality."
		},
		{
			"name": "Create HTTPS Edges",
			"item": [
				{
					"name": "Edge Creation",
					"item": [
						{
							"name": "Create Tunnel Group Backend",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {API_KEY}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ngrok-Version",
										"value": "2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"description\":\"Customer 1 Backend\",\"labels\":{\"customer1\":\"backend\"}}"
								},
								"url": {
									"raw": "https://api.ngrok.com/backends/tunnel_group",
									"protocol": "https",
									"host": [
										"api",
										"ngrok",
										"com"
									],
									"path": [
										"backends",
										"tunnel_group"
									]
								}
							},
							"response": [
								{
									"name": "Create Tunnel Group Backend",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {API_KEY}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ngrok-Version",
												"value": "2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"description\":\"Customer 1 Backend\",\"labels\":{\"customer1\":\"backend\"}}"
										},
										"url": {
											"raw": "https://api.ngrok.com/backends/tunnel_group",
											"protocol": "https",
											"host": [
												"api",
												"ngrok",
												"com"
											],
											"path": [
												"backends",
												"tunnel_group"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n    \"id\": \"bkdtg_2hkFJrG9CBP01WYTU2nVsVCUtu2\",\n    \"uri\": \"https://api.ngrok.com/backends/tunnel_group/bkdtg_2hkFJrG9CBP01WYTU2nVsVCUtu2\",\n    \"created_at\": \"2024-06-11T18:21:39Z\",\n    \"description\": \"Customer 1 Backend\",\n    \"labels\": {\n        \"customer1\": \"backend\"\n    },\n    \"tunnels\": []\n}"
								}
							]
						},
						{
							"name": "Create Edge Route",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {API_KEY}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ngrok-Version",
										"value": "2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"match\":\"/\",\"match_type\":\"path_prefix\",\"backend\":{\"enabled\":true,\"backend_id\":\"bkdtg_ID\"}}"
								},
								"url": {
									"raw": "https://api.ngrok.com/edges/https/edghts_2gsqMMMcbwCFaW2NOcg1tRZkQyX/routes",
									"protocol": "https",
									"host": [
										"api",
										"ngrok",
										"com"
									],
									"path": [
										"edges",
										"https",
										"edghts_2gsqMMMcbwCFaW2NOcg1tRZkQyX",
										"routes"
									]
								}
							},
							"response": [
								{
									"name": "Create Edge Route",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {API_KEY}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ngrok-Version",
												"value": "2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"match\":\"/\",\"match_type\":\"path_prefix\",\"backend\":{\"enabled\":true,\"backend_id\":\"bkdtg_ID\"}}"
										},
										"url": {
											"raw": "https://api.ngrok.com/edges/https/edghts_2gsqMMMcbwCFaW2NOcg1tRZkQyX/routes",
											"protocol": "https",
											"host": [
												"api",
												"ngrok",
												"com"
											],
											"path": [
												"edges",
												"https",
												"edghts_2gsqMMMcbwCFaW2NOcg1tRZkQyX",
												"routes"
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\n    \"edge_id\": \"edghts_2hkDsxuLz21laWeqfPP04MdkBXV\",\n    \"id\": \"edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21\",\n    \"created_at\": \"2024-06-11T18:25:41Z\",\n    \"match_type\": \"path_prefix\",\n    \"match\": \"/\",\n    \"uri\": \"https://api.ngrok.com/edges/https/edghts_2hkDsxuLz21laWeqfPP04MdkBXV/routes/edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21\",\n    \"backend\": {\n        \"enabled\": true,\n        \"backend\": {\n            \"id\": \"bkdtg_2hkFJrG9CBP01WYTU2nVsVCUtu2\",\n            \"uri\": \"https://api.ngrok.com/backends/tunnel_group/bkdtg_2hkFJrG9CBP01WYTU2nVsVCUtu2\"\n        }\n    },\n    \"ip_restriction\": null,\n    \"circuit_breaker\": null,\n    \"compression\": null,\n    \"request_headers\": null,\n    \"response_headers\": null,\n    \"webhook_verification\": null,\n    \"oauth\": null,\n    \"saml\": null,\n    \"oidc\": null,\n    \"websocket_tcp_converter\": null,\n    \"user_agent_filter\": null,\n    \"policy\": null\n}"
								}
							]
						},
						{
							"name": "Create Edge",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {API_KEY}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ngrok-Version",
										"value": "2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"description\":\"HTTPS Edge\",\"hostports\":[\"customer1.{YOUR_DOMAIN}\"]}"
								},
								"url": {
									"raw": "https://api.ngrok.com/edges/https",
									"protocol": "https",
									"host": [
										"api",
										"ngrok",
										"com"
									],
									"path": [
										"edges",
										"https"
									]
								}
							},
							"response": [
								{
									"name": "Create Edge",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {API_KEY}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ngrok-Version",
												"value": "2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"description\":\"HTTPS Edge\",\"hostports\":[\"customer1.{YOUR_DOMAIN}\"]}"
										},
										"url": {
											"raw": "https://api.ngrok.com/edges/https",
											"protocol": "https",
											"host": [
												"api",
												"ngrok",
												"com"
											],
											"path": [
												"edges",
												"https"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "    \"id\": \"edghts_2hkC5eOK7T7Vi0rgB9l4qpEigZ7\",\n    \"description\": \"HTTPS Edge\",\n    \"created_at\": \"2024-06-11T17:55:06Z\",\n    \"uri\": \"https://api.ngrok.com/edges/https/edghts_2hkC5eOK7T7Vi0rgB9l4qpEigZ7\",\n    \"hostports\": [\n        \"customer1.configurable-domain.com\"\n    ],\n    \"mutual_tls\": null,\n    \"tls_termination\": null,\n    \"routes\": []\n}"
								}
							]
						}
					],
					"description": "**The requests below will create the edge --**"
				},
				{
					"name": "Policy Creation",
					"item": [
						{
							"name": "Add IP Policy to Edge",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ngrok-Version",
										"value": "2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"inbound\": [\n        {\n            \"expressions\": null,\n            \"actions\": [\n                {\n                    \"type\": \"restrict-ips\",\n                    \"config\": {\n                        \"enforce\": true,\n                        \"allow\": [\n                            \"1.1.1.1/32\"\n                        ],\n                        \"deny\": [\n                            \"e680:5791:be4c:5739:d959:7b94:6d54:d4b4/128\"\n                        ]\n                    }\n                }\n            ],\n            \"name\": \"Block traffic from unwanted countries\"\n        }\n    ],\n    \"outbound\": null\n}"
								},
								"url": {
									"raw": "https://api.ngrok.com/edges/https/edghts_2hkDsxuLz21laWeqfPP04MdkBXV/routes/edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21/policy",
									"protocol": "https",
									"host": [
										"api",
										"ngrok",
										"com"
									],
									"path": [
										"edges",
										"https",
										"edghts_2hkDsxuLz21laWeqfPP04MdkBXV",
										"routes",
										"edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21",
										"policy"
									]
								}
							},
							"response": [
								{
									"name": "Add Policy",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "{{vault:bearer-token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Ngrok-Version",
												"value": "2"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"enabled\": true,\n    \"inbound\": [\n        {\n            \"expressions\": null,\n            \"actions\": [\n                {\n                    \"type\": \"restrict-ips\",\n                    \"config\": {\n                        \"enforce\": true,\n                        \"allow\": [\n                            \"1.1.1.1/32\"\n                        ],\n                        \"deny\": [\n                            \"e680:5791:be4c:5739:d959:7b94:6d54:d4b4/128\"\n                        ]\n                    }\n                }\n            ],\n            \"name\": \"Block/Allows traffic from IPs\"\n        }\n    ],\n    \"outbound\": null\n}"
										},
										"url": {
											"raw": "https://api.ngrok.com/edges/https/edghts_2hkDsxuLz21laWeqfPP04MdkBXV/routes/edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21/policy",
											"protocol": "https",
											"host": [
												"api",
												"ngrok",
												"com"
											],
											"path": [
												"edges",
												"https",
												"edghts_2hkDsxuLz21laWeqfPP04MdkBXV",
												"routes",
												"edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21",
												"policy"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Tue, 11 Jun 2024 21:38:49 GMT"
										},
										{
											"key": "Ngrok-Operation-Id",
											"value": "op_2hkdIWGpWbM7EPzxLdKZ21iKLzV"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"enabled\": true,\n    \"inbound\": [\n        {\n            \"expressions\": null,\n            \"actions\": [\n                {\n                    \"type\": \"restrict-ips\",\n                    \"config\": {\n                        \"allow\": [\n                            \"1.1.1.1/32\"\n                        ],\n                        \"deny\": [\n                            \"e680:5791:be4c:5739:d959:7b94:6d54:d4b4/128\"\n                        ],\n                        \"enforce\": true\n                    }\n                }\n            ],\n            \"name\": \"Block/Allows traffic from IPs\"\n        }\n    ],\n    \"outbound\": null\n}"
								}
							]
						},
						{
							"name": "Add JWT + Rate Limiting",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ngrok-Version",
										"value": "2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"inbound\": [\n    {\n      \"expressions\": null,\n      \"name\": \"Add JWT authentication and rate limiting\",\n      \"actions\": [\n        {\n          \"type\": \"rate-limit\",\n          \"config\": {\n            \"name\": \"Only allow 30 requests per minute\",\n            \"algorithm\": \"sliding_window\",\n            \"capacity\": 30,\n            \"rate\": \"60s\",\n            \"bucket_key\": [\n              \"req.Headers['x-api-key']\"\n            ]\n          }\n        },\n        {\n          \"type\": \"jwt-validation\",\n          \"config\": {\n            \"issuer\": {\n              \"allow_list\": [\n                {\n                  \"value\": \"https://<YOUR-AUTH-PROVIDER>\"\n                }\n              ]\n            },\n            \"audience\": {\n              \"allow_list\": [\n                {\n                  \"value\": \"<YOUR-NGROK-DOMAIN>\"\n                }\n              ]\n            },\n            \"http\": {\n              \"tokens\": [\n                {\n                  \"type\": \"jwt\",\n                  \"method\": \"header\",\n                  \"name\": \"Authorization\",\n                  \"prefix\": \"Bearer \"\n                }\n              ]\n            },\n            \"jws\": {\n              \"allowed_algorithms\": [\n                \"RS256\"\n              ],\n              \"keys\": {\n                \"sources\": {\n                  \"additional_jkus\": [\n                    \"https://<YOUR-AUTH-PROVIDER>/.well-known/jwks.json\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"outbound\": null\n}"
								},
								"url": {
									"raw": "https://api.ngrok.com/edges/https/edghts_2hkDsxuLz21laWeqfPP04MdkBXV/routes/edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21/policy",
									"protocol": "https",
									"host": [
										"api",
										"ngrok",
										"com"
									],
									"path": [
										"edges",
										"https",
										"edghts_2hkDsxuLz21laWeqfPP04MdkBXV",
										"routes",
										"edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21",
										"policy"
									]
								}
							},
							"response": []
						},
						{
							"name": "Manipulate Headers",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Ngrok-Version",
										"value": "2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"inbound\": [\n    {\n      \"expressions\": null,\n      \"name\": \"Add headers to requests\",\n      \"actions\": [\n        {\n          \"type\": \"add-headers\",\n          \"config\": {\n            \"headers\": {\n              \"is-ngrok\": \"1\",\n              \"country\": \"${.ngrok.geo.country_code}\"\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"outbound\": null\n}"
								},
								"url": {
									"raw": "https://api.ngrok.com/edges/https/edghts_2hkDsxuLz21laWeqfPP04MdkBXV/routes/edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21/policy",
									"protocol": "https",
									"host": [
										"api",
										"ngrok",
										"com"
									],
									"path": [
										"edges",
										"https",
										"edghts_2hkDsxuLz21laWeqfPP04MdkBXV",
										"routes",
										"edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21",
										"policy"
									]
								}
							},
							"response": []
						}
					],
					"description": "**The following requests will add policies to the edge created --**"
				}
			],
			"description": "**To add traffic policies (i.e. IP Restrictions, mTLS, etc.) you should first create an HTTPS Edge which will allow you to add policy modules to traffic coming to an endpoint.**"
		},
		{
			"name": "Create TCP Edges",
			"item": [
				{
					"name": "TCP Reserved Addr Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{vault:bearer-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"description\":\"TCP Customer 1\"}"
						},
						"url": {
							"raw": "https://api.ngrok.com/reserved_addrs",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"reserved_addrs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tunnel Group Backend Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{vault:bearer-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"description\":\"Customer 1 Tunnel Group\",\"labels\":{\"Customer1\":\"TCP\"}}"
						},
						"url": {
							"raw": "https://api.ngrok.com/backends/tunnel_group",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"backends",
								"tunnel_group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edge (Addr+TunGroup) Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{vault:bearer-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"description\":\"test-tcp-edge\",\"metadata\":\"{\\\"environment\\\": \\\"staging\\\"}\",\"hostports\":[\"1.tcp.ngrok.io:26767\"],\"backend\":{\"enabled\":true,\"backend_id\":\"bkdtg_2YoXF3bwSxvMB4L1U8HffER6ofr\"}}"
						},
						"url": {
							"raw": "https://api.ngrok.com/edges/tcp",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"edges",
								"tcp"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://f58400f3443f.ngrok.app/api/tunnels Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"test\",\"addr\":\"22\", \"labels\":[\"Customer1=TCP\"]}"
						},
						"url": {
							"raw": "https://customer1agent.tunnels.example-poc.com/api/tunnels",
							"protocol": "https",
							"host": [
								"customer1agent",
								"tunnels",
								"example-poc",
								"com"
							],
							"path": [
								"api",
								"tunnels"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Load Balanced Edges",
			"item": [
				{
					"name": "CREATE EDGE + HOST NAME Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer "
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"description\":\"HTTPS Edge\",\"hostports\":[\".shub.ngrok.app:443\"],\"mutual_tls\":\"enabled\"}"
						},
						"url": {
							"raw": "https://api.ngrok.com/edges/https",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"edges",
								"https"
							]
						},
						"description": "After reserving a domain, create an ngrok edge to connect that domain to"
					},
					"response": []
				},
				{
					"name": "CREATE TUNNEL GROUP WITH LABEL Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer "
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"description\":\"PARIS Server\",\"labels\":{\"location\":\"paris\"}}"
						},
						"url": {
							"raw": "https://api.ngrok.com/backends/tunnel_group",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"backends",
								"tunnel_group"
							]
						},
						"description": "create first backend service -- this one is in paris"
					},
					"response": []
				},
				{
					"name": "CREATE ROUTE AT EDGE WITH ONE TUNNEL GROUP FIRST Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer "
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"match\":\"/\",\"match_type\":\"path_prefix\",\"backend\":{\"enabled\":true,\"backend_id\":\"bkdtg_2fmhvMV5VWj5s3ej1e9CGc3rjk3\"}}"
						},
						"url": {
							"raw": "https://api.ngrok.com/edges/https/edghts_2fmhteEytTHZDRI3JtEz2XNyeM8/routes",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"edges",
								"https",
								"edghts_2fmhteEytTHZDRI3JtEz2XNyeM8",
								"routes"
							]
						},
						"description": "### Create Edge Route\n\nThis endpoint allows the user to create a new edge route.\n\n#### Request Body\n\n- `match` (string): The pattern to match the request path.\n- `match_type` (string): The type of matching to be applied.\n- `backend` (object): Details of the backend server.\n    - `enabled` (boolean): Indicates if the backend is enabled.\n    - `backend_id` (string): The ID of the backend server.\n\n#### Response\n\nUpon successful creation, the server responds with a status code of 201 and a JSON object containing the details of the newly created edge route, including:\n\n- `edge_id` (string): The ID of the edge.\n- `id` (string): The ID of the route.\n- `created_at` (string): The timestamp of creation.\n- `match_type` (string): The type of matching applied.\n- `match` (string): The pattern to match the request path.\n- `uri` (string): The URI of the route.\n- `backend` (object): Details of the backend server.\n    - `enabled` (boolean): Indicates if the backend is enabled.\n    - `backend` (object): Details of the backend server, including ID and URI.\n- Additional properties like `ip_restriction`, `circuit_breaker`, `compression`, `request_headers`, `response_headers`, `webhook_verification`, `oauth`, `saml`, `oidc`, `websocket_tcp_converter`, `user_agent_filter`, and `policy` may also be included in the response."
					},
					"response": []
				},
				{
					"name": "CREATE WEIGHTED BACKEND WITH ALL TUNNEL GROUPS Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer "
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"backends\":{\"bkdtg_2fmhuOGYSr0AHt1xW89Ei1pPrcn\":1,\"bkdtg_2fmhus3Dv8xRrPyuLlKwpwiP83f\":1,\"bkdtg_2fmhv2w8uTUy76XXiS17gQ4wfNk\":1,\"bkdtg_2fmhvMV5VWj5s3ej1e9CGc3rjk3\":1,\"bkdtg_2fmnDliT5fLqTqIdhsgezOPh13H\":1},\"description\":\"PARIS/WARSAW/AMSTERDAM/GCP/K8S\"}"
						},
						"url": {
							"raw": "https://api.ngrok.com/backends/weighted",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"backends",
								"weighted"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH EDGE AND ROUTE WITH NEW WEIGHTED BACKEND Copy",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer "
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Ngrok-Version",
								"value": "2"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"backend\":{\"enabled\":true,\"backend_id\":\"bkdwd_2fmnGutpg7qv4vMrzG3CXX0xdIF\"}}"
						},
						"url": {
							"raw": "https://api.ngrok.com/edges/https/edghts_2fmhteEytTHZDRI3JtEz2XNyeM8/routes/edghtsrt_2fmiCjWM2IGGT8sbtCZmXvCjNNP",
							"protocol": "https",
							"host": [
								"api",
								"ngrok",
								"com"
							],
							"path": [
								"edges",
								"https",
								"edghts_2fmhteEytTHZDRI3JtEz2XNyeM8",
								"routes",
								"edghtsrt_2fmiCjWM2IGGT8sbtCZmXvCjNNP"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}