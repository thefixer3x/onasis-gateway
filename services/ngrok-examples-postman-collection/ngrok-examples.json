{
  "name": "ngrok-examples",
  "version": "1.0.0",
  "baseUrl": "",
  "authentication": {
    "type": "bearer",
    "config": {
      "inferred": true
    }
  },
  "endpoints": [
    {
      "name": "Create Agent Ingress Address",
      "path": "/https://api.ngrok.com/agent_ingresses",
      "method": "POST",
      "description": "Configuring a [custom agent ingress address](https://ngrok.com/docs/agent/ingress/) allows you to provide your customers with a whitelabeled endpoint to connect to the ngrok platform. Since your customers will connect using your subdomain, they can safely block other ngrok domains to control the tunnels started in their network. You'll provide a subdomain you own, such as `connect.{YOUR_DOMAIN}`, and delegate DNS (Domain Name Service) control of that subdomain to ngrok.",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer {API_KEY}",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\n    \"description\":\"{DESCRIPTION}\",\n    \"domain\": “connect.{YOUR_DOMAIN}”\n}",
          "contentType": "text/plain"
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Create Custom Wildcard Domain",
      "path": "/https://api.ngrok.com/reserved_domains",
      "method": "POST",
      "description": "Create a custom [wildcard domain](https://ngrok.com/docs/network-edge/domains-and-tcp-addresses/#wildcard-domains), which will allow you to create endpoints and receive traffic on any subdomain of your domain.\n\nFor example, you might create `\\\\\\*.customer1.{YOUR_DOMAIN}`. You would then be able to create endpoints on `app.customer1.{YOUR_DOMAIN}` and `dev.customer1.{YOUR_DOMAIN}`. It can be helpful to create a separate subdomain for each customer site you wish to connect to.",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer {API_KEY}",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\n    \"domain\":\"*.customer1.{YOUR_DOMAIN}\",\n    \"region\":\"us\"\n}",
          "contentType": "application/json",
          "schema": {
            "domain": "*.customer1.{YOUR_DOMAIN}",
            "region": "us"
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Create Bot User",
      "path": "/https://api.ngrok.com/bot_users",
      "method": "POST",
      "description": "Create a [bot user](https://ngrok.com/docs/iam/bot-users/) so that next you can create an agent authtoken independent of any user account. A bot user does not belong to a particular user account.",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer {API_KEY}",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "",
          "contentType": "text/plain"
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Create Authtoken for Bot User",
      "path": "/https://api.ngrok.com/credentials",
      "method": "POST",
      "description": "Create an authtoken for the bot user created and ACL bind it to a specific domain.This ACL will allow an agent with the authtoken to create tunnels on any subdomain of customer1.{YOUR_DOMAIN}.",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer {API_KEY}",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\n  \"description\": \"testing\",\n  \"acl\": [\"bind:*.customer1.{YOUR_DOMAIN}\"],\n  \"owner_id\":\"{bot_USER_ID}\"\n}",
          "contentType": "application/json",
          "schema": {
            "description": "testing",
            "acl": [
              "bind:*.customer1.{YOUR_DOMAIN}"
            ],
            "owner_id": "{bot_USER_ID}"
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Create Tunnel Group Backend",
      "path": "/https://api.ngrok.com/backends/tunnel_group",
      "method": "POST",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer {API_KEY}",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"description\":\"Customer 1 Backend\",\"labels\":{\"customer1\":\"backend\"}}",
          "contentType": "application/json",
          "schema": {
            "description": "Customer 1 Backend",
            "labels": {
              "customer1": "backend"
            }
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Create Edge Route",
      "path": "/https://api.ngrok.com/edges/https/edghts_2gsqMMMcbwCFaW2NOcg1tRZkQyX/routes",
      "method": "POST",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer {API_KEY}",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"match\":\"/\",\"match_type\":\"path_prefix\",\"backend\":{\"enabled\":true,\"backend_id\":\"bkdtg_ID\"}}",
          "contentType": "application/json",
          "schema": {
            "match": "/",
            "match_type": "path_prefix",
            "backend": {
              "enabled": true,
              "backend_id": "bkdtg_ID"
            }
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Create Edge",
      "path": "/https://api.ngrok.com/edges/https",
      "method": "POST",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer {API_KEY}",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"description\":\"HTTPS Edge\",\"hostports\":[\"customer1.{YOUR_DOMAIN}\"]}",
          "contentType": "application/json",
          "schema": {
            "description": "HTTPS Edge",
            "hostports": [
              "customer1.{YOUR_DOMAIN}"
            ]
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Add IP Policy to Edge",
      "path": "/https://api.ngrok.com/edges/https/edghts_2hkDsxuLz21laWeqfPP04MdkBXV/routes/edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21/policy",
      "method": "PUT",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer ",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\n    \"enabled\": true,\n    \"inbound\": [\n        {\n            \"expressions\": null,\n            \"actions\": [\n                {\n                    \"type\": \"restrict-ips\",\n                    \"config\": {\n                        \"enforce\": true,\n                        \"allow\": [\n                            \"1.1.1.1/32\"\n                        ],\n                        \"deny\": [\n                            \"e680:5791:be4c:5739:d959:7b94:6d54:d4b4/128\"\n                        ]\n                    }\n                }\n            ],\n            \"name\": \"Block traffic from unwanted countries\"\n        }\n    ],\n    \"outbound\": null\n}",
          "contentType": "application/json",
          "schema": {
            "enabled": true,
            "inbound": [
              {
                "expressions": null,
                "actions": [
                  {
                    "type": "restrict-ips",
                    "config": {
                      "enforce": true,
                      "allow": [
                        "1.1.1.1/32"
                      ],
                      "deny": [
                        "e680:5791:be4c:5739:d959:7b94:6d54:d4b4/128"
                      ]
                    }
                  }
                ],
                "name": "Block traffic from unwanted countries"
              }
            ],
            "outbound": null
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Add JWT + Rate Limiting",
      "path": "/https://api.ngrok.com/edges/https/edghts_2hkDsxuLz21laWeqfPP04MdkBXV/routes/edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21/policy",
      "method": "PUT",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer ",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\n  \"enabled\": true,\n  \"inbound\": [\n    {\n      \"expressions\": null,\n      \"name\": \"Add JWT authentication and rate limiting\",\n      \"actions\": [\n        {\n          \"type\": \"rate-limit\",\n          \"config\": {\n            \"name\": \"Only allow 30 requests per minute\",\n            \"algorithm\": \"sliding_window\",\n            \"capacity\": 30,\n            \"rate\": \"60s\",\n            \"bucket_key\": [\n              \"req.Headers['x-api-key']\"\n            ]\n          }\n        },\n        {\n          \"type\": \"jwt-validation\",\n          \"config\": {\n            \"issuer\": {\n              \"allow_list\": [\n                {\n                  \"value\": \"https://<YOUR-AUTH-PROVIDER>\"\n                }\n              ]\n            },\n            \"audience\": {\n              \"allow_list\": [\n                {\n                  \"value\": \"<YOUR-NGROK-DOMAIN>\"\n                }\n              ]\n            },\n            \"http\": {\n              \"tokens\": [\n                {\n                  \"type\": \"jwt\",\n                  \"method\": \"header\",\n                  \"name\": \"Authorization\",\n                  \"prefix\": \"Bearer \"\n                }\n              ]\n            },\n            \"jws\": {\n              \"allowed_algorithms\": [\n                \"RS256\"\n              ],\n              \"keys\": {\n                \"sources\": {\n                  \"additional_jkus\": [\n                    \"https://<YOUR-AUTH-PROVIDER>/.well-known/jwks.json\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"outbound\": null\n}",
          "contentType": "application/json",
          "schema": {
            "enabled": true,
            "inbound": [
              {
                "expressions": null,
                "name": "Add JWT authentication and rate limiting",
                "actions": [
                  {
                    "type": "rate-limit",
                    "config": {
                      "name": "Only allow 30 requests per minute",
                      "algorithm": "sliding_window",
                      "capacity": 30,
                      "rate": "60s",
                      "bucket_key": [
                        "req.Headers['x-api-key']"
                      ]
                    }
                  },
                  {
                    "type": "jwt-validation",
                    "config": {
                      "issuer": {
                        "allow_list": [
                          {
                            "value": "https://<YOUR-AUTH-PROVIDER>"
                          }
                        ]
                      },
                      "audience": {
                        "allow_list": [
                          {
                            "value": "<YOUR-NGROK-DOMAIN>"
                          }
                        ]
                      },
                      "http": {
                        "tokens": [
                          {
                            "type": "jwt",
                            "method": "header",
                            "name": "Authorization",
                            "prefix": "Bearer "
                          }
                        ]
                      },
                      "jws": {
                        "allowed_algorithms": [
                          "RS256"
                        ],
                        "keys": {
                          "sources": {
                            "additional_jkus": [
                              "https://<YOUR-AUTH-PROVIDER>/.well-known/jwks.json"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "outbound": null
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Manipulate Headers",
      "path": "/https://api.ngrok.com/edges/https/edghts_2hkDsxuLz21laWeqfPP04MdkBXV/routes/edghtsrt_2hkFoJjcr0tggH8rsHInCcI9b21/policy",
      "method": "PUT",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer ",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\n  \"enabled\": true,\n  \"inbound\": [\n    {\n      \"expressions\": null,\n      \"name\": \"Add headers to requests\",\n      \"actions\": [\n        {\n          \"type\": \"add-headers\",\n          \"config\": {\n            \"headers\": {\n              \"is-ngrok\": \"1\",\n              \"country\": \"${.ngrok.geo.country_code}\"\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"outbound\": null\n}",
          "contentType": "application/json",
          "schema": {
            "enabled": true,
            "inbound": [
              {
                "expressions": null,
                "name": "Add headers to requests",
                "actions": [
                  {
                    "type": "add-headers",
                    "config": {
                      "headers": {
                        "is-ngrok": "1",
                        "country": "${.ngrok.geo.country_code}"
                      }
                    }
                  }
                ]
              }
            ],
            "outbound": null
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "TCP Reserved Addr Copy",
      "path": "/https://api.ngrok.com/reserved_addrs",
      "method": "POST",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "{{vault:bearer-token}}",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"description\":\"TCP Customer 1\"}",
          "contentType": "application/json",
          "schema": {
            "description": "TCP Customer 1"
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Tunnel Group Backend Copy",
      "path": "/https://api.ngrok.com/backends/tunnel_group",
      "method": "POST",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "{{vault:bearer-token}}",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"description\":\"Customer 1 Tunnel Group\",\"labels\":{\"Customer1\":\"TCP\"}}",
          "contentType": "application/json",
          "schema": {
            "description": "Customer 1 Tunnel Group",
            "labels": {
              "Customer1": "TCP"
            }
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "Edge (Addr+TunGroup) Copy",
      "path": "/https://api.ngrok.com/edges/tcp",
      "method": "POST",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "{{vault:bearer-token}}",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"description\":\"test-tcp-edge\",\"metadata\":\"{\\\"environment\\\": \\\"staging\\\"}\",\"hostports\":[\"1.tcp.ngrok.io:26767\"],\"backend\":{\"enabled\":true,\"backend_id\":\"bkdtg_2YoXF3bwSxvMB4L1U8HffER6ofr\"}}",
          "contentType": "application/json",
          "schema": {
            "description": "test-tcp-edge",
            "metadata": "{\"environment\": \"staging\"}",
            "hostports": [
              "1.tcp.ngrok.io:26767"
            ],
            "backend": {
              "enabled": true,
              "backend_id": "bkdtg_2YoXF3bwSxvMB4L1U8HffER6ofr"
            }
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "https://f58400f3443f.ngrok.app/api/tunnels Copy",
      "path": "/https://customer1agent.tunnels.example-poc.com/api/tunnels",
      "method": "POST",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"name\":\"test\",\"addr\":\"22\", \"labels\":[\"Customer1=TCP\"]}",
          "contentType": "application/json",
          "schema": {
            "name": "test",
            "addr": "22",
            "labels": [
              "Customer1=TCP"
            ]
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "CREATE EDGE + HOST NAME Copy",
      "path": "/https://api.ngrok.com/edges/https",
      "method": "POST",
      "description": "After reserving a domain, create an ngrok edge to connect that domain to",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer ",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"description\":\"HTTPS Edge\",\"hostports\":[\".shub.ngrok.app:443\"],\"mutual_tls\":\"enabled\"}",
          "contentType": "application/json",
          "schema": {
            "description": "HTTPS Edge",
            "hostports": [
              ".shub.ngrok.app:443"
            ],
            "mutual_tls": "enabled"
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "CREATE TUNNEL GROUP WITH LABEL Copy",
      "path": "/https://api.ngrok.com/backends/tunnel_group",
      "method": "POST",
      "description": "create first backend service -- this one is in paris",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer ",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"description\":\"PARIS Server\",\"labels\":{\"location\":\"paris\"}}",
          "contentType": "application/json",
          "schema": {
            "description": "PARIS Server",
            "labels": {
              "location": "paris"
            }
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "CREATE ROUTE AT EDGE WITH ONE TUNNEL GROUP FIRST Copy",
      "path": "/https://api.ngrok.com/edges/https/edghts_2fmhteEytTHZDRI3JtEz2XNyeM8/routes",
      "method": "POST",
      "description": "### Create Edge Route\n\nThis endpoint allows the user to create a new edge route.\n\n#### Request Body\n\n- `match` (string): The pattern to match the request path.\n- `match_type` (string): The type of matching to be applied.\n- `backend` (object): Details of the backend server.\n    - `enabled` (boolean): Indicates if the backend is enabled.\n    - `backend_id` (string): The ID of the backend server.\n\n#### Response\n\nUpon successful creation, the server responds with a status code of 201 and a JSON object containing the details of the newly created edge route, including:\n\n- `edge_id` (string): The ID of the edge.\n- `id` (string): The ID of the route.\n- `created_at` (string): The timestamp of creation.\n- `match_type` (string): The type of matching applied.\n- `match` (string): The pattern to match the request path.\n- `uri` (string): The URI of the route.\n- `backend` (object): Details of the backend server.\n    - `enabled` (boolean): Indicates if the backend is enabled.\n    - `backend` (object): Details of the backend server, including ID and URI.\n- Additional properties like `ip_restriction`, `circuit_breaker`, `compression`, `request_headers`, `response_headers`, `webhook_verification`, `oauth`, `saml`, `oidc`, `websocket_tcp_converter`, `user_agent_filter`, and `policy` may also be included in the response.",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer ",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"match\":\"/\",\"match_type\":\"path_prefix\",\"backend\":{\"enabled\":true,\"backend_id\":\"bkdtg_2fmhvMV5VWj5s3ej1e9CGc3rjk3\"}}",
          "contentType": "application/json",
          "schema": {
            "match": "/",
            "match_type": "path_prefix",
            "backend": {
              "enabled": true,
              "backend_id": "bkdtg_2fmhvMV5VWj5s3ej1e9CGc3rjk3"
            }
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "CREATE WEIGHTED BACKEND WITH ALL TUNNEL GROUPS Copy",
      "path": "/https://api.ngrok.com/backends/weighted",
      "method": "POST",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer ",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"backends\":{\"bkdtg_2fmhuOGYSr0AHt1xW89Ei1pPrcn\":1,\"bkdtg_2fmhus3Dv8xRrPyuLlKwpwiP83f\":1,\"bkdtg_2fmhv2w8uTUy76XXiS17gQ4wfNk\":1,\"bkdtg_2fmhvMV5VWj5s3ej1e9CGc3rjk3\":1,\"bkdtg_2fmnDliT5fLqTqIdhsgezOPh13H\":1},\"description\":\"PARIS/WARSAW/AMSTERDAM/GCP/K8S\"}",
          "contentType": "application/json",
          "schema": {
            "backends": {
              "bkdtg_2fmhuOGYSr0AHt1xW89Ei1pPrcn": 1,
              "bkdtg_2fmhus3Dv8xRrPyuLlKwpwiP83f": 1,
              "bkdtg_2fmhv2w8uTUy76XXiS17gQ4wfNk": 1,
              "bkdtg_2fmhvMV5VWj5s3ej1e9CGc3rjk3": 1,
              "bkdtg_2fmnDliT5fLqTqIdhsgezOPh13H": 1
            },
            "description": "PARIS/WARSAW/AMSTERDAM/GCP/K8S"
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    },
    {
      "name": "PATCH EDGE AND ROUTE WITH NEW WEIGHTED BACKEND Copy",
      "path": "/https://api.ngrok.com/edges/https/edghts_2fmhteEytTHZDRI3JtEz2XNyeM8/routes/edghtsrt_2fmiCjWM2IGGT8sbtCZmXvCjNNP",
      "method": "PATCH",
      "description": "",
      "parameters": {
        "path": [],
        "query": [],
        "headers": [
          {
            "name": "Authorization",
            "value": "Bearer ",
            "description": "",
            "required": true
          },
          {
            "name": "Content-Type",
            "value": "application/json",
            "description": "",
            "required": true
          },
          {
            "name": "Ngrok-Version",
            "value": "2",
            "description": "",
            "required": true
          }
        ],
        "body": {
          "type": "raw",
          "description": "",
          "content": "{\"backend\":{\"enabled\":true,\"backend_id\":\"bkdwd_2fmnGutpg7qv4vMrzG3CXX0xdIF\"}}",
          "contentType": "application/json",
          "schema": {
            "backend": {
              "enabled": true,
              "backend_id": "bkdwd_2fmnGutpg7qv4vMrzG3CXX0xdIF"
            }
          }
        }
      },
      "responses": [],
      "rateLimit": null,
      "authentication": null
    }
  ],
  "webhooks": [],
  "dependencies": [],
  "capabilities": [
    "infrastructure",
    "authentication"
  ],
  "metadata": {
    "description": "**The following collection provides samples of using ngrok in production. It goes over white labeling, creating users, managing authtokens as well as using HTTPS edges and using the ngrok's API gateway policy features with the API.**",
    "postmanId": "7cb26de2-98a4-49f8-bad3-004167df663a",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "exporterId": "43116137",
    "variables": {}
  }
}